[{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rbioapi.moosa-r.com/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Moosa Rezwani  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. rbioapi Copyright (C) 2020 Moosa Rezwani This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"what-does-rbioapi-do","dir":"Articles","previous_headings":"","what":"What does rbioapi do?","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"Currently fully supports Enrichr, JASPAR, miEAA, PANTHER, Reactome, STRING, UniProt! goal rbioapi provide user-friendly consistent interface biological databases services: way insulates user technicalities using web services API creates unified easy--use interface biological medical web services. rbioapi, need technical knowledge web services API learn work new package every biologic service database. ongoing project; New databases services added periodically. Feel free suggest databases services often use.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"what-is-supported-by-rbioapi","dir":"Articles","previous_headings":"","what":"What is Supported by rbioapi?","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"rbioapi dedicated Biological Medical databases web services. Currently, rbioapi supports covers every API resources following services: (alphabetical order): CRAN (Stable) version: (https://cran.r-project.org/package=rbioapi) Enrichr (rbioapi vignette article) (new) JASPAR (rbioapi vignette article) (new) miEAA (rbioapi vignette article) PANTHER (rbioapi vignette article) Reactome (rbioapi vignette article) STRING (rbioapi vignette article) UniProt (rbioapi vignette article) Github (Developmental) version: (https://github.com/moosa-r/rbioapi/): currently none services dedicated vignette article. However, article, write general framework rbioapi. Make sure check vignette article service learn use . Note : rbioapi ongoing project. New databases services implemented periodically order gradually make package comprehensive possible. see often using certain database/service? Feel free suggest database/service creating issue GitHub repository. appreciate suggestions.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"How-to-install","dir":"Articles","previous_headings":"","what":"How to install?","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"can install stable release version rbioapi CRAN : However, CRAN version released every 1-2 months, can install recent (development) version GitHub :","code":"install.packages(\"rbioapi\") install.packages(\"remotes\") remotes::install_github(\"moosa-r/rbioapi\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"design-philosophy-of-rbioapi","dir":"Articles","previous_headings":"","what":"Design philosophy of rbioapi","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"structure functions consistent across data-bases services. means , using functions communicate different web services require new learning /training. Using package entail simple plugging values function’s arguments running code. function explicitly demand user run another function beforehand. functions’ organization, names, arguments faithful possible original API resources. package scalable easy collaborate. end, exported functions template-based structure internal functions hierarchical organization subset needed contributors. Beginner users able conveniently use rbioapi completely insulated technicalities. functions’ documentations extensive, self-contained, working examples, integrated corresponding web services terms citing information links guides. addition main vignette article, supported database web service vignette articles.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"naming-conventions","dir":"Articles","previous_headings":"","what":"Naming conventions","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"make namespace organized, functions named following pattern: example, rba_string_version() call STRING’s version resource. Thus, version, rbioapi function one following naming schema: rba_enrichr_* rba_jaspar_* rba_mieaa_* rba_panther_* rba_reactome_* rba_string_* rba_uniprot_* three exceptions: rba_options(), rba_connection_test(), rba_pages(); helper functions. later.","code":"rba_[service_name]_[resource_name] rba_string_version() #> Retrieving the STRING database version and address used by rbioapi. #> $string_version #> [1] \"11.5\" #>  #> $stable_address #> [1] \"https://version-11-5.string-db.org\""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"changing-the-options","dir":"Articles","previous_headings":"","what":"Changing the options","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"provide control, multiple options implemented. See manual rba_options() function full description available options. short, options govern rbioapi’s connection servers (e.g. timeout, retry) options modify experience rbioapi (e.g. verbose, diagnostics, save_file). two ways may use change option. Also, can get table available rbioapi options current values calling rba_options()without argument: Now, let us consider ways can alter settings:","code":"rba_options() #>   rbioapi_option current_value            allowed_value #> 1    diagnostics         FALSE     Logical (TRUE/FALSE) #> 2       dir_name       rbioapi                Character #> 3       progress         FALSE     Logical (TRUE/FALSE) #> 4      retry_max             1   Numeric (0 or greater) #> 5     retry_wait            10   Numeric (0 or greater) #> 6      save_file         FALSE     Logical (TRUE/FALSE) #> 7     skip_error          TRUE     Logical (TRUE/FALSE) #> 8        timeout           600 Numeric (0.1 or greater) #> 9        verbose          TRUE     Logical (TRUE/FALSE)"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"changing-the-options-change-the-option-globally","dir":"Articles","previous_headings":"Changing the options","what":"Change the option globally","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"Changing option globally means rest R session, rbioapi function respect changed option. , use rba_options(). argument function corresponds certain option; Thus running function desired new values, globally alter rbioapi option. example:","code":"rba_options(save_file = TRUE) ## From now on, the raw file of server's response will be saved to your working directory. rba_options(verbose = FALSE) ## From now on, the package will be quiet."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"changing-the-options-change-the-option-only-within-a-function-call","dir":"Articles","previous_headings":"Changing the options","what":"Change the option only within a function call","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"can pass additional arguments rbioapi function using “ellipsis” (familiar … dot dot dot!). Meaning can call function additional arguments ‘option = value’ pair. way, changes options confined within particular function call. example:","code":"## Save the server's raw response file: x <- rba_reactome_species(only_main = TRUE, save_file = \"reactome_species.json\") ## Also, in the case of connection failure, retry up to 10 times: x <- rba_reactome_species(only_main = TRUE,                          save_file = \"reactome_species.json\", retry_max = 10) ## Run these codes in your own R session to see the difference. ## show internal diagnostics boring details x <- rba_uniprot_proteins_crossref(db_id = \"CD40\", db_name = \"HGNC\", diagnostics = TRUE) ## The next function you call, will still use the default rbioapi options x <- rba_uniprot_proteins_crossref(db_id = \"CD40\", db_name = \"HGNC\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"connection-test","dir":"Articles","previous_headings":"","what":"Connection test","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"second exception functions’ naming schema rba_connection_test(). Run simple function check connection supported services/databases. encounter errors using rbioapi, kindly run function make sure internet connection servers fine.","code":"rba_connection_test(print_output = TRUE) #> Checking Your connection to the Databases currently supported by rbioapi: #> --->>> Internet : #> +++ Connected to the Internet. #> --->>> Enrichr : #> +++ The server is responding. #> --->>> Ensembl : #> +++ The server is responding. #> --->>> JASPAR : #> +++ The server is responding. #> --->>> miEAA : #> +++ The server is responding. #> --->>> PANTHER : #> +++ The server is responding. #> --->>> Reactome Content Service : #> +++ The server is responding. #> --->>> Reactome Analysis Service : #> +++ The server is responding. #> --->>> STRING : #> +++ The server is responding. #> --->>> UniProt : #> +++ The server is responding."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"multi-pages","dir":"Articles","previous_headings":"","what":"Iterating over paginated results","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"API resources return paginated responses. particularly common API resources return potentially large responses. rbioapi, cases, arguments “page_number” (default value 1) -API resource allows- “page_size”. save time, may use rba_pages(). function iterate pages specified. Take rba_uniprot_taxonomy_name example. function allows search taxonomic nodes UniProt. response can potentially huge size, UniProt returns paginated response. example, search nodes contain “adenovirus”, large number hits: can see, server returned first page response, retrieve pages, make separate calls change “page_number” argument within call, simply use rba_pages() demonstrated : can see, done : Wrap function call qoute() enter input rba_pages(). Replace argument want iterate , string format: “pages:start:end”. example, supplied page_number = “pages:1:3” get responses pages 1 3.","code":"adeno <- rba_uniprot_taxonomy_name(name = \"adenovirus\",                                    search_type = \"contain\",                                    page_number = 1) str(adeno, max.level = 2) #> List of 2 #>  $ taxonomies:'data.frame':  200 obs. of  8 variables: #>   ..$ taxonomyId    : int [1:200] 10509 10510 10511 10512 10513 10514 10515 10519 10521 10522 ... #>   ..$ mnemonic      : chr [1:200] \"9ADEN\" \"ADEB3\" \"ADEB7\" \"9ADEN\" ... #>   ..$ scientificName: chr [1:200] \"Mastadenovirus\" \"Bovine adenovirus B serotype 3\" \"Bovine adenovirus 7\" \"Canine adenovirus 1\" ... #>   ..$ rank          : chr [1:200] \"genus\" \"no rank\" \"no rank\" \"no rank\" ... #>   ..$ superregnum   : chr [1:200] \"V\" \"V\" \"V\" \"V\" ... #>   ..$ hidden        : logi [1:200] FALSE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ commonName    : chr [1:200] NA \"BAdV-3\" \"BAdV-7\" NA ... #>   ..$ synonym       : chr [1:200] NA \"Mastadenovirus bos3\" NA NA ... #>  $ pageInfo  :List of 3 #>   ..$ resultsPerPage: int 200 #>   ..$ currentPage   : int 1 #>   ..$ totalRecords  : int 951 adeno_pages = rba_pages(quote(rba_uniprot_taxonomy_name(name = \"adenovirus\",                                    search_type = \"contain\",                                    page_number = \"pages:1:3\"))) ## You can inspect the structure of the response: str(adeno_pages, max.level = 2) #> List of 3 #>  $ page_1:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3 #>  $ page_2:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3 #>  $ page_3:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"how-to-cite","dir":"Articles","previous_headings":"","what":"How and what to cite?","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"rbioapi interface databases services. Thus, used rbioapi published research, kindly addition citing rbioapi, make sure fully properly cite databases/services used. Suggested citations added functions’ manuals, “references” section; Nevertheless, user’s responsibility check proper citations properly cite database/services used. cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172 cite Enrichr. (See Enrichr website) cite JASPAR. (See JASPAR website) cite miEAA. (See miEAA website) cite PANTHER. (See PANTHER website) cite Reactome. (See Reactome website) cite STRING. (See STRING website) cite UniProt. (See UniProt website)","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"code-of-conduct","dir":"Articles","previous_headings":"","what":"Code of conduct","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"using rbioapi, remember querying data web services; please considerate. Never flood server requests, need download unreasonably large volumes data, directly downloading databases supplied services may better alternative. see rate-limited server (HTTP 429 Many Requests response status code), know sending requests server interprets normal behavior, please seek methods use Sys.sleep() requests.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"what-next","dir":"Articles","previous_headings":"","what":"What next?","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"supported service dedicated vignette article. Make sure check . Enrichr (Documentation site) JASPAR (Documentation site) miEAA (Documentation site) PANTHER (Documentation site) Reactome (Documentation site) STRING (Documentation site) UniProt (Documentation site) also adding vignette articles focusing tasks workflows: rbioapi: -Representation (Enrichment) Analysis R (documentation site)","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"article rbioapi documentation site Functions references rbioapi documentation site","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"1: rbioapi: User-Friendly R Interface to Biologic Web Services' API","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       xfun_0.30         cli_3.2.0         jquerylib_0.1.4   #> [13] htmltools_0.5.2   systemfonts_1.0.4 yaml_2.3.5        digest_0.6.29     #> [17] rprojroot_2.0.3   pkgdown_2.0.2     textshaping_0.3.6 purrr_0.3.4       #> [21] sass_0.4.1        fs_1.5.2          curl_4.3.2        memoise_2.0.1     #> [25] cachem_1.0.6      evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     #> [29] compiler_4.1.3    bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"how-to-install","dir":"Articles","previous_headings":"","what":"How to install?","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"can install stable release version rbioapi CRAN : However, CRAN version released every 1-2 months, can install recent (development) version GitHub :","code":"install.packages(\"rbioapi\") install.packages(\"remotes\") remotes::install_github(\"moosa-r/rbioapi\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"what-does-rbioapi-do","dir":"Articles","previous_headings":"","what":"What is Over-representation analysis?","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"-representation (enrichment) analysis commonly performed one’s analysis yields list genes, proteins, entities. delve details refer D. W. Huang et al.: Nucleic Acids Res. 37, 1 (2009) thorough review subject. short, perform analysis, addition algorithms, two data required: 1) gene list derived analysis. 2) Gene sets, genes grouped based shared property concept (pathway, role diseases, physical location, etc.). -representation analysis, can compare gene list find member gene set -represented, meaning present list manner can explained chance alone.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"over-representation-enrichment-analysis-in-r-with-rbioapi","dir":"Articles","previous_headings":"","what":"Over-representation (enrichment) analysis in R with rbioapi","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"Many web services supported rbioapi provide tools perform -representation analysis gene sets curated databases. Among databases web services currently supported rbioapi, Enrichr, miEAA, PANTHER, Reactome, STRING provide services. service dedicated vignette article rbioapi. focus performing -representation (enrichment) analysis. demonstration, use results Galani et al.: Nat. Immunol. 22, 32 (2021) compared gene expression critically ill non-critically ill COVID patients healthy individuals. assign variable 1214 differentially expressed genes (DEGs) exclusively induced critically ill COVID patients. Next, see insights can extract list. Please Note: -representation services return large responses. reduce size vignette article, display first 10 rows Data Frame.","code":"covid_critical <- c(\"TXNDC5\", \"GABRR2\", \"MGAM2\", \"LOC200772\", \"LYPD2\", \"IFI27\", \"RPH3A\", \"OTOF\", \"NBPF8\", \"CLEC4F\", \"CNGB1\", \"HIST1H2BF\", \"HIF1A\", \"SDC1\", \"TUBB8\", \"FBXO39\", \"TPSB2\", \"CD177\", \"LRRN3\", \"EBLN2\", \"PCSK9\", \"ELK2AP\", \"UCHL1\", \"C22orf15\", \"LPO\", \"C3orf20\", \"CLRN1-AS1\", \"GPR75\", \"CA12\", \"RAB19\", \"CHRFAM7A\", \"CRYGN\", \"DLGAP5\", \"BTBD8\", \"LOC100272216\", \"PRG3\", \"CYP46A1\", \"LOC102723604\", \"PPAP2B\", \"C4BPA\", \"SPESP1\", \"LILRP2\", \"UBE2Q1-AS1\", \"MIR3945\", \"NOMO3\", \"MEG3\", \"LOC400927-CSNK1E\", \"MIR6732\", \"MIR590\", \"PPP1R3G\", \"PYCR1\", \"ARHGAP42\", \"MMP8\", \"HMMR\", \"P3H2\", \"ACER1\", \"NOG\", \"RAB39A\", \"ANTXRLP1\", \"LINC00266-3\", \"GPRC5D\", \"MCM10\", \"TSPY26P\", \"ANKRD36BP1\", \"GBP1P1\", \"PRL\", \"CYP1A1\", \"KIF4A\", \"LOC102724323\", \"SERPINB10\", \"GSTA4\", \"TRIM51\", \"MIXL1\", \"RNASE1\", \"CASC8\", \"MAOA\", \"XCL1\", \"ADAMTS2\", \"LOC101929125\", \"DCANP1\", \"BHLHA15\", \"ANOS1\", \"SLC18A1\", \"CCDC150\", \"CAV1\", \"SH3BP5\", \"LINC00398\", \"NCOA2\", \"SPATC1\", \"SHROOM2\", \"GPR27\", \"LRRC26\", \"RNF169\", \"USP3-AS1\", \"VWA7\", \"ROCK2\", \"FSTL4\", \"METTL7B\", \"CYP4F29P\", \"LEF1-AS1\", \"HORMAD2-AS1\", \"FBXO15\", \"PPTC7\", \"TYMS\", \"PPP4R2\", \"ZNF608\", \"FAM46B\", \"PCSK1N\", \"LINC00623\", \"CASC5\", \"ZNF224\", \"DENND2C\", \"WDR86\", \"PTGR1\", \"SPATA3-AS1\", \"LOC101927412\", \"KIF14\", \"MMP28\", \"PBK\", \"VMO1\", \"ADCY3\", \"HIST1H2BO\", \"FTO-IT1\", \"MIR342\", \"FANK1\", \"CRIP2\", \"TIAF1\", \"LOC344887\", \"OLFM4\", \"MKNK1-AS1\", \"ZDHHC19\", \"SEPT14\", \"EPSTI1\", \"FOXC1\", \"MIR616\", \"KRT72\", \"LINC01347\", \"LOC101928100\", \"KIAA0895\", \"BOK\", \"HIST1H2AI\", \"DBH-AS1\", \"ADORA2A-AS1\", \"MED12L\", \"SAMD15\", \"TARM1\", \"SMTNL1\", \"POU5F1P3\", \"LINC00968\", \"OAS3\", \"LOC103091866\", \"SH3RF3-AS1\", \"NBPF10\", \"APAF1\", \"SLC2A14\", \"SYT17\", \"ETV3\", \"SHROOM4\", \"AOAH-IT1\", \"NAIP\", \"ALAS2\", \"GLIS3\", \"ADAM17\", \"OLFM1\", \"PCAT29\", \"TNFRSF18\", \"DNASE1L3\", \"IGF2BP3\", \"LINC01271\", \"AP3B2\", \"TXNDC2\", \"CEP55\", \"SIGLEC1\", \"RAB3IL1\", \"PLD4\", \"KIFC1\", \"LINC00487\", \"ABHD12B\", \"ITGA7\", \"GJB6\", \"CARD14\", \"LRRN2\", \"MPO\", \"KLRC3\", \"LOC100507487\", \"SCGB3A1\", \"CD38\", \"LRRN1\", \"SYCP2L\", \"ANLN\", \"ASPM\", \"OAS1\", \"IFI44L\", \"CDCA3\", \"HLA-DQB2\", \"ANO9\", \"NUDT11\", \"HMP19\", \"DEPDC1\", \"GPR84\", \"PLEKHF1\", \"PI16\", \"RDH5\", \"TMED8\", \"LINC00824\", \"SEPT4\", \"CLIC3\", \"B4GALNT3\", \"OLAH\", \"ITGA1\", \"FOXI1\", \"LOC100506142\", \"CDC20\", \"HAGHL\", \"GTSCR1\", \"B3GALNT1\", \"SOCS3\", \"PCDH1\", \"TAS2R20\", \"CDC25A\", \"NPDC1\", \"LOC100505915\", \"XCL2\", \"TIAM2\", \"LOC100288069\", \"IL34\", \"IL18R1\", \"CYYR1\", \"ZNF888\", \"FAM20A\", \"MDS2\", \"ABCA13\", \"KCNJ1\", \"SLC4A9\", \"EXO1\", \"LAIR2\", \"IQSEC3\", \"SCT\", \"SLC26A8\", \"ESCO2\", \"ZDHHC1\", \"SNORA63\", \"FBLN5\", \"PRUNE2\", \"CPNE7\", \"CDHR2\", \"GNLY\", \"APOBEC3B\", \"MFSD9\", \"SYNGR3\", \"PTGDS\", \"COL17A1\", \"TBC1D14\", \"AIM2\", \"TMEM204\", \"FAM157B\", \"ZBED6\", \"EME1\", \"ATF3\", \"KBTBD4\", \"LUC7L2\", \"KIF20A\", \"LCNL1\", \"DOCK9-AS2\", \"KCNE1\", \"BTN2A3P\", \"KL\", \"IDI2-AS1\", \"EBF4\", \"SCARNA21\", \"CEACAM6\", \"KLRB1\", \"C5orf58\", \"ASXL2\", \"RPLP0P2\", \"CYTL1\", \"DIAPH3\", \"DOK7\", \"RFFL\", \"KIAA1107\", \"TAS2R40\", \"CCDC186\", \"COL6A2\", \"METRN\", \"SNHG25\", \"RRM2\", \"CYP1B1\", \"NEURL1\", \"MATK\", \"SLC28A3\", \"JCHAIN\", \"TNFRSF4\", \"FXYD1\", \"PLLP\", \"ARHGAP23\", \"SNORA4\", \"MYO18A\", \"ZNF429\", \"NRN1\", \"HJURP\", \"TCN1\", \"CDC6\", \"ATP5EP2\", \"SOAT2\", \"LOC101928034\", \"EIF2AK2\", \"ARG1\", \"SLC16A11\", \"TPPP3\", \"TMEM38A\", \"TOP2A\", \"LINC00999\", \"DGCR9\", \"RCAN3AS\", \"CACNG6\", \"LINC01550\", \"TDRD9\", \"CARD17\", \"GBP6\", \"LY6E\", \"RSAD2\", \"LOC100506258\", \"PRKAR2A\", \"LTF\", \"IGLL5\", \"FAM157A\", \"LOC101927018\", \"CCR7\", \"FLJ42351\", \"IFIT3\", \"GPRIN1\", \"ANXA9\", \"TMEM119\", \"PARGP1\", \"A3GALT2\", \"CYP4F22\", \"PLBD1-AS1\", \"SELM\", \"NCR3\", \"PNPLA1\", \"BMX\", \"LOC440461\", \"GAMT\", \"CEACAM8\", \"TP53I13\", \"C1orf226\", \"SKA3\", \"DHRS3\", \"VRK2\", \"BTBD19\", \"ETNK2\", \"LOC728323\", \"NRIR\", \"ADORA2A\", \"GPR162\", \"CMPK2\", \"USP18\", \"P4HA2\", \"TSSK4\", \"EP300\", \"CLEC4D\", \"LCN10\", \"GPR141\", \"SH2D2A\", \"GOLGA7B\", \"TMIGD2\", \"DLL4\", \"HP\", \"CXCR6\", \"MAL\", \"C12orf57\", \"CLIC5\", \"IL4\", \"IGFBP6\", \"ERG\", \"HERC3\", \"KEL\", \"MSX2P1\", \"INE1\", \"PRKCQ-AS1\", \"FHIT\", \"SLC1A7\", \"KIAA1958\", \"SARDH\", \"PFKFB3\", \"SNORD89\", \"IFI44\", \"DDX60\", \"TMEM238\", \"HAR1A\", \"EGR1\", \"VNN1\", \"TRIM9\", \"TAF13\", \"AP3S2\", \"TMEM56\", \"KLRC2\", \"CACNA1C-AS2\", \"ALX3\", \"FCGBP\", \"CD247\", \"ALDH1L2\", \"HIST1H2AC\", \"RTP5\", \"PPARG\", \"AMPH\", \"LINC00861\", \"CDKL5\", \"MYBL2\", \"LOC101927051\", \"TLR5\", \"TMEM121\", \"BMP8B\", \"AK5\", \"RBP5\", \"LINC01355\", \"PITRM1-AS1\", \"CMTM1\", \"BIRC5\", \"C10orf10\", \"TNFRSF25\", \"ZAP70\", \"LOC105373383\", \"DSP\", \"WDR86-AS1\", \"RPLP2\", \"KREMEN1\", \"LOC101927550\", \"PDZD4\", \"LOC100130451\", \"MKI67\", \"LOC728743\", \"CXCL10\", \"LINC01547\", \"LOC645513\", \"ATOH8\", \"S1PR5\", \"KISS1R\", \"MELK\", \"TCEA3\", \"SLC22A20\", \"RAMP1\", \"FOLR2\", \"GGT6\", \"CACNA1E\", \"FABP6\", \"RAP2C-AS1\", \"PRRG4\", \"FAM63B\", \"BLK\", \"P3H3\", \"WIPF2\", \"TROAP\", \"FAHD2CP\", \"CA6\", \"LINC00892\", \"LRCH3\", \"BUB1B\", \"LOC100996286\", \"NT5E\", \"PASK\", \"BATF2\", \"TTC39C-AS1\", \"ACTA2\", \"CHIT1\", \"LAMC1\", \"TNFAIP3\", \"ANKRD22\", \"C12orf42\", \"SPON2\", \"SLX4IP\", \"TNNC1\", \"ZNF771\", \"SPEG\", \"HIST1H4H\", \"HTR6\", \"TNFRSF17\", \"FSD1\", \"LINC00266-1\", \"CD6\", \"PRSS30P\", \"SFTPD\", \"COPZ2\", \"BPI\", \"CCIN\", \"CDK1\", \"ATP2C2\", \"GOLGA8H\", \"USP44\", \"SLC14A1\", \"ZDHHC14\", \"SNORD50A\", \"LTK\", \"KCNG2\", \"MAPK11\", \"ACOT4\", \"CTSW\", \"C1orf106\", \"CDKN3\", \"UPB1\", \"CAMK2N1\", \"RBM5-AS1\", \"DNLZ\", \"GZMM\", \"PLA2G7\", \"ZCCHC2\", \"PRSS41\", \"RPL13\", \"OLR1\", \"BCAS4\", \"EPB41\", \"TRABD2A\", \"PBX4\", \"GZMK\", \"PNPLA7\", \"B4GALT5\", \"ARHGEF17\", \"APOA1\", \"GPA33\", \"KLRG1\", \"GBP5\", \"LOC102723701\", \"CENPA\", \"LOC285696\", \"KCNK5\", \"SUSD4\", \"RPS28\", \"ESPL1\", \"ITGB4\", \"SPAG16\", \"CYP4F35P\", \"CD3D\", \"BMS1P20\", \"CBS\", \"ETV2\", \"SPATS2L\", \"DUSP13\", \"FAM19A1\", \"VSIG10L\", \"CD2\", \"NHSL2\", \"FAAH2\", \"FXYD7\", \"NTN5\", \"FICD\", \"GLDC\", \"LOC101927865\", \"LINC00944\", \"PTPRCAP\", \"GNB3\", \"TRIM22\", \"PRRT1\", \"NR1I3\", \"BTN3A1\", \"STX16-NPEPL1\", \"TMEM191A\", \"SERPINB2\", \"UST\", \"GALNT12\", \"BUB1\", \"GTF2I\", \"FOSL2\", \"COL13A1\", \"RGS9\", \"NCALD\", \"DNAH10\", \"CA11\", \"CKB\", \"HSPB1\", \"CDC45\", \"ATP7B\", \"WNT5B\", \"ZNF699\", \"PRRT4\", \"GALNT14\", \"ZNF319\", \"DNAH17\", \"LOC283710\", \"CPEB4\", \"LY6G6C\", \"PPAN\", \"WASH5P\", \"HIST1H3H\", \"IL32\", \"TEPP\", \"CNR1\", \"YJEFN3\", \"FAM159A\", \"FGFBP2\", \"FKBP5\", \"BIN1\", \"VPREB3\", \"E2F8\", \"HK3\", \"CDH2\", \"HFE\", \"BEAN1-AS1\", \"KIFC3\", \"HELB\", \"HLA-DPB1\", \"GZMH\", \"LMNB1\", \"CC2D2A\", \"IQCH-AS1\", \"CTSF\", \"TMEM132D\", \"LEF1\", \"REL\", \"CBR3\", \"WNT10B\", \"LOC100289473\", \"APBA2\", \"KIF23\", \"LOC646471\", \"PNMA6A\", \"EPC2\", \"HBEGF\", \"S100B\", \"C14orf132\", \"KCND1\", \"SIPA1L2\", \"NCAPG\", \"OAS2\", \"C3AR1\", \"CSF1\", \"CHCHD6\", \"AUTS2\", \"IL24\", \"CDC42EP2\", \"LTBP3\", \"PXT1\", \"ADAMTS10\", \"BLZF1\", \"TPST1\", \"ID3\", \"GYG1\", \"EFCAB2\", \"MYO10\", \"TLE2\", \"SLC30A1\", \"CCNI\", \"WNT7A\", \"RBL2\", \"ERICH6-AS1\", \"IGFBP3\", \"DTL\", \"SORBS3\", \"RPS19\", \"SMA4\", \"RPS27\", \"BEAN1\", \"MIRLET7BHG\", \"ABCA1\", \"ZKSCAN7\", \"GPR34\", \"GPR153\", \"TRIM52\", \"GRASP\", \"RNASE2\", \"CENPF\", \"ACTG1P20\", \"MMP9\", \"ZFP82\", \"RTN1\", \"RPS21\", \"PCBP1-AS1\", \"PVRL3\", \"RPS10\", \"FER1L4\", \"SEPT1\", \"DEPDC1B\", \"LINC00926\", \"SEC14L2\", \"LOC100420587\", \"PCSK4\", \"HPS3\", \"KIR3DL1\", \"SPRN\", \"HRH2\", \"FAHD2B\", \"P3H4\", \"TMEM160\", \"ENGASE\", \"RAD51AP1\", \"ZNF233\", \"RAP1GAP\", \"TTBK2\", \"PINK1\", \"SH2D1B\", \"BAIAP2L1\", \"BECN1\", \"RPL13A\", \"INHBB\", \"HPCAL4\", \"TPM2\", \"ACVR2B\", \"CEP126\", \"RPL18\", \"B3GNT7\", \"ROBO3\", \"MYOM2\", \"SLC51A\", \"CCL5\", \"PROSER3\", \"RPL18A\", \"SERINC4\", \"ATP11B\", \"SMARCD3\", \"STMN3\", \"FAM173A\", \"CDK5RAP2\", \"GGH\", \"EIF4G3\", \"C18orf32\", \"SHCBP1\", \"CCM2L\", \"LAT\", \"PRF1\", \"ARL15\", \"WHAMMP1\", \"NBN\", \"ARHGEF11\", \"ZWINT\", \"BTBD11\", \"MCOLN2\", \"EYS\", \"GRAP\", \"TAP1\", \"FAM157C\", \"ANXA3\", \"MCEMP1\", \"TCF7\", \"IGSF9B\", \"SDSL\", \"LNPEP\", \"NSUN5P1\", \"FAM110B\", \"SPNS3\", \"ACTL10\", \"GCSAM\", \"LOC101927482\", \"UGCG\", \"CD24\", \"SCO2\", \"GMCL1\", \"SAMD12\", \"NUSAP1\", \"WNT1\", \"NME3\", \"LOC728084\", \"RGS18\", \"PNMA3\", \"KLRF1\", \"ENO2\", \"SUPT3H\", \"ATP5D\", \"ZC3H13\", \"PSTPIP2\", \"SNORD81\", \"SESN2\", \"TK1\", \"LHFPL2\", \"SCARNA10\", \"SERPING1\", \"SYT2\", \"SNORA33\", \"JAK2\", \"CYB5D1\", \"SH3RF3\", \"ARL14EP\", \"UBASH3A\", \"ARL5B\", \"SPRED2\", \"NELL2\", \"PPP2R2B\", \"CDH12\", \"WDR54\", \"KLF4\", \"MTUS1\", \"ELF1\", \"CARNS1\", \"CLEC10A\", \"CD3E\", \"TTK\", \"KBTBD7\", \"TPX2\", \"ZNF69\", \"AICDA\", \"TAMM41\", \"LOC100288152\", \"AK1\", \"MMP24\", \"SAMD9L\", \"RAD51\", \"ACE\", \"COLGALT2\", \"NEDD4\", \"SPEF2\", \"CENPE\", \"CRISPLD2\", \"TSEN54\", \"RCVRN\", \"FRMD3\", \"SKAP1\", \"CYP4F3\", \"TMEM161B-AS1\", \"KANSL1L\", \"SLC29A2\", \"CEP97\", \"XAF1\", \"CDKN1C\", \"PRDM5\", \"HBP1\", \"CACNG8\", \"RP2\", \"OASL\", \"NPIPA1\", \"ZNF354A\", \"RPL32\", \"GLTSCR2\", \"CD52\", \"SBK1\", \"ZNF703\", \"GBP1\", \"C4orf29\", \"ERV3-1\", \"ABCC2\", \"EPB41L5\", \"FFAR3\", \"PLEKHB1\", \"LOC100507387\", \"RPL36\", \"PRC1\", \"C19orf60\", \"PRSS23\", \"CD160\", \"HOPX\", \"SAMD10\", \"RPSAP9\", \"CDCA2\", \"SWT1\", \"NPEPL1\", \"RORC\", \"MS4A3\", \"BCL2L15\", \"CXCR5\", \"EPHX2\", \"B3GNT9\", \"CDCA7L\", \"LMTK2\", \"UBAP1L\", \"CD79B\", \"OBSCN\", \"TMEM102\", \"ZNF540\", \"SPP1\", \"HABP4\", \"LOC100130872\", \"APBB1\", \"GPC2\", \"CD1C\", \"LONRF3\", \"NR2C2\", \"NSUN7\", \"SIGIRR\", \"SNORD38B\", \"FAM65C\", \"HELZ2\", \"ARL4D\", \"ENO3\", \"RPL9\", \"IFT81\", \"LSMEM2\", \"SCARNA2\", \"CD5\", \"AHNAK2\", \"RPL27A\", \"SOX8\", \"TMEM161A\", \"ZNF81\", \"PXK\", \"LOC441081\", \"RPS26\", \"CCNB1\", \"PLXDC1\", \"NFKBIA\", \"PKMYT1\", \"SLC27A5\", \"LRRC4\", \"TARP\", \"MAP2K6\", \"EIF1B-AS1\", \"SCARNA17\", \"NUDT8\", \"EAF1\", \"TBC1D8\", \"SESTD1\", \"CLEC12B\", \"ZNF776\", \"PDCD1\", \"FBXL16\", \"SLFN14\", \"ATP8B3\", \"ZNF396\", \"STOM\", \"CCDC30\", \"FAM86FP\", \"FAM129C\", \"TMEM42\", \"ZNF607\", \"IL11RA\", \"ECHDC2\", \"CCNE2\", \"PUS7L\", \"EFCAB12\", \"TGFA\", \"MAPK14\", \"NSG1\", \"C9orf142\", \"KLHL15\", \"LOC102723766\", \"VEGFB\", \"TJP3\", \"YAE1D1\", \"PROS1\", \"CSGALNACT2\", \"HLA-DOA\", \"TUBBP5\", \"RPL37A\", \"FAM195A\", \"LTB4R2\", \"NCAPH\", \"EVL\", \"CR1\", \"LTC4S\", \"ANKS3\", \"RPL35\", \"GLIS2\", \"TRAPPC6A\", \"LIPN\", \"RPS12\", \"RPL38\", \"LIME1\", \"PHGDH\", \"C4orf48\", \"SLED1\", \"BACH2\", \"EVA1C\", \"GATA3\", \"SLC25A38\", \"USP32\", \"RPL39\", \"EGR2\", \"USP35\", \"ZNF662\", \"PLEKHG1\", \"CRTAM\", \"AANAT\", \"OPLAH\", \"FBXO6\", \"LOXL1\", \"LOC101928786\", \"FRMD4B\", \"IL1R1\", \"ADM2\", \"DNASE1L1\", \"STAT4\", \"RPLP1\", \"TTC9\", \"BEND7\", \"F8\", \"FOSB\", \"SLAMF6\", \"STK17B\", \"PVT1\", \"ARVCF\", \"APOBEC3C\", \"CDK14\", \"RPS14\", \"POLQ\", \"CDC42BPG\", \"CCDC85B\", \"UBR5-AS1\", \"TNNT3\", \"TCL1A\", \"IL7R\", \"PTX3\", \"KLHL14\", \"MTRNR2L1\", \"ZBTB46\", \"RPL34\", \"VPS9D1-AS1\", \"KLF7\", \"RPL10A\", \"SLC2A11\", \"ACTN4\", \"RPSA\", \"SGK223\", \"PLSCR1\", \"SBF2\", \"LINC01420\", \"CDCA5\", \"F5\", \"ADGRB2\", \"RPL23A\", \"MAN1A2\", \"LLGL2\", \"GINS2\", \"NUDT14\", \"TG\", \"RSRC1\", \"TMEM256\", \"SYTL2\", \"TYSND1\", \"TPGS1\", \"ABHD14B\", \"LSM7\", \"ZNF281\", \"CEMP1\", \"M1AP\", \"CD82\", \"LOC101928150\", \"MRPL41\", \"IFIH1\", \"CCNB2\", \"IFITM10\", \"RPS3A\", \"TMEM8B\", \"CEP135\", \"SIRPB2\", \"IRS2\", \"SYCE1L\", \"SULT1B1\", \"ADAM9\", \"ZCCHC18\", \"DDIAS\", \"LINC01278\", \"MTHFD2\", \"TIGIT\", \"FUOM\", \"FOSL1\", \"RPS16\", \"BRAF\", \"CACNA1I\", \"EXT1\", \"GPR82\", \"LRRC45\", \"STAG1\", \"KIF11\", \"NCAM1\", \"RNF24\", \"KIAA2018\", \"SAMD9\", \"ABCA2\", \"PVRIG\", \"RASGRF2\", \"IRAK2\", \"ARHGEF4\", \"ZNF682\", \"RASSF7\", \"THAP7\", \"KIF1B\", \"GAS5\", \"KIF15\", \"RMRP\", \"GALM\", \"LYNX1\", \"C7orf50\", \"ATXN1L\", \"KCNN4\", \"LDLRAP1\", \"RETSAT\", \"RNF10\", \"NOXA1\", \"UBXN7\", \"UHRF1BP1L\", \"TESPA1\", \"MB21D1\", \"LINC00116\", \"FOXM1\", \"CCR6\", \"NMUR1\", \"RPL22\", \"LCK\", \"MEGF9\", \"CLSPN\", \"MIR4697HG\", \"PPP1R15A\", \"ADCK5\", \"SAMD3\", \"RPS27A\", \"TPPP\", \"PIWIL4\", \"ANKRD33B\", \"IL18RAP\", \"SNRPD2\", \"WASF1\", \"ALDH5A1\", \"FAM149B1\", \"RPS18\", \"SLCO4C1\", \"MGC16275\", \"ZNF837\", \"SAMHD1\", \"NSMF\", \"PDIA6\", \"SNX20\", \"ATF7IP2\", \"BPHL\", \"RPL35A\", \"NFKBIZ\", \"LMF1\", \"MGMT\", \"PPL\", \"FAM120C\", \"APRT\", \"RANGRF\", \"PHLDB3\", \"IDNK\", \"RPS15\", \"LGR6\", \"MOB1A\", \"CREB5\", \"THEM4\", \"ENDOG\", \"RPL7\", \"EDN1\", \"ZNF808\", \"SNHG15\", \"RPL3\", \"SMCR8\", \"FCMR\", \"ZNF449\", \"ZBTB37\", \"NHLRC4\", \"DHRS9\", \"C1QTNF3\", \"MS4A1\", \"AFF2\", \"FBXO32\", \"SLC6A6\", \"ZSCAN30\", \"CHPT1\", \"PARP14\", \"MZT2B\", \"FLT3LG\", \"TCTN2\", \"MAN1A1\", \"LOC728175\", \"ALOX5\", \"DUSP18\", \"ZC3H12D\", \"PECR\", \"LRRC37A3\", \"EPB41L4A-AS1\", \"SPAG5\", \"KDM7A\", \"DDX31\", \"NCOA6\", \"SLC6A12\", \"FCER1A\", \"FBXL13\", \"AKR7A2\", \"PRR5\", \"PRKCE\", \"PPP1R3D\", \"SYNM\", \"GLI1\", \"NTNG2\", \"EEF1G\", \"LOC643802\", \"MAGEE1\", \"PIK3AP1\", \"RPS8\", \"SNHG19\", \"C19orf70\", \"GAS7\", \"PHF12\", \"ATP11A\", \"SLC22A23\", \"ATP6V0E2\", \"UCKL1-AS1\", \"TIPARP\", \"BEX2\", \"FAM102A\", \"RPS20\", \"TTC16\", \"PLP2\", \"HAPLN3\", \"C19orf24\", \"ZNF397\", \"FOXO4\", \"TRAPPC2B\", \"QTRT1\", \"CDK10\", \"PDZD8\", \"GIPC1\", \"CD274\", \"C9orf139\", \"SPIB\", \"KLHDC7B\", \"ZNF32\", \"ELMO2\", \"AK4\", \"SAMD4B\", \"MFSD3\", \"EXD3\", \"SLC37A3\", \"RPL8\", \"TRIM56\", \"NMB\", \"PIPOX\", \"PXN-AS1\", \"SLC2A5\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"enrichr","dir":"Articles","previous_headings":"Over-representation (enrichment) analysis in R with rbioapi","what":"Enrichr","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"Enrichr , developed Ma’ayan Lab, service perform enrichment analysis considerable number curated gene set libraries across various species. thoroughly covered performing enrichment analysis Enrichr vignette article Enrichr & rbioapi. Therefore, provide brief demonstration . First, let us retrieve list available libraries Enrichr using rba_enrichr_libs() function. can find available Enrichr libraries libraryName column returned data frame. required argument rba_enrichr() function gene_list, use gene_set_library argument request enrichment analysis “KEGG_2021_Human” library. gene_set_library parameter, can also provide multiple gene set libraries leave default parameter NULL perform enrichment analysis using every gene set library available Enrichr. Also note regex_library_name parameter TRUE (default value), gene_set_library parameter considered regex pattern, partial matchs also selected. can see , one library selected, results list elements enrichment results one library:","code":"enrichr_libs <- rba_enrichr_libs() #> Retrieving List of available libraries and statistics from Enrichr human. enrichr_enrich <- rba_enrichr(gene_list = covid_critical,                               gene_set_library = \"KEGG_2021_Human\") #> --Step 1/3: #> Retrieving List of available libraries and statistics from Enrichr human. #> --Step 2/3: #> Uploading 1214 gene symbols to Enrichr human. #> --Step 3/3: #> Enriching gene-list 47606807 against Enrichr human library: KEGG_2021_Human. enrichr_enrich_kegg <- rba_enrichr(gene_list = covid_critical,                                    gene_set_library = \"kegg\",                                    regex_library_name = TRUE # default value ) #> --Step 1/3: #> Retrieving List of available libraries and statistics from Enrichr human. #> --Step 2/3: #> Uploading 1214 gene symbols to Enrichr human. #> --Step 3/3: #> Enriching gene-list 47606808 using multiple Enrichr human libraries. #> Note: You have selected '6' Enrichr human libraries. Note that for each library, a separate call should be sent to Enrichr server. Thus, this could take a while depending on the number of selected libraries and your network connection. str(enrichr_enrich_kegg, max.level = 2) #> List of 6 #>  $ KEGG_2013      :'data.frame': 139 obs. of  9 variables: #>   ..$ Term                : chr [1:139] \"HSA03010 RIBOSOME\" \"HSA04640 HEMATOPOIETIC CELL LINEAGE\" \"HSA00260 GLYCINE SERINE AND THREONINE METABOLISM\" \"HSA04110 CELL CYCLE\" ... #>   ..$ Overlap             : chr [1:139] \"30/98\" \"16/88\" \"8/45\" \"13/115\" ... #>   ..$ P.value             : num [1:139] 5.76e-14 7.05e-05 5.20e-03 2.22e-02 2.40e-02 ... #>   ..$ Adjusted.P.value    : num [1:139] 8.01e-12 4.90e-03 2.41e-01 6.67e-01 6.67e-01 ... #>   ..$ Old.P.value         : int [1:139] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:139] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:139] 6.97 3.47 3.36 1.98 1.61 ... #>   ..$ Combined.Score      : num [1:139] 212.62 33.19 17.68 7.55 5.99 ... #>   ..$ Genes               : chr [1:139] \"RPL3;RPL32;RPL34;RPL8;RPL10A;RPL9;RPL7;RPS16;RPL18A;RPS18;RPL35;RPL13;RPL38;RPL18;RPL39;RPS10;RPS12;RPS8;RPL13A\"| __truncated__ \"CR1;CSF1;IL1R1;IL11RA;ITGA1;FLT3LG;CD3E;CD1C;CD3D;CD2;IL4;CD5;CD38;CD24;IL7R;MS4A1\" \"GAMT;ALAS2;GLDC;MAOA;CBS;SARDH;PIPOX;PHGDH\" \"CDKN1C;BUB1B;CDC6;PKMYT1;CDC25A;CDC20;RBL2;CCNB2;CCNB1;CCNE2;ESPL1;EP300;BUB1\" ... #>  $ KEGG_2015      :'data.frame': 131 obs. of  9 variables: #>   ..$ Term                : chr [1:131] \"ribosome\" \"hematopoietic cell lineage\" \"glycine serine and threonine metabolism\" \"cell cycle\" ... #>   ..$ Overlap             : chr [1:131] \"30/71\" \"16/88\" \"8/44\" \"13/104\" ... #>   ..$ P.value             : num [1:131] 1.90e-18 7.05e-05 4.51e-03 1.02e-02 1.56e-02 ... #>   ..$ Adjusted.P.value    : num [1:131] 2.48e-16 4.62e-03 1.97e-01 3.34e-01 4.10e-01 ... #>   ..$ Old.P.value         : int [1:131] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:131] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:131] 11.58 3.47 3.45 2.22 1.68 ... #>   ..$ Combined.Score      : num [1:131] 472.72 33.19 18.66 10.2 6.98 ... #>   ..$ Genes               : chr [1:131] \"RPL3;RPL32;RPL34;RPL10A;RPL8;RPL9;RPL7;RPS16;RPL18A;RPS18;RPL35;RPL13;RPL38;RPL18;RPL39;RPS10;RPS12;RPS8;RPL13A\"| __truncated__ \"CR1;CSF1;IL1R1;IL11RA;ITGA1;FLT3LG;CD3E;CD1C;CD3D;CD2;IL4;CD5;CD38;CD24;IL7R;MS4A1\" \"GAMT;ALAS2;GLDC;MAOA;CBS;SARDH;PIPOX;PHGDH\" \"CDKN1C;BUB1B;CDC6;PKMYT1;CDC25A;CDC20;RBL2;CCNB2;CCNB1;CCNE2;ESPL1;EP300;BUB1\" ... #>  $ KEGG_2016      :'data.frame': 260 obs. of  9 variables: #>   ..$ Term                : chr [1:260] \"Ribosome Homo sapiens hsa03010\" \"Hematopoietic cell lineage Homo sapiens hsa04640\" \"Glycine, serine and threonine metabolism Homo sapiens hsa00260\" \"Cell cycle Homo sapiens hsa04110\" ... #>   ..$ Overlap             : chr [1:260] \"38/137\" \"16/88\" \"9/40\" \"17/124\" ... #>   ..$ P.value             : num [1:260] 9.80e-16 7.05e-05 5.36e-04 1.34e-03 6.17e-03 ... #>   ..$ Adjusted.P.value    : num [1:260] 2.55e-13 9.16e-03 4.65e-02 8.72e-02 3.21e-01 ... #>   ..$ Old.P.value         : int [1:260] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:260] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:260] 6.1 3.47 4.52 2.48 3.63 ... #>   ..$ Combined.Score      : num [1:260] 210.8 33.2 34 16.4 18.4 ... #>   ..$ Genes               : chr [1:260] \"RPL3;RPL32;RPL34;RPLP1;RPL8;RPL10A;RPL9;RPL7;RPS15;RPS14;RPS16;RPS19;RPL18A;RPS18;RPL36;RPL35;RPLP2;RPL13;RPL38\"| __truncated__ \"CR1;CSF1;IL1R1;IL11RA;ITGA1;FLT3LG;CD3E;CD1C;CD3D;CD2;IL4;CD5;CD38;CD24;IL7R;MS4A1\" \"GAMT;ALAS2;GLDC;MAOA;CBS;SARDH;PIPOX;PHGDH;SDSL\" \"CDKN1C;BUB1B;TTK;CDC6;PKMYT1;CDC25A;CDC20;RBL2;CCNB2;CCNB1;STAG1;CDC45;CCNE2;ESPL1;CDK1;EP300;BUB1\" ... #>  $ KEGG_2019_Human:'data.frame': 272 obs. of  9 variables: #>   ..$ Term                : chr [1:272] \"Ribosome\" \"Hematopoietic cell lineage\" \"Th1 and Th2 cell differentiation\" \"Th17 cell differentiation\" ... #>   ..$ Overlap             : chr [1:272] \"38/153\" \"18/97\" \"16/92\" \"17/107\" ... #>   ..$ P.value             : num [1:272] 4.86e-14 1.91e-05 1.22e-04 2.38e-04 5.36e-04 ... #>   ..$ Adjusted.P.value    : num [1:272] 1.32e-11 2.59e-03 1.11e-02 1.62e-02 2.92e-02 ... #>   ..$ Old.P.value         : int [1:272] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:272] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:272] 5.25 3.56 3.29 2.95 4.52 ... #>   ..$ Combined.Score      : num [1:272] 160.8 38.7 29.6 24.6 34 ... #>   ..$ Genes               : chr [1:272] \"RPL3;RPL32;RPL34;RPLP1;RPL8;RPL10A;RPL9;RPL7;RPS15;RPS14;RPS16;RPS19;RPL18A;RPS18;RPL36;RPL35;RPLP2;RPL13;RPL38\"| __truncated__ \"CR1;CSF1;IL1R1;IL11RA;ITGA1;FLT3LG;CD1C;CD3E;CD3D;IL4;CD2;CD5;HLA-DPB1;CD38;HLA-DOA;IL7R;CD24;MS4A1\" \"GATA3;CD3E;MAPK14;CD3D;DLL4;IL4;NFKBIA;ZAP70;MAPK11;LCK;STAT4;HLA-DPB1;CD247;HLA-DOA;JAK2;LAT\" \"IL1R1;RORC;GATA3;CD3E;MAPK14;HIF1A;CD3D;IL4;NFKBIA;ZAP70;MAPK11;LCK;HLA-DPB1;CD247;HLA-DOA;JAK2;LAT\" ... #>  $ KEGG_2019_Mouse:'data.frame': 267 obs. of  9 variables: #>   ..$ Term                : chr [1:267] \"Ribosome\" \"Glycine, serine and threonine metabolism\" \"Th1 and Th2 cell differentiation\" \"Cell cycle\" ... #>   ..$ Overlap             : chr [1:267] \"37/170\" \"9/40\" \"14/87\" \"17/123\" ... #>   ..$ P.value             : num [1:267] 7.70e-12 5.36e-04 7.19e-04 1.23e-03 1.23e-03 ... #>   ..$ Adjusted.P.value    : num [1:267] 2.06e-09 6.40e-02 6.40e-02 6.58e-02 6.58e-02 ... #>   ..$ Old.P.value         : int [1:267] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:267] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:267] 4.41 4.52 2.99 2.5 2.69 ... #>   ..$ Combined.Score      : num [1:267] 112.8 34 21.6 16.8 18 ... #>   ..$ Genes               : chr [1:267] \"RPL3;RPL32;RPL34;RPLP1;RPL8;RPL10A;RPL9;RPL7;RPS15;RPS14;RPS16;RPS19;RPL18A;RPS18;RPL36;RPL35;RPLP2;RPL13;RPL38\"| __truncated__ \"GAMT;ALAS2;GLDC;MAOA;CBS;SARDH;PIPOX;PHGDH;SDSL\" \"GATA3;CD3E;MAPK14;CD3D;DLL4;IL4;NFKBIA;ZAP70;MAPK11;LCK;STAT4;CD247;JAK2;LAT\" \"CDKN1C;BUB1B;TTK;CDC6;PKMYT1;CDC25A;CDC20;RBL2;CCNB2;CCNB1;STAG1;CDC45;CCNE2;ESPL1;CDK1;EP300;BUB1\" ... #>  $ KEGG_2021_Human:'data.frame': 285 obs. of  9 variables: #>   ..$ Term                : chr [1:285] \"Coronavirus disease\" \"Ribosome\" \"Hematopoietic cell lineage\" \"Th1 and Th2 cell differentiation\" ... #>   ..$ Overlap             : chr [1:285] \"51/232\" \"38/158\" \"18/99\" \"16/92\" ... #>   ..$ P.value             : num [1:285] 5.46e-16 1.46e-13 2.54e-05 1.22e-04 2.38e-04 ... #>   ..$ Adjusted.P.value    : num [1:285] 1.56e-13 2.08e-11 2.42e-03 8.70e-03 1.34e-02 ... #>   ..$ Old.P.value         : int [1:285] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Old.Adjusted.P.value: int [1:285] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Odds.Ratio          : num [1:285] 4.51 5.03 3.48 3.29 2.95 ... #>   ..$ Combined.Score      : num [1:285] 158.4 148.5 36.8 29.6 24.6 ... #>   ..$ Genes               : chr [1:285] \"RPL3;RPL32;RPL34;RPLP1;RPL8;RPL10A;RPL9;RPL7;RPS15;IFIH1;RPS14;RPS16;RPL18A;RPS19;RPS18;C3AR1;RPL36;RPL35;RPLP2\"| __truncated__ \"RPL3;RPL32;RPL34;RPLP1;RPL10A;RPL8;RPL9;RPL7;RPS15;RPS14;RPS16;RPL18A;RPS19;RPS18;RPL36;RPL35;RPLP2;RPL13;RPL38\"| __truncated__ \"CR1;CSF1;IL11RA;IL1R1;ITGA1;FLT3LG;CD1C;CD3E;CD3D;IL4;CD2;CD5;HLA-DPB1;CD38;HLA-DOA;CD24;IL7R;MS4A1\" \"GATA3;CD3E;MAPK14;CD3D;DLL4;IL4;NFKBIA;ZAP70;MAPK11;LCK;STAT4;HLA-DPB1;CD247;HLA-DOA;JAK2;LAT\" ..."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"reactome-analysis-services","dir":"Articles","previous_headings":"Over-representation (enrichment) analysis in R with rbioapi","what":"Reactome Analysis services","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"Reactome curates extensive top-quality cellular pathways data across various species. Given fact proteins operate organized units, pathways, analyzing list Reactome pathways gene sets can provide valuable insights functional trajectories results. can refer Reactome & rbioapi article -depth coverage Reactome services. demonstrate -representation functionality function rba_reactome_analysis() accepts gene lists table input. table supplied, first column consist identifiers, next column numerical gene expression values. Refer rba_reactome_analysis() function’s manual details. , use gene list critical COVID: Let us examine response’s structure: list’s element names self-explanatory. results returned data frame pathways element. Note Reactome map provided gene identifiers identifiers may found. Hence, keep eye identifiersNotFound element. Naturally, can alter analysis parameters using rba_reactome_analysis() function’s arguments. used parameters returned “summary” element. code chunk, note “token” associated analysis. can use token perform following. Retrieve analysis results: addition main response, can download data associated request. see argument request rba_reactome_analysis_download() function’s manual information. , download CSV file input identifiers found: Reactome also generates nice report analysis pdf format, make sure try :","code":"reactome <- rba_reactome_analysis(input = covid_critical) #> Retrieving Reactome Analysis Results of your supplied Identifiers. str(reactome, max.level = 1) #> List of 8 #>  $ summary            :List of 7 #>  $ expression         :List of 1 #>  $ identifiersNotFound: int 573 #>  $ pathwaysFound      : int 8994 #>  $ pathways           :'data.frame': 8994 obs. of  19 variables: #>  $ resourceSummary    :'data.frame': 4 obs. of  3 variables: #>  $ speciesSummary     :'data.frame': 15 obs. of  5 variables: #>  $ warnings           : chr \"Missing header. Using a default one.\" str(reactome$summary) #> List of 7 #>  $ token         : chr \"MjAyMjA0MDgxNjE1MDdfMTYx\" #>  $ projection    : logi FALSE #>  $ interactors   : logi FALSE #>  $ type          : chr \"OVERREPRESENTATION\" #>  $ sampleName    : chr \"\" #>  $ text          : logi TRUE #>  $ includeDisease: logi TRUE reactome_2 <- rba_reactome_analysis_token(reactome$summary$token) rba_reactome_analysis_download(token = reactome$summary$token,                                request = \"not_found_ids\",                                save_to = \"my_analysis.csv\") rba_reactome_analysis_pdf(token = reactome$summary$token,                           species = 9606, #Homo sapiens                           save_to = \"my_analysis.pdf\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"panther","dir":"Articles","previous_headings":"Over-representation (enrichment) analysis in R with rbioapi","what":"PANTHER","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"PANTHER (protein analysis evolutionary relationships) project provides classification systems genes proteins. PANTHER also provides enrichment service. fact, enrichment tool available Gene Ontology (GO) website powered PANTHER. Just like previous sections, review enrichment functionality ; -depth review PANTHER refer vignette article “PANTHER & rbioapi”. perform analysis, first, need choose classifications (.e., gene sets) want compare results . retrieve list available gene sets, call following function: Gene Ontology (GO) project one pinnacles scientists’ collective effort bioinformatics. GO Consortium provides comprehensive model biological systems. short, GO curates thoroughly designed directed acyclic graph (DAG) ontologies. may think tree terms, branches , terms become specific). protein may annotated one terms. terms organized three domains: “Molecular Function,” “Biological Process,” “Cellular Component”. GO slim datasets refer subsets cut-version GO terms. familiar GO, strongly encourage see page follow links provides: GO resource. , demonstrate enrichment analysis using Biological Process domain: addition enrichment results, PANTHER returns useful information analysis. names self-explanatory: enrichment results returned Data Frame element named result:","code":"panther_sets <- rba_panther_info(what = \"datasets\") #> Retrieving available annotation datasets. panther_enrich <- rba_panther_enrich(genes = covid_critical,                                      organism = 9606, #Homo sapiens                                      annot_dataset = \"GO:0008150\" #Biological Process                                      ) #> Performing over-representation enrichment analysis of 1214 input genes of organism 9606 against GO:0008150 datasets. str(panther_enrich) #> List of 9 #>  $ reference                 :List of 3 #>   ..$ organism      : chr \"Homo sapiens\" #>   ..$ mapped_count  : int 20589 #>   ..$ unmapped_count: int 0 #>  $ input_list                :List of 5 #>   ..$ organism      : chr \"Homo sapiens\" #>   ..$ mapped_count  : int 1048 #>   ..$ mapped_id     : chr [1:1048] \"SCT\" \"C4BPA\" \"FAM159A\" \"TSEN54\" ... #>   ..$ unmapped_count: int 166 #>   ..$ unmapped_id   : chr [1:166] \"LOC200772\" \"ELK2AP\" \"CLRN1-AS1\" \"LOC100272216\" ... #>  $ result                    :'data.frame':  15672 obs. of  9 variables: #>   ..$ number_in_list     : int [1:15672] 38 131 1 130 2 131 187 134 123 123 ... #>   ..$ fold_enrichment    : num [1:15672] 5.8748 1.7308 0.0433 1.7023 0.0816 ... #>   ..$ fdr                : num [1:15672] 9.12e-12 4.47e-05 3.19e-05 5.37e-05 6.13e-05 ... #>   ..$ expected           : num [1:15672] 6.47 75.69 23.11 76.37 24.52 ... #>   ..$ number_in_reference: int [1:15672] 124 1451 443 1464 470 1500 2375 1558 1400 1403 ... #>   ..$ pValue             : num [1:15672] 5.82e-16 5.70e-09 6.11e-09 1.37e-08 1.96e-08 ... #>   ..$ plus_minus         : chr [1:15672] \"+\" \"+\" \"-\" \"+\" ... #>   ..$ term.id            : chr [1:15672] \"GO:0002181\" \"GO:0006952\" \"GO:0050911\" \"GO:0009607\" ... #>   ..$ term.label         : chr [1:15672] \"cytoplasmic translation\" \"defense response\" \"detection of chemical stimulus involved in sensory perception of smell\" \"response to biotic stimulus\" ... #>  $ search                    :List of 1 #>   ..$ search_type: chr \"overrepresentation\" #>  $ tool_release_date         : int 20220202 #>  $ enrichment_test_type      : chr \"FISHER\" #>  $ annotDataSet              : chr \"GO:0008150\" #>  $ annot_version_release_date: chr \"GO Ontology database DOI:  10.5281/zenodo.6399963 Released 2022-03-22\" #>  $ correction                : chr \"FDR\""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"string","dir":"Articles","previous_headings":"Over-representation (enrichment) analysis in R with rbioapi","what":"STRING","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"addition proteins interaction data, STRING also curates proteins/genes annotations provides enrichment analysis services. can perform analysis multiple gene sets. gene sets can accessed using services two gene sets exclusive STRING. See “D. Szklarczyk et al.: Nucleic Acids Res. 49, D1 (2021)” information. . review enrichment functionality ; -depth review STRING refer vignette article “STRING & rbioapi”. Gene sets exclusively STRING: Reference Publications (PubMed) Hierarchical clustering STRING network Gene sets also available services: Gene Ontology domains: Molecular Function, Biological Process, Cellular Component COMPARTMENTS Human Disease Ontology InterPro KEG1G pathways UniProt keyword Pfam Reactome pathways BRENDA Tissue Enzyme Source Ontology SMART can directly supply covid_critical variable STRING’s enrichment function: can see, default list returned element data Frame enrichment analysis results one gene sets listed : “PMID” element, see PubMed papers -represented gene list. keep table tidy, displaying inputGenes preferredNames columns. can retrieve annotations associated input protein(s). difference statistical analysis performed full annotations input gene returned. potentially unwieldy response, allow_pubmed set fo FALSE default. set TRUE also retrieve PubMed paper abstracts include gene. can see, input gene large number annotations. Let us take look PMID Data Frame, contains PubMed Abstract paper terms:","code":"string_enrich <- rba_string_enrichment(ids = covid_critical,                                        species = 9606 #Homo sapiens                                        ) #> Performing functional enrichment of 1214 Input Identifiers. str(string_enrich, max.level = 1) #> List of 12 #>  $ COMPARTMENTS     :'data.frame':   20 obs. of  10 variables: #>  $ Component        :'data.frame':   19 obs. of  10 variables: #>  $ DISEASES         :'data.frame':   8 obs. of  10 variables: #>  $ Function         :'data.frame':   2 obs. of  10 variables: #>  $ KEGG             :'data.frame':   6 obs. of  10 variables: #>  $ Keyword          :'data.frame':   16 obs. of  10 variables: #>  $ NetworkNeighborAL:'data.frame':   36 obs. of  10 variables: #>  $ PMID             :'data.frame':   100 obs. of  10 variables: #>  $ Process          :'data.frame':   119 obs. of  10 variables: #>  $ RCTM             :'data.frame':   37 obs. of  10 variables: #>  $ TISSUES          :'data.frame':   18 obs. of  10 variables: #>  $ WikiPathways     :'data.frame':   1 obs. of  10 variables: string_annot <- rba_string_annotations(ids = \"CD177\",                                        species = 9606, #Homo sapiens                                        allow_pubmed = TRUE                                        ) #> Retrieving functional annotations of 1 Input Identifiers. str(string_annot, max.level = 1) #> List of 12 #>  $ COMPARTMENTS     :'data.frame':   31 obs. of  8 variables: #>  $ Component        :'data.frame':   43 obs. of  8 variables: #>  $ DISEASES         :'data.frame':   5 obs. of  8 variables: #>  $ Function         :'data.frame':   9 obs. of  8 variables: #>  $ InterPro         :'data.frame':   1 obs. of  8 variables: #>  $ Keyword          :'data.frame':   14 obs. of  8 variables: #>  $ NetworkNeighborAL:'data.frame':   2 obs. of  8 variables: #>  $ Pfam             :'data.frame':   1 obs. of  8 variables: #>  $ PMID             :'data.frame':   1154 obs. of  8 variables: #>  $ Process          :'data.frame':   130 obs. of  8 variables: #>  $ RCTM             :'data.frame':   7 obs. of  8 variables: #>  $ TISSUES          :'data.frame':   11 obs. of  8 variables:"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"mieaa","dir":"Articles","previous_headings":"Over-representation (enrichment) analysis in R with rbioapi","what":"miEAA","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"miRNA Enrichment Analysis Annotation Tool (miEAA) service provided Chair Clinical Bioinformatics Saarland University. makes miEAA unique among services presented miEAA curates miRNA sets. Hence can directly perform miRNA enrichment analysis across various species services miEAA provides. -depth covered performing enrichment analysis miEAA vignette article “miEEA & rbioapii”. Therefore, provide brief demonstration . can use covid_critical gene list . rather use miRNA list paper “. Parray et al.: Vaccines 9, 1056 (2021)”. used microarray find differentially expressed miRNA severe versus mild COVID 19 patients’ blood. necessary, can first see enrichment categories available mature human miRNA: Next, use wrapper function available perform necessary steps one function call. Note supplied categories parameter. left NULL, enrichment performed every available category.","code":"covid_mirna <- c(\"hsa-miR-3609\", \"hsa-miR-199a-5p\", \"hsa-miR-139-5p\", \"hsa-miR-145-5p\",\"hsa-miR-3651\", \"hsa-miR-1273h-3p\", \"hsa-miR-4632-5p\",\"hsa-miR-6861-5p\", \"hsa-miR-6802-5p\",\"hsa-miR-5196-5p\",\"hsa-miR-92b-5p\", \"hsa-miR-6805-5p\",\"hsa-miR-98-5p\",\"hsa-miR-3185\", \"hsa-miR-572\",\"hsa-miR-371b-5p\",\"hsa-miR-3180\", \"hsa-miR-8073\",\"hsa-miR-4750-5p\",\"hsa-miR-6075\", \"hsa-let-7i-5p\",\"hsa-miR-1231\",\"hsa-miR-885-3p\") rba_mieaa_cats(mirna_type = \"mature\",                species = 9606 #Homo sapiens ) #> Retrieving available enrichment categories of miRNA for Homo sapiens. #> Annotations derived over miRTarBase (Gene Ontology)  #>                    \"GO_Annotations_indirect_mature\"  #>                          Annotation (Gene Ontology)  #>                             \"GO_Annotations_mature\"  #>                                     Pathways (KEGG)  #>                                       \"KEGG_mature\"  #>                             exRNA forms (miRandola)  #>                                  \"miRandola_mature\"  #>                      Chromosomal location (miRBase)  #>                        \"miRBase_Chromosomes_mature\"  #>                              Conservation (miRBase)  #>       \"miRBase_Conserved_miRNAs_5_organisms_mature\"  #>                                Confidence (miRBase)  #>                    \"miRBase_High_confidence_mature\"  #>                               Seed family (miRBase)  #>                        \"miRBase_Seed_family_mature\"  #>                   GO Biological process (miRPathDB)  #>            \"miRPathDB_GO_Biological_process_mature\"  #>                   GO Cellular component (miRPathDB)  #>            \"miRPathDB_GO_Cellular_component_mature\"  #>                   GO Molecular function (miRPathDB)  #>            \"miRPathDB_GO_Molecular_function_mature\"  #>                                    KEGG (miRPathDB)  #>                             \"miRPathDB_KEGG_mature\"  #>                                Reactome (miRPathDB)  #>                         \"miRPathDB_Reactome_mature\"  #>                            WikiPathways (miRPathDB)  #>                     \"miRPathDB_WikiPathways_mature\"  #>                           Target genes (miRTarBase)  #>                                 \"miRTarBase_mature\"  #>                                  Diseases (miRWalk)  #>                           \"miRWalk_Diseases_mature\"  #>                             Gene Ontology (miRWalk)  #>                                 \"miRWalk_GO_mature\"  #>                                    Organs (miRWalk)  #>                             \"miRWalk_Organs_mature\"  #>                                  Pathways (miRWalk)  #>                           \"miRWalk_Pathways_mature\"  #>                                     Diseases (MNDR)  #>                                       \"MNDR_mature\"  #>                              Interactions (NPInter)  #>                                    \"NPInter_mature\"  #>                                          Gender/Age  #>                       \"Published_Age_gender_mature\"  #>                          Cell-type specific (Atlas)  #>                    \"Published_cell_specific_mature\"  #>                                  Published Diseases  #>                         \"Published_Diseases_mature\"  #>                                        Immune cells  #>                     \"Published_Immune_cells_mature\"  #>                            Localization (RNALocate)  #>                                  \"RNALocate_mature\"  #>                                      Drugs (SM2miR)  #>                                     \"SM2miR_mature\"  #>                  Expressed in tissue (Tissue Atlas)  #>                                \"TissueAtlas_mature\" mieaa_enrich <- rba_mieaa_enrich(test_set = covid_mirna,                                  mirna_type = \"mature\",                                  test_type = \"ORA\",                                  species = 9606,                                  categories = \"miRPathDB_GO_Biological_process_mature\") #>  -- Step 1/3: Submitting Enrichment request: #> Submitting ORA enrichment request for 23 miRNA IDs of species Homo sapiens to miEAA servers. #>  #>  -- Step 2/3: Checking for Submitted enrichment job's status every 5 seconds. #>     Your submitted job ID is: fcbddf97-4655-4e73-bb5c-2048243223d4 #> . #>  #>  -- Step 3/3: Retrieving the results of the finished enrichment job. #> Retrieving results of submitted enrichment request with ID: fcbddf97-4655-4e73-bb5c-2048243223d4"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"how_to_cite","dir":"Articles","previous_headings":"","what":"How to cite?","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"rbioapi interface databases services. Thus, used rbioapi published research, kindly addition citing rbioapi, make sure fully properly cite databases/services used. Suggested citations added functions’ manuals, “references” section; Nevertheless, user’s responsibility check proper citations properly cite database/services used. Please see rbioapi’s main vignette article details.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_do_enrich.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"3.A: Do with rbioapi: Over-Representation (Enrichment) Analysis in R","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       DT_0.22           xfun_0.30         cli_3.2.0         #> [13] jquerylib_0.1.4   crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 #> [17] yaml_2.3.5        digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     #> [21] textshaping_0.3.6 purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        #> [25] fs_1.5.2          curl_4.3.2        memoise_2.0.1     cachem_1.0.6      #> [29] evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    #> [33] bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.A: Enrichr & rbioapi","text":"Enrichr gene-set enrichment analysis tool developed Ma’ayan lab.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"gene-set-library-concept-in-enrichr","dir":"Articles","previous_headings":"","what":"Gene set library concept in Enrichr","title":"2.A: Enrichr & rbioapi","text":"Directly quoting Enrichr’s help page; gene set library set related gene sets enrichment terms. enrichment term Enrichr’s results pages organized gene set library. libraries constructed many sources published studies major biological biomedical online databases. Others created available Enrichr. example, ChEA 2015 library set functional terms representing transcription factors profiled ChIP-seq mammalian cells. term associated collection putative targets inferred peaks identified ChIP-seq study. (source: https://maayanlab.cloud/Enrichr/help#background) get list available Enrichr libraries, use: returned data frame, can find names available Enrichr libraries “libraryName” column:","code":"enrichr_libs <- rba_enrichr_libs()"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"enrichment-analysis-using-enrichr","dir":"Articles","previous_headings":"","what":"Enrichment analysis using Enrichr","title":"2.A: Enrichr & rbioapi","text":"enrich gene-set Enrichr using rbioapi, can take two approaches. begin simple one.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"approach-1-using-the-wrapper-function","dir":"Articles","previous_headings":"Enrichment analysis using Enrichr","what":"Approach 1: Using the Wrapper function","title":"2.A: Enrichr & rbioapi","text":"Just fill arguments rba_enrichr according function’s manual; Simply supply gene-set character vector select libraries. Note one Enrichr library selected, data frame enrichment analysis result returned: multiple libraries selected, function’s output list element data frame corresponding one selected libraries:","code":"# 1 We create a variable with our genes' NCBI IDs genes <- c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\",\"CDK1\",\"KIF23\",\"PLK1\",            \"RAC2\",\"RACGAP1\",\"RHOA\",\"RHOB\", \"PHF14\", \"RBM3\", \"MSL1\")  # 2.a Enrich your genes using \"MSigDB_Hallmark_2020\" library enrichr_msig_hallmark <- rba_enrichr(gene_list = genes,                                      gene_set_library = \"MSigDB_Hallmark_2020\") # 2.b Maybe you want to enrich using every library that contains the word \"msig\": enrichr_msig <- rba_enrichr(gene_list = genes,                             gene_set_library = \"msig\",                             regex_library_name = TRUE) # 2.c Or maybe you want to enrich using every library available at Enrichr: # enrichr_all <- rba_enrichr(gene_list = genes, #                            gene_set_library = \"all\") str(enrichr_msig_hallmark) #> 'data.frame':    18 obs. of  9 variables: #>  $ Term                : chr  \"Mitotic Spindle\" \"G2-M Checkpoint\" \"E2F Targets\" \"Apoptosis\" ... #>  $ Overlap             : chr  \"5/199\" \"4/200\" \"4/200\" \"3/161\" ... #>  $ P.value             : num  2.57e-07 1.22e-05 1.22e-05 2.17e-04 2.74e-03 ... #>  $ Adjusted.P.value    : num  4.62e-06 7.29e-05 7.29e-05 9.76e-04 9.87e-03 ... #>  $ Old.P.value         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Old.Adjusted.P.value: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Odds.Ratio          : num  51 36.7 36.7 31.4 29.7 ... #>  $ Combined.Score      : num  774 416 416 265 175 ... #>  $ Genes               : chr  \"CDC42;RACGAP1;PLK1;CDK1;KIF23\" \"RACGAP1;PLK1;CDK1;KIF23\" \"RACGAP1;PLK1;CDK1;BRCA1\" \"CDK2;BRCA1;RHOB\" ... str(enrichr_msig, 1) #> List of 3 #>  $ MSigDB_Computational       :'data.frame': 195 obs. of  9 variables: #>  $ MSigDB_Oncogenic_Signatures:'data.frame': 26 obs. of  9 variables: #>  $ MSigDB_Hallmark_2020       :'data.frame': 18 obs. of  9 variables:"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"approach-2-going-step-by-step","dir":"Articles","previous_headings":"Enrichment analysis using Enrichr","what":"Approach 2: Going step-by-step","title":"2.A: Enrichr & rbioapi","text":"can see rba_enrichr()’s name, wrapper function. basically executes following sequence functions: Please Note: services supported rbioapi also provide -representation analysis tools. Please see vignette article rbioapi: -Representation (Enrichment) Analysis R (link documentation site) -depth review.","code":"# 1 Get a list of available Enrichr libraries libs <- rba_enrichr_libs(store_in_options = TRUE)  # 2 Submit your gene-set to enrichr list_id <- rba_enrichr_add_list(gene_list = genes)  # 3 Perform Enrichment analysis with your uploaded gene-set enriched <- rba_enrichr_enrich(user_list_id = list_id$userListId,                                gene_set_library = \"Table_Mining_of_CRISPR_Studies\")  ## As always, use str() to see what you have: str(enriched, 1) #> 'data.frame':    46 obs. of  9 variables: #>  $ Term                : chr  \"Reaction polymerase chain quantitative time, PMC6627898 (Table1)\" \"Anticancer corresponding targets potential non, PMC5981615 (Table1)\" \"Names alphabetical order corresponding listed, PMC6783930 (Table1)\" \"Supplemental, PMC6879830 (Tablesupplemental)\" ... #>  $ Overlap             : chr  \"4/6\" \"3/25\" \"3/31\" \"10/2992\" ... #>  $ P.value             : num  3.07e-12 7.77e-07 1.51e-06 8.05e-06 6.26e-05 ... #>  $ Adjusted.P.value    : num  1.41e-10 1.79e-05 2.32e-05 9.26e-05 4.80e-04 ... #>  $ Old.P.value         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Old.Adjusted.P.value: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Odds.Ratio          : num  3633.3 226.9 178.2 11.4 219.5 ... #>  $ Combined.Score      : num  96318 3191 2388 134 2124 ... #>  $ Genes               : chr  \"CDC42;CDK2;CDK1;RHOA\" \"PLK1;CDK2;CDK1\" \"CDK2;CDK1;BRCA1\" \"CDC42;RBM3;RACGAP1;PLK1;CDK2;CDK1;PHF14;KIF23;BRCA1;MSL1\" ..."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"see-also-in-functions-manuals","dir":"Articles","previous_headings":"","what":"See also in Functions’ manuals","title":"2.A: Enrichr & rbioapi","text":"rbioapi Enrichr functions covered vignette, sure check manuals: rba_enrichr_gene_map() rba_enrichr_view_list()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.A: Enrichr & rbioapi","text":"cite Enrichr (Please see https://maayanlab.cloud/Enrichr/help#terms): Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive collaborative HTML5 gene list enrichment analysis tool. Bioinformatics 14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins, Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott, Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr: comprehensive gene set enrichment analysis web server 2016 update, Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97, https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B., Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L., Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene set knowledge discovery Enrichr. Current Protocols, 1, e90. doi: https://doi.org/10.1002/cpz1.90 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.A: Enrichr & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_enrichr.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.A: Enrichr & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       DT_0.22           xfun_0.30         cli_3.2.0         #> [13] jquerylib_0.1.4   crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 #> [17] yaml_2.3.5        digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     #> [21] textshaping_0.3.6 purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        #> [25] fs_1.5.2          curl_4.3.2        memoise_2.0.1     cachem_1.0.6      #> [29] evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    #> [33] bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.B: JASPAR & rbioapi","text":"Directly quoting Fornes O, Castro-Mondragon JA, Khan , et al: JASPAR (https://jaspar.genereg.net) open-access database curated, non-redundant transcription factor (TF)-binding profiles stored position frequency matrices (PFMs) TFs across multiple species six taxonomic groups. 8th release JASPAR, CORE collection expanded 245 new PFMs (169 vertebrates, 42 plants, 17 nematodes, 10 insects, 7 fungi), 156 PFMs updated (125 vertebrates, 28 plants 3 insects). new profiles represent 18% expansion compared previous release. source: Fornes O, Castro-Mondragon JA, Khan , et al. JASPAR 2020: update open-access database transcription factor binding profiles. Nucleic Acids Res. 2019; doi: 10.1093/nar/gkz1001","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"data-organization-in-jaspar","dir":"Articles","previous_headings":"","what":"Data Organization in JASPAR","title":"2.B: JASPAR & rbioapi","text":"JASPAR database transcription factor binding matrices annotations metadata. entities organized hierarchical fashion explore next.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"releases","dir":"Articles","previous_headings":"Data Organization in JASPAR","what":"Releases","title":"2.B: JASPAR & rbioapi","text":"addition latest JASPAR database release (2020), active releases also available. rbioapi JASPAR functions release argument allows use database releases.","code":"## Call the function without any arguments to get a list of releases releases <- rba_jaspar_releases() ## Supply a release number for details: release_7_info <- rba_jaspar_releases(7)"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"collections","dir":"Articles","previous_headings":"Data Organization in JASPAR","what":"Collections","title":"2.B: JASPAR & rbioapi","text":"Within release, Matrix profiles organized collections, can use rba_jaspar_collections() get list available collections, read “JASPAR Collections” section documentation page JASPAR web-site thorough review.","code":"## To get a list of available collection in release 2020: rba_jaspar_collections(release = 2020) #>          name                                                        url #> 1        CORE        https://jaspar.genereg.net/api/v1/collections/CORE/ #> 2 UNVALIDATED https://jaspar.genereg.net/api/v1/collections/UNVALIDATED/   ## You can list information of all matrices available in a collection: mat_in_core_2020 <- rba_jaspar_collections_matrices(collection = \"CORE\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"taxonomic-groups","dir":"Articles","previous_headings":"Data Organization in JASPAR","what":"Taxonomic Groups","title":"2.B: JASPAR & rbioapi","text":"Within collection, matrix profiles organized based main taxonomic groups:","code":"## To get a list of taxonomic groups in release 2020: rba_jaspar_taxons(release = 2020) #>             name                                                    url #> 1         plants        https://jaspar.genereg.net/api/v1/taxon/plants/ #> 2    vertebrates   https://jaspar.genereg.net/api/v1/taxon/vertebrates/ #> 3        insects       https://jaspar.genereg.net/api/v1/taxon/insects/ #> 4   urochordates  https://jaspar.genereg.net/api/v1/taxon/urochordates/ #> 5      nematodes     https://jaspar.genereg.net/api/v1/taxon/nematodes/ #> 6          fungi         https://jaspar.genereg.net/api/v1/taxon/fungi/ #> 7     trematodes    https://jaspar.genereg.net/api/v1/taxon/trematodes/ #> 8  dictyostelium https://jaspar.genereg.net/api/v1/taxon/dictyostelium/ #> 9       cnidaria      https://jaspar.genereg.net/api/v1/taxon/cnidaria/ #> 10      oomycota      https://jaspar.genereg.net/api/v1/taxon/oomycota/   ## You can list information of all matrices available in a taxonomic group: mat_in_insects <- rba_jaspar_taxons_matrices(tax_group = \"insects\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"species","dir":"Articles","previous_headings":"Data Organization in JASPAR","what":"Species","title":"2.B: JASPAR & rbioapi","text":"go data organization hierarchy, taxonomic group consist species:","code":"## To get a list of species in release 2020: species <- rba_jaspar_species(release = 2020) head(species) #>   tax_id                          species #> 1   5037           Ajellomyces capsulatus #> 2   4151                Antirrhinum majus #> 3  81972 Arabidopsis lyrata subsp. lyrata #> 4   3702             Arabidopsis thaliana #> 5   9913                       Bos taurus #> 6   6238          Caenorhabditis briggsae #>                                                url #> 1  https://jaspar.genereg.net/api/v1/species/5037/ #> 2  https://jaspar.genereg.net/api/v1/species/4151/ #> 3 https://jaspar.genereg.net/api/v1/species/81972/ #> 4  https://jaspar.genereg.net/api/v1/species/3702/ #> 5  https://jaspar.genereg.net/api/v1/species/9913/ #> 6  https://jaspar.genereg.net/api/v1/species/6238/ #>                                         matrix_url #> 1  https://jaspar.genereg.net/api/v1/species/5037/ #> 2  https://jaspar.genereg.net/api/v1/species/4151/ #> 3 https://jaspar.genereg.net/api/v1/species/81972/ #> 4  https://jaspar.genereg.net/api/v1/species/3702/ #> 5  https://jaspar.genereg.net/api/v1/species/9913/ #> 6  https://jaspar.genereg.net/api/v1/species/6238/  ## You can list information of all matrices available in a specie: mat_in_human <- rba_jaspar_species_matrices(tax_id = 9606)"},{"path":[]},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"search-matrix-profiles","dir":"Articles","previous_headings":"Matrix Profiles","what":"Search Matrix Profiles","title":"2.B: JASPAR & rbioapi","text":"Retrieving list every matrix available given category option. can also build search query using rba_jaspar_matrix_search. Note search function, required fill every argument. may use combination arguments see fit build query. can even call function without argument get list matrix profiles. instance:","code":"## Get a list of all the available matrix profile: all_matrices <- rba_jaspar_matrix_search()  ## Search FOX: FOX_matrices <- rba_jaspar_matrix_search(term = \"FOX\")  ## Transcription factors named FOXP3 FOXP3_matrices <- rba_jaspar_matrix_search(term = \"FOXP3\")  ## Transcription factors of Zipper-Type Class zipper_matrices <- rba_jaspar_matrix_search(tf_class = \"Zipper-Type\")  ## Transcription factors of Zipper-Type Class in PBM collection zipper_pbm_matrices <- rba_jaspar_matrix_search(tf_class = \"Zipper-Type\",                                                 collection = \"PBM\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"list-matrix-profiles-associated-to-a-base-identifier","dir":"Articles","previous_headings":"Matrix Profiles","what":"List Matrix Profiles Associated to a Base identifier","title":"2.B: JASPAR & rbioapi","text":"Since JASPAR release 2010, matrix profiles versioned. matrix profile Identifier “base_id.version” naming schema; example “MA0600.2” corresponds second version matrix base ID MA0600. can Use rba_jaspar_matrix_versions get list matrix profiles given base ID. Also note functions, generally used list available matrices, argument called only_last_version.","code":"## Get matrix profiles versions associated to a base id MA0600_versions <- rba_jaspar_matrix_versions(\"MA0600\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"get-a-matrix-profile","dir":"Articles","previous_headings":"Matrix Profiles","what":"Get a Matrix Profile","title":"2.B: JASPAR & rbioapi","text":"Now listed searched matrix profiles, can use rba_jaspar_matrix retrieve matrix profiles. two ways can use function:","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"get-matrix-and-annotations-as-an-r-object","dir":"Articles","previous_headings":"Matrix Profiles > Get a Matrix Profile","what":"Get Matrix and Annotations as an R Object","title":"2.B: JASPAR & rbioapi","text":", fill matrix_id argument rba_jaspar_matrix","code":"pfm_matrix <- rba_jaspar_matrix(matrix_id = \"MA0600.2\")  ## you can find the matrix in the pfm element along with ## other elements which correspond to annotations and details str(pfm_matrix) #> List of 24 #>  $ medline      : chr \"8754849\" #>  $ versions_url : chr \"https://jaspar.genereg.net/api/v1/matrix/MA0600/versions\" #>  $ source       : chr \"23332764\" #>  $ pfm          : num [1:4, 1:16] 1381 5653 4042 2336 270 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"A\" \"C\" \"G\" \"T\" #>   .. ..$ : NULL #>  $ pazar_tf_ids : list() #>  $ tfe_ids      : list() #>  $ base_id      : chr \"MA0600\" #>  $ sites_url    : NULL #>  $ class        : chr \"Fork head/winged helix factors\" #>  $ tffm         : NULL #>  $ family       : chr \"RFX-related factors\" #>  $ name         : chr \"RFX2\" #>  $ pubmed_ids   : chr \"8754849\" #>  $ tfe_id       : list() #>  $ matrix_id    : chr \"MA0600.2\" #>  $ collection   : chr \"CORE\" #>  $ uniprot_ids  : list() #>  $ sequence_logo: chr \"https://jaspar.genereg.net/static/logos/svg/MA0600.2.svg\" #>  $ version      : int 2 #>  $ tax_group    : chr \"vertebrates\" #>  $ type         : chr \"HT-SELEX\" #>  $ species      :'data.frame':   1 obs. of  2 variables: #>   ..$ tax_id: int 9606 #>   ..$ name  : chr \"Homo sapiens\" #>  $ pazar_tf_id  : list() #>  $ remap_tf_name: chr \"RFX2\""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"save-a-matrix-a-file-in-specific-format","dir":"Articles","previous_headings":"Matrix Profiles > Get a Matrix Profile","what":"Save a Matrix a File in Specific Format","title":"2.B: JASPAR & rbioapi","text":"JASPAR provides position frequency matrices (PFM) formatted Raw PFM, JASPAR, TRANSFAC, YAML, MEME. can download matrix profile file formats. , use file_format save_to arguments available rba_jaspar_matrix. two notes : case, function save matrix file returns un-parsed content file character string. save_to argument function, fact rbioapi function can used many ways: 2.1. save_to = NA: rbioapi automatically generate file path working directory, save file path , informs message. 2.2 save_to = file_name without path: rbioapi save file supplied name working directory. 2.3. save_to = directory path (without file): rbioapi save file proper name directory. 2.4. save_to = file path (.e. ending .extension): rbioapi save file exactly path. Make sure file extension path matches requested file format. case, rbioapi save file extension supplied path, issues warning inform . aforementioned cases, file path can absolute relative.","code":"## Different wqays in which you can save the matrix file: meme_matrix1 <- rba_jaspar_matrix(matrix_id = \"MA0600.2\",                                   file_format = \"meme\")  meme_matrix2 <- rba_jaspar_matrix(matrix_id = \"MA0600.2\",                                   file_format = \"meme\",                                   save_to = \"my_matrix.meme\")  meme_matrix3 <- rba_jaspar_matrix(matrix_id = \"MA0600.2\",                                   file_format = \"meme\",                                   save_to = \"c:/rbioapi\")  meme_matrix4 <- rba_jaspar_matrix(matrix_id = \"MA0600.2\",                                   file_format = \"meme\",                                   save_to = \"c:/rbioapi/my_matrix.meme\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"get-binding-sites-of-a-matrix-profiles","dir":"Articles","previous_headings":"Matrix Profiles","what":"Get Binding Sites of a Matrix Profiles","title":"2.B: JASPAR & rbioapi","text":"available, can retrieve information binding sites associated matrix profile. information includes data frame genomic coordination binding site, URL FASTA BED files, along annotations.","code":"## Get binding site of a matrix profile: binding_sites <- rba_jaspar_sites(matrix_id = \"MA0600.2\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"tf-flexible-models-tffms","dir":"Articles","previous_headings":"","what":"TF flexible models (TFFMs)","title":"2.B: JASPAR & rbioapi","text":"JASPAR also stores assigns identifiers TF flexible models (TFFMs). Just like PFM (position frequency matrices), can search TFFMs retrieve information annotations using TFFM Identifier. TFFM IDs versioned, meaning base_id.version format.","code":"## Search TFFMs. This is a search function. Thus, what has been presented ## in `Search Matrix Profiles` section also applies here:  ## Get a list of all the available matrix profile: all_tffms <- rba_jaspar_tffm_search()  ## Search FOX: FOX_tffms <- rba_jaspar_tffm_search(term = \"FOX\")  ## Transcription factors named FOXP3 FOXP3_tffms <- rba_jaspar_tffm_search(term = \"FOXP3\")  ## Transcription factors of insects taxonomic group insects_tffms <- rba_jaspar_tffm_search(tax_group = \"insects\") ## Now that you have a TFFM ID, you can retrieve it TFFM0056 <- rba_jaspar_tffm(\"TFFM0056.3\") str(TFFM0056) #>  Named list()"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.B: JASPAR & rbioapi","text":"cite JASPAR (Please see https://jaspar.genereg.net/faq/): Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu, Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy, Anthony Mathelier, JASPAR 2022: 9th release open-access database transcription factor binding profiles, Nucleic Acids Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173, https://doi.org/10.1093/nar/gkab1113 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.B: JASPAR & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_jaspar.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.B: JASPAR & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       xfun_0.30         cli_3.2.0         jquerylib_0.1.4   #> [13] htmltools_0.5.2   systemfonts_1.0.4 yaml_2.3.5        digest_0.6.29     #> [17] rprojroot_2.0.3   pkgdown_2.0.2     textshaping_0.3.6 purrr_0.3.4       #> [21] sass_0.4.1        fs_1.5.2          curl_4.3.2        memoise_2.0.1     #> [25] cachem_1.0.6      evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     #> [29] compiler_4.1.3    bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.C: miEEA & rbioapi","text":"miRNA Enrichment Analysis Annotation Tool (miEAA) service provided Chair Clinical Bioinformatics Saarland University. Basically, miEAA multi-species microRNA enrichment analysis tool. information, see website published paper.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"first-find-enrichment-categories","dir":"Articles","previous_headings":"","what":"First, find enrichment categories","title":"2.C: miEEA & rbioapi","text":"Enriching miRNA set, note based input miRNA type (either mature precursor, mixture !) species, different sets supported enrichment categories. Thus, recommended retrieve list possible enrichment categories may use:","code":"## A list of available enrichment categories for: ## mature human miRNA: rba_mieaa_cats(mirna_type = \"mature\", species = 9606) ## precursor human miRNA rba_mieaa_cats(mirna_type = \"precursor\", species = 9606) ## precursor zebrafish miRNA rba_mieaa_cats(mirna_type = \"mature\", species = \"Danio rerio\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"submit-enrichment-analysis-request-to-mieaa","dir":"Articles","previous_headings":"","what":"Submit Enrichment analysis request to miEAA","title":"2.C: miEEA & rbioapi","text":"two approaches , start simpler one.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"approach-1-using-the-wrapper-function","dir":"Articles","previous_headings":"Submit Enrichment analysis request to miEAA","what":"Approach 1: Using the Wrapper function","title":"2.C: miEEA & rbioapi","text":"Just fill arguments rba_mieaa_enrich() according function’s manual; can see function’s arguments, lot controls enrichment request, need provide test_set, mirna_type, test_type, species:","code":"## 1 We create a variable with our miRNAs' mature IDs mirs <- c(\"hsa-miR-20b-5p\", \"hsa-miR-144-5p\", \"hsa-miR-17-5p\", \"hsa-miR-20a-5p\",          \"hsa-miR-222-3p\", \"hsa-miR-106a-5p\", \"hsa-miR-93-5p\", \"hsa-miR-126-3p\",          \"hsa-miR-363-3p\", \"hsa-miR-302c-3p\", \"hsa-miR-374b-5p\", \"hsa-miR-18a-5p\",          \"hsa-miR-548d-3p\", \"hsa-miR-135a-3p\", \"hsa-miR-558\", \"hsa-miR-130b-5p\",          \"hsa-miR-148a-3p\") ## 2a We can enrich our miRNA set without limiting the enrichment to any categories mieaa_all <- rba_mieaa_enrich(test_set = mirs,                              mirna_type = \"mature\",                              test_type = \"ORA\",                              species = 9606) #>  -- Step 1/3: Submitting Enrichment request: #> No categories were supplied, Requesting enrichment using all of the 28 available categories for species 'Homo sapiens'. #> Submitting ORA enrichment request for 17 miRNA IDs of species Homo sapiens to miEAA servers. #>  #>  -- Step 2/3: Checking for Submitted enrichment job's status every 5 seconds. #>     Your submitted job ID is: a76a4230-50c0-4192-81a3-04898559ef48 #> .... #>  #>  -- Step 3/3: Retrieving the results of the finished enrichment job. #> Retrieving results of submitted enrichment request with ID: a76a4230-50c0-4192-81a3-04898559ef48 ## 2b Or, We can limit the enrichment to certain datasets (enrichment categories) mieaa_kegg <- rba_mieaa_enrich(test_set = mirs,                               mirna_type = \"mature\",                               test_type = \"ORA\",                               species = 9606,                               categories = c(\"miRWalk_Diseases_mature\",                                             \"miRWalk_Organs_mature\")                              ) #>  -- Step 1/3: Submitting Enrichment request: #> Submitting ORA enrichment request for 17 miRNA IDs of species Homo sapiens to miEAA servers. #>  #>  -- Step 2/3: Checking for Submitted enrichment job's status every 5 seconds. #>     Your submitted job ID is: 3dd0a6c1-db23-44e1-aa2a-23b32efb0d6c #> . #>  #>  -- Step 3/3: Retrieving the results of the finished enrichment job. #> Retrieving results of submitted enrichment request with ID: 3dd0a6c1-db23-44e1-aa2a-23b32efb0d6c"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"approach-2-going-step-by-step","dir":"Articles","previous_headings":"Submit Enrichment analysis request to miEAA","what":"Approach 2: Going step-by-step","title":"2.C: miEEA & rbioapi","text":"stated , rba_mieaa_enrich() wrapper function, meaning executes following sequence functions: Please Note: services supported rbioapi also provide -representation analysis tools. Please see vignette article rbioapi: -Representation (Enrichment) Analysis R (link documentation site) -depth review.","code":"## 1 Submit enrichment request to miEAA request <- rba_mieaa_enrich_submit(test_set = mirs,                                   mirna_type = \"mature\",                                   test_type = \"ORA\",                                   species = 9606,                                   categories = c(\"miRWalk_Diseases_mature\",                                                  \"miRWalk_Organs_mature\")                                   ) ## 2 check for job's running status rba_mieaa_enrich_status(job_id = request$job_id)  ## 3 If the job has completed, retrieve the results results <- rba_mieaa_enrich_results(job_id = request$job_id)"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"convert-mirna-accessions","dir":"Articles","previous_headings":"","what":"Convert miRNA accessions","title":"2.C: miEEA & rbioapi","text":"miEAA recognizes miRBASE version 22 accessions. can use rba_mieaa_convert_version() convert miRNA accession different miRBASE versions. Also, stated , miEAA differentiate precursor mature miRNA accessions, convert 2 accession types, use rba_mieaa_convert_type().","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.C: miEEA & rbioapi","text":"cite miEAA (Please see https://ccb-compute2.cs.uni-saarland.de/mieaa2/): Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed, Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen, David Wesley Craig, Eckart Meese, Andreas Keller, miEAA 2.0: integrating multi-species microRNA enrichment analysis workflow management systems, Nucleic Acids Research, Volume 48, Issue W1, 02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.C: miEEA & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_mieaa.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.C: miEEA & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       DT_0.22           xfun_0.30         cli_3.2.0         #> [13] jquerylib_0.1.4   crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 #> [17] yaml_2.3.5        digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     #> [21] textshaping_0.3.6 purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        #> [25] fs_1.5.2          curl_4.3.2        memoise_2.0.1     cachem_1.0.6      #> [29] evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    #> [33] bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.D: PANTHER & rbioapi","text":"Directly quoting paper published PANTHER (Protein Analysis Evolutionary Relationships) authors: PANTHER classification system (http://www.pantherdb.org) comprehensive system combines genomes, gene function , pathways statistical analysis tools enable analyze large-scale genome-wide experimental data. system (PANTHER v.14.0) covers 131 complete genomes organized gene families subfamilies; evolutionary relationships represented phylogenetic trees, multiple sequence statistical models (hidden Markov models (HMMs)). families subfamilies annotated Gene Ontology (GO) terms, sequences assigned PANTHER pathways. suite tools built allow users browse query gene functions analyze-scale experimental data number statistical tests. widely used bench scientists, bioinformaticians, computer systems biologists. (source: Mi, Huaiyu, et al. “Protocol Update large-scale genome gene function analysis PANTHER classification system (v. 14.0).” Nature protocols 14.3 (2019): 703-721) available tools PANTHER’s RESTful API services can divided 3 broad categories: Mapping genes, retrieving information, research tools. Herein, provide short introduction; can always check functions’ manuals detailed guides examples.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"map-genes","dir":"Articles","previous_headings":"","what":"Map genes","title":"2.D: PANTHER & rbioapi","text":"rba_panther_mapping(): map gene-set PANTHER database retrieve attributes annotations associated genes rba_panther_ortholog(): Retrieve Orthologs genes rba_panther_homolog(): Retrieve Homologs genes","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"get-information","dir":"Articles","previous_headings":"","what":"Get information","title":"2.D: PANTHER & rbioapi","text":"rba_panther_info(): Retrieve list PANTHER’s supported organisms, datasets, families, pathways rba_panther_family(): Retrieve Orthologs, MSA, Tree topology given PANTHER family.","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"gene-list-analysis","dir":"Articles","previous_headings":"Research tools","what":"Gene List Analysis","title":"2.D: PANTHER & rbioapi","text":"rba_panther_enrich() equivalent Gene List analysis tool’s webpage.. usage example: Please Note: services supported rbioapi also provide -representation analysis tools. Please see vignette article rbioapi: -Representation (Enrichment) Analysis R (link documentation site) -depth review.","code":"## 1 We get the available annotation datasets in PANTHER (we need to select one of them to submit an enrichment request) annots <- rba_panther_info(what = \"datasets\") #> Retrieving available annotation datasets. ## 2 We create a variable with our genes' IDs genes <- c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\",\"CDK1\",\"KIF23\",\"PLK1\",            \"RAC2\",\"RACGAP1\",\"RHOA\",\"RHOB\", \"PHF14\", \"RBM3\", \"MSL1\") ## 3 Now we can submit the enrichment request. enriched <- rba_panther_enrich(genes = genes,                                organism = 9606,                                annot_dataset = \"ANNOT_TYPE_ID_PANTHER_PATHWAY\",                                cutoff = 0.05) #> Performing over-representation enrichment analysis of 15 input genes of organism 9606 against ANNOT_TYPE_ID_PANTHER_PATHWAY datasets."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"tree-grafter","dir":"Articles","previous_headings":"Research tools","what":"Tree grafter","title":"2.D: PANTHER & rbioapi","text":"rba_panther_tree_grafter() equivalent “Graft sequence PANTHER library trees” tool.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.D: PANTHER & rbioapi","text":"cite PANTHER (Please see http://www.pantherdb.org/publications.jsp#HowToCitePANTHER): Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills, Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER version 16: revised family classification, tree-based classification tool, enhancer regions extensive API, Nucleic Acids Research, Volume 49, Issue D1, 8 January 2021, Pages D394–D403, https://doi.org/10.1093/nar/gkaa1106 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.D: PANTHER & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_panther.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.D: PANTHER & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       DT_0.22           xfun_0.30         cli_3.2.0         #> [13] jquerylib_0.1.4   crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 #> [17] yaml_2.3.5        digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     #> [21] textshaping_0.3.6 purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        #> [25] fs_1.5.2          curl_4.3.2        memoise_2.0.1     cachem_1.0.6      #> [29] evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    #> [33] bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.E: Reactome & rbioapi","text":"Directly quoting Reactome: REACTOME open-source, open access, manually curated peer-reviewed pathway database. goal provide intuitive bioinformatics tools visualization, interpretation analysis pathway knowledge support basic clinical research, genome analysis, modeling, systems biology education. Founded 2003, Reactome project led Lincoln Stein  OICR, Peter D’Eustachio  NYULMC, Henning Hermjakob  EMBL-EBI, Guanming Wu  OHSU. (source: https://reactome.org/--reactome) Reactome provides two RESTful API services: Reactome content services Reactome analysis services. rbioapi, naming schema function belongs analysis services starts rba_reactome_analysis* . rba_reactome_* functions without ‘analysis’ infix correspond content services API. continuing reading article, good idea read Reactome Data Model page.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"reactome-analysis-services","dir":"Articles","previous_headings":"","what":"Reactome analysis services","title":"2.E: Reactome & rbioapi","text":"section mostly revolves around rba_reactome_analysis() function. , naturally, start . explained function’s manual, considerable freedom providing main input function; can supply R object (data frame, matrix, simple vector), URL, local file path. Note type analysis decided based whether input 1-dimensional 2-dimensional. explained detail manual rba_reactome_analysis(), see information.rba_reactome_analysis() API equivalent Reactome’s analyse gene list tool. can see function’s arguments correspond choose webpage’s wizard. mentioned, rba_reactome_analysis()’s arguments correspond wizard analyse gene list tool; arguments corresponds contents “Filter results” tab results page. analysis’s token, can retrieve analysis results many formats using rba_reactome_analysis_pdf() rba_reactome_analysis_download(): token guaranteed stored 7 days. , can upload JSON file downloaded using rba_reactome_analysis_download get token : Please Note: services supported rbioapi also provide -representation analysis tools. Please see vignette article rbioapi: -Representation (Enrichment) Analysis R (link documentation site) -depth review.","code":"## 1 We create a simple vector with our genes genes <- c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\", \"CDK1\", \"KIF23\", \"PLK1\", \"RAC2\", \"RACGAP1\", \"RHOA\", \"RHOB\", \"MSL1\", \"PHF21A\", \"INSR\", \"JADE2\", \"P2RX7\", \"CCDC101\", \"PPM1B\", \"ANAPC16\", \"CDH8\", \"HSPA1L\", \"CUL2\", \"ZNF302\", \"CUX1\", \"CYTH2\", \"SEC22C\", \"EIF4E3\", \"ROBO2\", \"CXXC1\", \"LINC01314\", \"ATP5F1\")  ## 2 We call reactome analysis with the default parameters analyzed <- rba_reactome_analysis(input = genes,                                   projection = TRUE,                                   p_value = 0.01)  ## 3 As always, we use str() to inspect the resutls str(analyzed, 1) #> List of 8 #>  $ summary            :List of 7 #>  $ expression         :List of 1 #>  $ identifiersNotFound: int 1 #>  $ pathwaysFound      : int 69 #>  $ pathways           :'data.frame': 69 obs. of  19 variables: #>  $ resourceSummary    :'data.frame': 3 obs. of  3 variables: #>  $ speciesSummary     :'data.frame': 1 obs. of  5 variables: #>  $ warnings           : chr \"Missing header. Using a default one.\"  ## 4 Note that in the summary element: (analyzed$summary) ### 4.a because we supplied a simple vector, the analysis type was: over-representation ### 4.b You need the token for other rba_reactome_analysis_* functions  ## 5 Analsis results are in the pathways data frame: # download a full pdf report rba_reactome_analysis_pdf(token = analyzed$summary$token,                           species = 9606) # download the result in compressed json.gz format rba_reactome_analysis_download(token = analyzed$summary$token,                                request = \"results\",                                save_to = \"reactome_results.json\") re_uploaded <- rba_reactome_analysis_import(input = \"reactome_results.json\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"analysis_see-also-in-functions-manuals","dir":"Articles","previous_headings":"Reactome analysis services","what":"See also in Functions’ manuals","title":"2.E: Reactome & rbioapi","text":"rbioapi Reactome analysis functions covered vignette, sure check manuals: rba_reactome_analysis_mapping() rba_reactome_analysis_species() rba_reactome_analysis_token()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"reactome-contents-services","dir":"Articles","previous_headings":"","what":"Reactome contents services","title":"2.E: Reactome & rbioapi","text":"rbioapi functions correspond Reactome content services starting rba_reactome_* without “_analysis” infix. functions cover can objects Reactome knowledge-base. simpler terms, -- correspond can find Reactome Pathway Browser search results. (e.g. pathway, reaction, physical Entity, etc.)","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"retrieve-any-object-from-reactome-knowledge-base","dir":"Articles","previous_headings":"Reactome contents services","what":"Retrieve any object from Reactome knowledge-base","title":"2.E: Reactome & rbioapi","text":"Using rba_reactome_query(), can retrieve object Reactome knowledge-base. simpler terms, mean object roughly anything Reactome associated ID . can range person’s entry proteins, reactions, pathways, species, many ! can explore Reactome’s data schema learn Reactome knowledge-base objects organization. examples, note limited one ID per query. can use vector inputs, limitation supply one ID, enhanced = TRUE.","code":"## 1 query a pathway Entry pathway <- rba_reactome_query(ids = \"R-HSA-109581\", enhanced = TRUE) ## 2 As always we use str() to inspect the output's structure str(pathway, 2) #> List of 26 #>  $ dbId               : int 109581 #>  $ displayName        : chr \"Apoptosis\" #>  $ stId               : chr \"R-HSA-109581\" #>  $ stIdVersion        : chr \"R-HSA-109581.3\" #>  $ created            :List of 5 #>   ..$ dbId       : int 109608 #>   ..$ displayName: chr \"Alnemri, E, Hengartner, Michael, Tschopp, Jürg, Tsujimoto, Yoshihide, Hardwick, JM, 2004-01-16\" #>   ..$ dateTime   : chr \"2004-01-16 16:01:51\" #>   ..$ className  : chr \"InstanceEdit\" #>   ..$ schemaClass: chr \"InstanceEdit\" #>  $ modified           :List of 6 #>   ..$ dbId       : int 10802684 #>   ..$ displayName: chr \"Weiser, Joel, 2022-03-23\" #>   ..$ dateTime   : chr \"2022-03-23 16:39:11\" #>   ..$ note       : chr \"Inserted by org.reactome.orthoinference\" #>   ..$ className  : chr \"InstanceEdit\" #>   ..$ schemaClass: chr \"InstanceEdit\" #>  $ isInDisease        : logi FALSE #>  $ isInferred         : logi FALSE #>  $ name               :List of 1 #>   ..$ : chr \"Apoptosis\" #>  $ releaseDate        : chr \"2004-09-20\" #>  $ speciesName        : chr \"Homo sapiens\" #>  $ authored           :List of 1 #>   ..$ : int 109608 #>  $ crossReference     :List of 1 #>   ..$ :List of 7 #>  $ edited             :List of 1 #>   ..$ :List of 5 #>  $ figure             :List of 1 #>   ..$ :List of 5 #>  $ goBiologicalProcess:List of 9 #>   ..$ dbId        : int 2273 #>   ..$ displayName : chr \"apoptotic process\" #>   ..$ accession   : chr \"0006915\" #>   ..$ databaseName: chr \"GO\" #>   ..$ definition  : chr \"A programmed cell death process which begins when a cell receives an internal (e.g. DNA damage) or external sig\"| __truncated__ #>   ..$ name        : chr \"apoptotic process\" #>   ..$ url         : chr \"https://www.ebi.ac.uk/QuickGO/term/GO:0006915\" #>   ..$ className   : chr \"GO_BiologicalProcess\" #>   ..$ schemaClass : chr \"GO_BiologicalProcess\" #>  $ literatureReference:List of 7 #>   ..$ :List of 11 #>   ..$ :List of 11 #>   ..$ :List of 11 #>   ..$ :List of 11 #>   ..$ :List of 11 #>   ..$ :List of 11 #>   ..$ :List of 11 #>  $ orthologousEvent   :List of 14 #>   ..$ :List of 16 #>   ..$ :List of 16 #>   ..$ :List of 16 #>   ..$ :List of 16 #>   ..$ :List of 16 #>   ..$ :List of 15 #>   ..$ :List of 15 #>   ..$ :List of 15 #>   ..$ :List of 16 #>   ..$ :List of 16 #>   ..$ :List of 15 #>   ..$ :List of 15 #>   ..$ :List of 15 #>   ..$ :List of 15 #>  $ reviewed           :List of 1 #>   ..$ :List of 5 #>  $ species            :List of 1 #>   ..$ :List of 8 #>  $ summation          :List of 1 #>   ..$ :List of 5 #>  $ hasDiagram         : logi TRUE #>  $ hasEHLD            : logi TRUE #>  $ hasEvent           :List of 4 #>   ..$ :List of 16 #>   ..$ :List of 17 #>   ..$ :List of 16 #>   ..$ :List of 16 #>  $ className          : chr \"Pathway\" #>  $ schemaClass        : chr \"Pathway\"    ## 3 You can compare it with the webpage of R-HSA-202939 entry: # https://reactome.org/content/detail/R-HSA-202939 ## 1 query a protein Entry protein <- rba_reactome_query(ids = 66247, enhanced = TRUE) ## 2 As always we use str() to inspect the output's structure str(protein, 1) #> List of 27 #>  $ dbId               : int 66247 #>  $ displayName        : chr \"UniProt:P25942-1 CD40\" #>  $ modified           :List of 6 #>  $ databaseName       : chr \"UniProt\" #>  $ identifier         : chr \"P25942\" #>  $ name               :List of 1 #>  $ otherIdentifier    :List of 117 #>  $ url                : chr \"http://purl.uniprot.org/uniprot/P25942-1\" #>  $ crossReference     :List of 29 #>  $ referenceDatabase  :List of 8 #>  $ physicalEntity     :List of 1 #>  $ checksum           : chr \"BC8776EC2C4A5680\" #>  $ comment            :List of 1 #>  $ description        :List of 1 #>  $ geneName           :List of 2 #>  $ isSequenceChanged  : logi FALSE #>  $ keyword            :List of 16 #>  $ secondaryIdentifier:List of 8 #>  $ sequenceLength     : int 277 #>  $ species            : int 48887 #>  $ chain              :List of 2 #>  $ referenceGene      :List of 11 #>  $ referenceTranscript:List of 4 #>  $ variantIdentifier  : chr \"P25942-1\" #>  $ isoformParent      :List of 1 #>  $ className          : chr \"ReferenceIsoform\" #>  $ schemaClass        : chr \"ReferenceIsoform\"    ## 3 You can compare it with the webpage of R-HSA-202939 entry: # https://reactome.org/content/detail/R-HSA-202939"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"find-cross-reference-ids-in-reactome","dir":"Articles","previous_headings":"Reactome contents services","what":"Find Cross-Reference IDs in Reactome","title":"2.E: Reactome & rbioapi","text":"can see second example usage used Reactome’s dbID 66247 query CD40 protein. obtain first place? can use rba_reactome_xref map cross-reference (external) IDs Reactome IDs.","code":"## 1 We Supply HGNC ID to find what is the corresponding database ID in Reactome xref_protein <- rba_reactome_xref(\"CD40\") ## 2 As always use str() to inspect the output's structure str(xref_protein, 1) #> List of 19 #>  $ dbId               : int 66247 #>  $ displayName        : chr \"UniProt:P25942-1 CD40\" #>  $ databaseName       : chr \"UniProt\" #>  $ identifier         : chr \"P25942\" #>  $ name               :List of 1 #>  $ otherIdentifier    :List of 1 #>  $ url                : chr \"http://purl.uniprot.org/uniprot/P25942-1\" #>  $ checksum           : chr \"BC8776EC2C4A5680\" #>  $ comment            :List of 1 #>  $ description        :List of 1 #>  $ geneName           :List of 1 #>  $ isSequenceChanged  : logi FALSE #>  $ keyword            :List of 1 #>  $ secondaryIdentifier:List of 1 #>  $ sequenceLength     : int 277 #>  $ chain              :List of 1 #>  $ variantIdentifier  : chr \"P25942-1\" #>  $ className          : chr \"ReferenceIsoform\" #>  $ schemaClass        : chr \"ReferenceIsoform\""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"map-cross-reference-ids-to-reactome","dir":"Articles","previous_headings":"Reactome contents services","what":"Map Cross-Reference IDs to Reactome","title":"2.E: Reactome & rbioapi","text":"cross-reference topic, another useful resource. Using rba_reactome_mapping can find Reactome pathways reactions include external ID:","code":"## 1 Again, consider CD40 protein: xref_mapping <- rba_reactome_mapping(id = \"CD40\",                                     resource = \"hgnc\",                                     map_to = \"pathways\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"see-also-in-functions-manuals","dir":"Articles","previous_headings":"Reactome contents services","what":"See also in Functions’ manuals","title":"2.E: Reactome & rbioapi","text":"still rbioapi f Reactome content functions covered vignette. brief overview, see functions’ manual detailed guides examples.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"retrieve-reactome-database-information","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Retrieve Reactome Database information","title":"2.E: Reactome & rbioapi","text":"rba_reactome_version(): Return current Reactome version rba_reactome_diseases(): Retrieve list disease annotated Reactome. rba_reactome_species(): Retrieve list species annotated Reactome.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"general-mappingquerying","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"General Mapping/Querying","title":"2.E: Reactome & rbioapi","text":"rba_reactome_query() rba_reactome_mapping() rba_reactome_xref()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"things-you-can-do-with-a-entities","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Things you can do with a Entities","title":"2.E: Reactome & rbioapi","text":"reactome_complex_list(): Get list complexes molecule . rba_reactome_complex_subunits(): Get list subunits complex rba_reactome_participant_of(): Get list Reactome sets complexes entity (event, molecule, reaction, pathway etc.) participant . rba_reactome_entity_other_forms()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"things-you-can-do-with-events","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Things you can do with Events","title":"2.E: Reactome & rbioapi","text":"rba_reactome_event_ancestors() rba_reactome_participants() rba_reactome_pathways_events() rba_reactome_event_ancestors() rba_reactome_orthology() rba_reactome_event_hierarchy(): Retrieve full event hierarchy species.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"pathways","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Pathways","title":"2.E: Reactome & rbioapi","text":"rba_reactome_pathways_low() rba_reactome_pathways_events() rba_reactome_pathways_top()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"interactors","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Interactors","title":"2.E: Reactome & rbioapi","text":"rba_reactome_interactors_psicquic() rba_reactome_interactors_static()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"people","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"People","title":"2.E: Reactome & rbioapi","text":"rba_reactome_people_name() rba_reactome_people_id()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"export-diagrams-and-events","dir":"Articles","previous_headings":"Reactome contents services > See also in Functions’ manuals","what":"Export diagrams and events","title":"2.E: Reactome & rbioapi","text":"rba_reactome_exporter_diagram() rba_reactome_exporter_overview() rba_reactome_exporter_reaction() rba_reactome_exporter_event()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.E: Reactome & rbioapi","text":"cite Reactome (Please see https://reactome.org/cite): Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau, Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson, Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu, Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028, https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat , Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed PMID: 32907876. Fabregat , Korninger F, Viteri G, Sidiropoulos K, Marin-Garcia P, Ping P, Wu G, Stein L, D’Eustachio P, Hermjakob H. Reactome graph database: Efficient access complex pathway data. PLoS Comput Biol. 2018 Jan 29;14(1):e1005968. doi: 10.1371/journal.pcbi.1005968. eCollection 2018 Jan. PubMed PMID: 29377902. Fabregat , Sidiropoulos K, Viteri G, Marin-Garcia P, Ping P, Stein L, D’Eustachio P, Hermjakob H. Reactome diagram viewer: data structures strategies boost performance. Bioinformatics. 2018 Apr 1;34(7):1208-1214. doi: 10.1093/bioinformatics/btx752. PubMed PMID: 29186351. Fabregat , Sidiropoulos K, Viteri G, Forner O, Marin-Garcia P, Arnau V, D’Eustachio P, Stein L, Hermjakob H. Reactome pathway analysis: high-performance -memory approach. BMC Bioinformatics. 2017 Mar 2;18(1):142. doi: 10.1186/s12859-017-1559-2. PubMed PMID: 28249561. Wu G, Haw R. Functional Interaction Network Construction Analysis Disease Discovery. Methods Mol Biol. 2017;1558:235-253. doi: 10.1007/978-1-4939-6783-4_11. PubMed PMID: 28150241.  cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.E: Reactome & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_reactome.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.E: Reactome & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       DT_0.22           xfun_0.30         cli_3.2.0         #> [13] jquerylib_0.1.4   crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 #> [17] yaml_2.3.5        digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     #> [21] textshaping_0.3.6 purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        #> [25] fs_1.5.2          curl_4.3.2        memoise_2.0.1     cachem_1.0.6      #> [29] evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    #> [33] bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.F: STRING & rbioapi","text":"STRING comprehensive database protein-protein interactions (PPI) version 11.0, covers 24,584,628 proteins 5,090 organisms. Directly quoting paper: STRING database aims collect, score integrate publicly available sources protein–protein interaction information, complement computational predictions. goal achieve comprehensive objective global network, including direct (physical) well indirect (functional) interactions. (source: Szklarczyk, Damian, et al. “STRING v11: protein–protein association networks increased coverage, supporting functional discovery genome-wide experimental datasets.” Nucleic acids research 47.D1 (2019): D607-D613. )","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"note-about-species-argument","dir":"Articles","previous_headings":"","what":"Note about species argument","title":"2.F: STRING & rbioapi","text":"can find argument named “species” every rbioapi STRING function. Providing species argument mandatory, recommended STRING API’s documentation always specify species. exception input proteins’ vector length 100; cases, species argument required. Otherwise, calling function without providing species produce ERROR.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"map-your-ids-to-string-ids","dir":"Articles","previous_headings":"","what":"Map your IDs to STRING IDs","title":"2.F: STRING & rbioapi","text":"Although STRING API resources handle recognize variety identifiers, recommended first map IDs STRING IDs using rbioapi STRING functions.","code":"## 1 We create a variable with our genes' NCBI IDs proteins <- c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\",\"CDK1\",\"KIF23\",               \"PLK1\",\"RAC2\",\"RACGAP1\",\"RHOA\",\"RHOB\", \"PHF14\", \"RBM3\") ## 2 Now we map our protein IDs proteins_mapped <- rba_string_map_ids(ids = proteins,                                       species = 9606) ## 3 What we need and will use for the rest of this vignette is the `stringId` column"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"get-interaction-network-of-a-protein-set","dir":"Articles","previous_headings":"","what":"Get interaction network of a protein set","title":"2.F: STRING & rbioapi","text":"can retrieve list interactions proteins set along STRING annotations interaction. may filter results using required_score network_type arguments. See ‘values’ section rba_string_interactions_network function’s manual information returned columns.","code":"int_net <- rba_string_interactions_network(ids = proteins_mapped,                                           species = 9606,                                           required_score = 500)"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"get-interaction-partners-of-a-protein-set","dir":"Articles","previous_headings":"","what":"Get interaction partners of a protein set","title":"2.F: STRING & rbioapi","text":"last example, obtained interaction proteins among , wanted get list every protein interact protein(s)? , can use rba_string_interaction_partners:","code":"## Although we supply only one protein ID here (CD40 protein), you can provide a vector of proteins as the input int_partners <- rba_string_interaction_partners(ids = \"9606.ENSP00000361359\",                                                species = 9606,                                                required_score = 900)"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"get-network-image-of-a-protein-set","dir":"Articles","previous_headings":"","what":"Get network image of a protein set","title":"2.F: STRING & rbioapi","text":"Let’s go back interaction network. must seen STRING webpages, STRING plots interaction network proteins many customizations available. can also STRING API services. rba_string_network_image function flexible variety options; see function’s manual. Network images - Example 1 Network images - Example 2","code":"## Example 1: graph_1 <- rba_string_network_image(ids = proteins_mapped,                                    image_format = \"image\",                                    species = 9606,                                    save_image = FALSE,                                    required_score = 500,                                    network_flavor = \"confidence\") ## Example 2: graph_2 <- rba_string_network_image(ids = proteins_mapped,                                     image_format = \"image\",                                     species = 9606,                                     save_image = FALSE,                                     required_score = 500,                                     add_color_nodes = 5,                                     add_white_nodes = 5,                                    network_flavor = \"actions\")"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"enrichment-using-string","dir":"Articles","previous_headings":"","what":"Enrichment using STRING","title":"2.F: STRING & rbioapi","text":"STRING let perform two types enrichments. See STRING’s paper information.","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"functional-enrichment","dir":"Articles","previous_headings":"Enrichment using STRING","what":"Functional enrichment","title":"2.F: STRING & rbioapi","text":"first type conventional type, statistically tests supplied gene sets sets annotation. Currently, STRING supports Gene Ontology, KEGG pathways, UniProt Keywords, PubMed publications, Pfam domains, InterPro domains, SMART domains. (source). usual, inspect output using str() function. can see , enrichment results category can found returned list’s elements. Let us see “DISEASES” results example. , can see terms Human Disease Ontology -represented: Please Note: services supported rbioapi also provide -representation analysis tools. Please see vignette article rbioapi: -Representation (Enrichment) Analysis R (link documentation site) -depth review.","code":"enriched <- rba_string_enrichment(ids = proteins_mapped,                                   species = 9606, ) str(enriched, max.level = 1) #> List of 14 #>  $ COMPARTMENTS     :'data.frame':   32 obs. of  10 variables: #>  $ Component        :'data.frame':   21 obs. of  10 variables: #>  $ DISEASES         :'data.frame':   5 obs. of  10 variables: #>  $ Function         :'data.frame':   14 obs. of  10 variables: #>  $ InterPro         :'data.frame':   3 obs. of  10 variables: #>  $ KEGG             :'data.frame':   45 obs. of  10 variables: #>  $ Keyword          :'data.frame':   14 obs. of  10 variables: #>  $ NetworkNeighborAL:'data.frame':   6 obs. of  10 variables: #>  $ Pfam             :'data.frame':   3 obs. of  10 variables: #>  $ PMID             :'data.frame':   100 obs. of  10 variables: #>  $ Process          :'data.frame':   204 obs. of  10 variables: #>  $ RCTM             :'data.frame':   55 obs. of  10 variables: #>  $ TISSUES          :'data.frame':   14 obs. of  10 variables: #>  $ WikiPathways     :'data.frame':   42 obs. of  10 variables:"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"protein-protein-interaction-enrichment","dir":"Articles","previous_headings":"Enrichment using STRING","what":"Protein-protein interaction enrichment","title":"2.F: STRING & rbioapi","text":"Even without incorporating annotation data, STRING can calculate proteins functionally related. Briefly, STRING accomplishes comparing interactions’ distribution protein-set interactions’ distribution proteome. Read STRING’s paper information.","code":"rba_string_enrichment_ppi(ids = proteins_mapped,                           species = 9606) #> $number_of_nodes #> [1] 14 #>  #> $number_of_edges #> [1] 40 #>  #> $average_node_degree #> [1] 5.71 #>  #> $local_clustering_coefficient #> [1] 0.617 #>  #> $expected_number_of_edges #> [1] 16 #>  #> $p_value #> [1] 2.58e-07"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"get-functional-annotations","dir":"Articles","previous_headings":"","what":"Get functional annotations","title":"2.F: STRING & rbioapi","text":"seen , STRING maps proteins multiple annotation sources. can obtain annotation associated proteins without performing enrichment analysis retrieving just significant portion.","code":"annotations <- rba_string_annotations(ids = \"9606.ENSP00000269305\",                                      species = 9606)  ## This function returns large results, so the results was not shown in this vignette."},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"see-also-in-functions-manuals","dir":"Articles","previous_headings":"","what":"See also in Functions’ manuals","title":"2.F: STRING & rbioapi","text":"rbioapi STRING functions covered vignette, please check manuals: rba_string_homology_intra() rba_string_homology_inter() rba_string_version()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.F: STRING & rbioapi","text":"cite STRING (Please see https://string-db.org/cgi/?footer_active_subpage=references): Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon, Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang, Peer Bork, Lars J Jensen, Christian von Mering, STRING database 2021: customizable protein–protein networks, functional characterization user-uploaded gene/measurement sets, Nucleic Acids Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612, https://doi.org/10.1093/nar/gkaa1074 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.F: STRING & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_string.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.F: STRING & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     highr_0.9         httr_1.4.2        #>  [9] stringr_1.4.0     tools_4.1.3       grid_4.1.3        DT_0.22           #> [13] xfun_0.30         png_0.1-7         cli_3.2.0         jquerylib_0.1.4   #> [17] crosstalk_1.2.0   htmltools_0.5.2   systemfonts_1.0.4 yaml_2.3.5        #> [21] digest_0.6.29     rprojroot_2.0.3   pkgdown_2.0.2     textshaping_0.3.6 #> [25] purrr_0.3.4       htmlwidgets_1.5.4 sass_0.4.1        fs_1.5.2          #> [29] curl_4.3.2        memoise_2.0.1     cachem_1.0.6      evaluate_0.15     #> [33] rmarkdown_2.13    stringi_1.7.6     compiler_4.1.3    bslib_0.3.1       #> [37] desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2.G: UniProt & rbioapi","text":"Directly quoting UniProt: Universal Protein Resource (UniProt) comprehensive resource protein sequence annotation data. UniProt databases UniProt Knowledgebase (UniProtKB), UniProt Reference Clusters (UniRef), UniProt Archive (UniParc). UniProt consortium host institutions EMBL-EBI, SIB PIR committed long-term preservation UniProt databases. (source: https://www.uniprot.org/help/)","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"note-about-species-argument","dir":"Articles","previous_headings":"","what":"Search vs Retrieve","title":"2.G: UniProt & rbioapi","text":"rbioapi UniProt functions two variants. one retrieve data using proper accession, second one (_search suffix) search using combination arguments. first demonstrate using example, provide list functions rbioapi. Suppose interested Human CD40 ligand protein, know ’s UniProt accession “P29965”. can simply following: equivalent page UniProt accession (UniProtKB - P29965). didn’t know UniProt accession? simply want perform search using certain parameters? can use function _search suffix: equivalent ‘advanced search’ UniProt web portal. See function rba_uniprot_proteins_search’s manual information. Remember *_search functions, required fill every argument, can use combination arguments see fit build search query. applications *_search variants limited title ‘search’ implies. functions also retrieve search hits response; Thus can use mass-retrieving. see “argument” section functions’ manuals, see many arguments accept vector values. consider following examples:","code":"## 1 We can retrieve CD40 protein's information by qurying it's UniProt accession: cd40 <- rba_uniprot_proteins(accession = \"P29965\")  ## 2 We use str() to inspect our object's structure str(cd40, 1) #> List of 13 #>  $ accession       : chr \"P29965\" #>  $ id              : chr \"CD40L_HUMAN\" #>  $ proteinExistence: chr \"Evidence at protein level\" #>  $ info            :List of 4 #>  $ organism        :List of 3 #>  $ protein         :List of 4 #>  $ gene            :'data.frame':    1 obs. of  2 variables: #>  $ comments        :'data.frame':    12 obs. of  10 variables: #>  $ features        :'data.frame':    63 obs. of  9 variables: #>  $ dbReferences    :'data.frame':    128 obs. of  4 variables: #>  $ keywords        :'data.frame':    13 obs. of  1 variable: #>  $ references      :'data.frame':    25 obs. of  3 variables: #>  $ sequence        :List of 5 ## 1 From the available arguments, we fill only those which we think is pertinent cd40_search <- rba_uniprot_proteins_search(protein = \"CD40 ligand\",                                           organism = \"human\",                                           reviewed = TRUE) ## 2 As always, we use str() to inspect our object's structure str(cd40_search, 2) #> List of 1 #>  $ P29965:List of 13 #>   ..$ accession       : chr \"P29965\" #>   ..$ id              : chr \"CD40L_HUMAN\" #>   ..$ proteinExistence: chr \"Evidence at protein level\" #>   ..$ info            :List of 4 #>   ..$ organism        :List of 3 #>   ..$ protein         :List of 4 #>   ..$ gene            :List of 1 #>   ..$ comments        :List of 12 #>   ..$ features        :List of 63 #>   ..$ dbReferences    :List of 128 #>   ..$ keywords        :List of 13 #>   ..$ references      :List of 25 #>   ..$ sequence        :List of 5 ## 1 As the simplest scenario, we can retrieve multiple proteins in one call multi_prs1 <- rba_uniprot_proteins_search(accession = c(\"P04637\",                                                        \"P38398\",                                                        \"P24941\",                                                        \"P60953\",                                                        \"P06493\",                                                        \"Q02241\")) ## As always, we use str() to inspect our object's structure str(multi_prs1, 1) #> List of 6 #>  $ P60953:List of 14 #>  $ P24941:List of 14 #>  $ P04637:List of 14 #>  $ Q02241:List of 14 #>  $ P38398:List of 14 #>  $ P06493:List of 14  ## 2 Or alternatively, search using Gene names, also we want to exclude isoforms and only retrieve swiss-prot entries multi_prs2 <- rba_uniprot_proteins_search(gene = c(\"KIF23\",                                                   \"BRCA1\",                                                   \"TP53\",                                                   \"CDC42\"),                                          reviewed = TRUE,                                          taxid = 9606,                                          isoform = 0)  str(multi_prs2, 1) #> List of 29 #>  $ Q9ULZ0:List of 14 #>  $ Q02241:List of 14 #>  $ P38398:List of 14 #>  $ Q12888:List of 14 #>  $ P04637:List of 14 #>  $ Q9HCN2:List of 14 #>  $ A1A5B4:List of 14 #>  $ Q9NS56:List of 14 #>  $ Q9Y2B4:List of 13 #>  $ Q8IXH6:List of 14 #>  $ Q53FA7:List of 14 #>  $ Q96A56:List of 14 #>  $ O14683:List of 14 #>  $ Q96S44:List of 14 #>  $ Q8NBR0:List of 14 #>  $ Q13625:List of 14 #>  $ Q7L0Q8:List of 14 #>  $ Q5VT25:List of 14 #>  $ Q00587:List of 14 #>  $ O14613:List of 14 #>  $ Q6DT37:List of 14 #>  $ Q9UKI2:List of 14 #>  $ Q6NZY7:List of 14 #>  $ Q9H3Q1:List of 14 #>  $ Q07960:List of 14 #>  $ Q9Y5S2:List of 14 #>  $ Q9NRR8:List of 14 #>  $ Q9NRR3:List of 14 #>  $ P60953:List of 14 ## 3 Search for every proteins with chemokines keyword multi_prs3 <- rba_uniprot_proteins_search(keyword = \"chemokines\")  str(multi_prs3, 1) #> List of 14 #>  $ P09703:List of 15 #>  $ Q6SW98:List of 15 #>  $ P33854:List of 14 #>  $ P0DSV7:List of 15 #>  $ Q98314:List of 15 #>  $ P07562:List of 14 #>  $ P19063:List of 14 #>  $ P16849:List of 15 #>  $ P69332:List of 15 #>  $ P24766:List of 15 #>  $ P34016:List of 14 #>  $ P21064:List of 14 #>  $ P0DSV8:List of 15 #>  $ F5HBX1:List of 14 ## 4 Search for every protein of \"SARS-CoV-2\" virus in Swiss-Prot multi_prs4 <- rba_uniprot_proteins_search(organism = \"SARS-CoV-2\",                                          reviewed = TRUE)  str(multi_prs4, 1) #> List of 16 #>  $ P0DTD3:List of 14 #>  $ P0DTC6:List of 14 #>  $ P0DTG0:List of 13 #>  $ P0DTC7:List of 14 #>  $ P0DTC2:List of 14 #>  $ P0DTC8:List of 14 #>  $ P0DTC4:List of 14 #>  $ P0DTC9:List of 14 #>  $ P0DTC5:List of 14 #>  $ P0DTC3:List of 14 #>  $ P0DTD8:List of 14 #>  $ P0DTD2:List of 14 #>  $ P0DTF1:List of 13 #>  $ P0DTD1:List of 14 #>  $ P0DTC1:List of 13 #>  $ P0DTG1:List of 13"},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"functions-with-_search-variant","dir":"Articles","previous_headings":"Search vs Retrieve","what":"Functions with *_search variant","title":"2.G: UniProt & rbioapi","text":"search variants limited . list function retrieve search variants. See manuals detailed guides examples. rba_uniprot_proteins() & rba_uniprot_proteins_search() rba_uniprot_features() & rba_uniprot_features_search() rba_uniprot_variation() & rba_uniprot_variation_search() rba_uniprot_proteomics() & rba_uniprot_proteomics_search() rba_uniprot_antigens() & rba_uniprot_antigens_search() rba_uniprot_proteomes() & rba_uniprot_proteomes_search() rba_uniprot_ptm() & rba_uniprot_ptm_search() rba_uniprot_mutagenesis() & rba_uniprot_mutagenesis_search() rba_uniprot_genecentric() & rba_uniprot_genecentric_search() rba_uniprot_uniparc() & rba_uniprot_uniparc_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"uniprot-functions-categories","dir":"Articles","previous_headings":"","what":"UniProt functions categories","title":"2.G: UniProt & rbioapi","text":"UniProt API endpoints organized 5 group. categories rbioapi functions correspond one. See functions’ manuals details.","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"proteins-1","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Proteins:","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_proteins() rba_uniprot_proteins_search() rba_uniprot_proteins_crossref()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"features","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Features","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_features() rba_uniprot_features_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"variation","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Variation","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_variation() rba_uniprot_variation_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"proteomics","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Proteomics","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_proteomics() rba_uniprot_proteomics_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"post-translational-modification-ptm","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Post-Translational Modification (PTM)","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_ptm() rba_uniprot_ptm_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"antigens","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Antigens","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_antigens() rba_uniprot_antigens_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"mutagenesis","dir":"Articles","previous_headings":"UniProt functions categories > Proteins","what":"Mutagenesis","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_mutagenesis() rba_uniprot_mutagenesis_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"proteomes","dir":"Articles","previous_headings":"UniProt functions categories","what":"Proteomes","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_proteomes() rba_uniprot_proteomes_search() rba_uniprot_genecentric() rba_uniprot_genecentric_search()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"taxonomy","dir":"Articles","previous_headings":"UniProt functions categories","what":"Taxonomy","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_taxonomy() rba_uniprot_taxonomy_lca() rba_uniprot_taxonomy_lineage() rba_uniprot_taxonomy_name() rba_uniprot_taxonomy_path() rba_uniprot_taxonomy_relationship()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"coordinates","dir":"Articles","previous_headings":"UniProt functions categories","what":"Coordinates","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_coordinates() rba_uniprot_coordinates_search() rba_uniprot_coordinates_location() rba_uniprot_coordinates_sequence()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"uniparc","dir":"Articles","previous_headings":"UniProt functions categories","what":"UniParc","title":"2.G: UniProt & rbioapi","text":"rba_uniprot_uniparc() rba_uniprot_uniparc_search() rba_uniprot_uniparc_bestguess() rba_uniprot_uniparc_sequence()","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"Citations","dir":"Articles","previous_headings":"","what":"How to Cite?","title":"2.G: UniProt & rbioapi","text":"cite UniProt (Please see https://www.uniprot.org/help/publications): UniProt Consortium, UniProt: universal protein knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1, 8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd Turner, Maria Martin, Proteins API: accessing key integrated protein genome information, Nucleic Acids Research, Volume 45, Issue W1, 3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"links","dir":"Articles","previous_headings":"","what":"Links","title":"2.G: UniProt & rbioapi","text":"article rbioapi documentation site Functions references rbioapi documentation site rbioapi vignette index","code":""},{"path":"https://rbioapi.moosa-r.com/articles/rbioapi_uniprot.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2.G: UniProt & rbioapi","text":"","code":"#> R version 4.1.3 (2022-03-10) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur/Monterey 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] knitr_1.38        magrittr_2.0.3    R6_2.5.1          ragg_1.2.2        #>  [5] rlang_1.0.2       fastmap_1.1.0     httr_1.4.2        stringr_1.4.0     #>  [9] tools_4.1.3       xfun_0.30         cli_3.2.0         jquerylib_0.1.4   #> [13] htmltools_0.5.2   systemfonts_1.0.4 yaml_2.3.5        digest_0.6.29     #> [17] rprojroot_2.0.3   pkgdown_2.0.2     textshaping_0.3.6 purrr_0.3.4       #> [21] sass_0.4.1        fs_1.5.2          curl_4.3.2        memoise_2.0.1     #> [25] cachem_1.0.6      evaluate_0.15     rmarkdown_2.13    stringi_1.7.6     #> [29] compiler_4.1.3    bslib_0.3.1       desc_1.4.1        jsonlite_1.8.0"},{"path":"https://rbioapi.moosa-r.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Moosa Rezwani. Author, maintainer.","code":""},{"path":"https://rbioapi.moosa-r.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services' API Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172","code":"@Article{,   title = {rbioapi: User-Friendly R Interface to Biologic Web Services' API},   author = {Moosa Rezwani and Ali Akbar Pourfathollah and Farshid Noorbakhsh},   journal = {Bioinformatics},   year = {2022},   month = {03},   issn = {1367-4803},   doi = {10.1093/bioinformatics/btac172},   url = {https://doi.org/10.1093/bioinformatics/btac172},   note = {btac172},   eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btac172/42972934/btac172.pdf}, }"},{"path":"https://rbioapi.moosa-r.com/index.html","id":"rbioapi-user-friendly-r-interface-to-biologic-web-services-api","dir":"","previous_headings":"","what":"User-Friendly R Interface to Biologic Web Services' API","title":"User-Friendly R Interface to Biologic Web Services' API","text":"Moosa Rezwani 2022-04-17","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/index.html","id":"what-does-rbioapi-do","dir":"","previous_headings":"","what":"What does rbioapi do?","title":"User-Friendly R Interface to Biologic Web Services' API","text":"Currently fully supports Enrichr, JASPAR, miEAA, PANTHER, Reactome, STRING, UniProt! goal rbioapi provide user-friendly consistent interface biological databases services: way insulates user technicalities using web services API creates unified easy--use interface biological medical web services. rbioapi, need technical knowledge web services API learn work new package every biologic service database. ongoing project; New databases services added periodically. Feel free suggest databases services often use.","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"what-is-supported-by-rbioapi","dir":"","previous_headings":"","what":"What is Supported by rbioapi?","title":"User-Friendly R Interface to Biologic Web Services' API","text":"rbioapi dedicated Biological Medical databases web services. Currently, rbioapi supports covers every API resources following services: (alphabetical order): CRAN (Stable) version: (https://cran.r-project.org/package=rbioapi) Enrichr (rbioapi vignette article) (new) JASPAR (rbioapi vignette article) (new) miEAA (rbioapi vignette article) PANTHER (rbioapi vignette article) Reactome (rbioapi vignette article) STRING (rbioapi vignette article) UniProt (rbioapi vignette article) Github (Developmental) version: (https://github.com/moosa-r/rbioapi/): currently none services dedicated vignette article. However, article, write general framework rbioapi. Make sure check vignette article service learn use . Note : rbioapi ongoing project. New databases services implemented periodically order gradually make package comprehensive possible. see often using certain database/service? Feel free suggest database/service creating issue GitHub repository. appreciate suggestions.","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install?","title":"User-Friendly R Interface to Biologic Web Services' API","text":"can install stable release version rbioapi CRAN : However, CRAN version released every 1-2 months, can install recent (development) version GitHub :","code":"install.packages(\"rbioapi\") install.packages(\"remotes\") remotes::install_github(\"moosa-r/rbioapi\")"},{"path":"https://rbioapi.moosa-r.com/index.html","id":"design-philosophy-of-rbioapi","dir":"","previous_headings":"","what":"Design philosophy of rbioapi","title":"User-Friendly R Interface to Biologic Web Services' API","text":"structure functions consistent across data-bases services. means , using functions communicate different web services require new learning /training. Using package entail simple plugging values function’s arguments running code. function explicitly demand user run another function beforehand. functions’ organization, names, arguments faithful possible original API resources. package scalable easy collaborate. end, exported functions template-based structure internal functions hierarchical organization subset needed contributors. Beginner users able conveniently use rbioapi completely insulated technicalities. functions’ documentations extensive, self-contained, working examples, integrated corresponding web services terms citing information links guides. addition main vignette article, supported database web service vignette articles.","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"naming-conventions","dir":"","previous_headings":"","what":"Naming conventions","title":"User-Friendly R Interface to Biologic Web Services' API","text":"make namespace organized, functions named following pattern: example, rba_string_version() call STRING’s version resource. Thus, version, rbioapi function one following naming schema: rba_enrichr_* rba_jaspar_* rba_mieaa_* rba_panther_* rba_reactome_* rba_string_* rba_uniprot_* three exceptions: rba_options(), rba_connection_test(), rba_pages(); helper functions. later.","code":"rba_[service_name]_[resource_name] rba_string_version() #> Retrieving the STRING database version and address used by rbioapi. #> $string_version #> [1] \"11.5\" #>  #> $stable_address #> [1] \"https://version-11-5.string-db.org\""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"changing-the-options","dir":"","previous_headings":"","what":"Changing the options","title":"User-Friendly R Interface to Biologic Web Services' API","text":"provide control, multiple options implemented. See manual rba_options() function full description available options. short, options govern rbioapi’s connection servers (e.g. timeout, retry) options modify experience rbioapi (e.g. verbose, diagnostics, save_file). two ways may use change option. Also, can get table available rbioapi options current values calling rba_options()without argument: Now, let us consider ways can alter settings:","code":"rba_options() #>   rbioapi_option current_value            allowed_value #> 1    diagnostics         FALSE     Logical (TRUE/FALSE) #> 2       dir_name       rbioapi                Character #> 3       progress         FALSE     Logical (TRUE/FALSE) #> 4      retry_max             1   Numeric (0 or greater) #> 5     retry_wait            10   Numeric (0 or greater) #> 6      save_file         FALSE     Logical (TRUE/FALSE) #> 7     skip_error          TRUE     Logical (TRUE/FALSE) #> 8        timeout           600 Numeric (0.1 or greater) #> 9        verbose          TRUE     Logical (TRUE/FALSE)"},{"path":"https://rbioapi.moosa-r.com/index.html","id":"change-the-option-globally","dir":"","previous_headings":"","what":"Change the option globally","title":"User-Friendly R Interface to Biologic Web Services' API","text":"Changing option globally means rest R session, rbioapi function respect changed option. , use rba_options(). argument function corresponds certain option; Thus running function desired new values, globally alter rbioapi option. example:","code":"rba_options(save_file = TRUE) ## From now on, the raw file of server's response will be saved to your working directory. rba_options(verbose = FALSE) ## From now on, the package will be quiet."},{"path":"https://rbioapi.moosa-r.com/index.html","id":"change-the-option-only-within-a-function-call","dir":"","previous_headings":"","what":"Change the option only within a function call","title":"User-Friendly R Interface to Biologic Web Services' API","text":"can pass additional arguments rbioapi function using “ellipsis” (familiar … dot dot dot!). Meaning can call function additional arguments ‘option = value’ pair. way, changes options confined within particular function call. example:","code":"## Save the server's raw response file: x <- rba_reactome_species(only_main = TRUE, save_file = \"reactome_species.json\") ## Also, in the case of connection failure, retry up to 10 times: x <- rba_reactome_species(only_main = TRUE,                          save_file = \"reactome_species.json\", retry_max = 10) ## Run these codes in your own R session to see the difference. ## show internal diagnostics boring details x <- rba_uniprot_proteins_crossref(db_id = \"CD40\", db_name = \"HGNC\", diagnostics = TRUE) ## The next function you call, will still use the default rbioapi options x <- rba_uniprot_proteins_crossref(db_id = \"CD40\", db_name = \"HGNC\")"},{"path":"https://rbioapi.moosa-r.com/index.html","id":"connection-test","dir":"","previous_headings":"","what":"Connection test","title":"User-Friendly R Interface to Biologic Web Services' API","text":"second exception functions’ naming schema rba_connection_test(). Run simple function check connection supported services/databases. encounter errors using rbioapi, kindly run function make sure internet connection servers fine.","code":"rba_connection_test(print_output = TRUE) #> Checking Your connection to the Databases currently supported by rbioapi: #> --->>> Internet : #> +++ Connected to the Internet. #> --->>> Enrichr : #> +++ The server is responding. #> --->>> Ensembl : #> +++ The server is responding. #> --->>> JASPAR : #> +++ The server is responding. #> --->>> miEAA : #> +++ The server is responding. #> --->>> PANTHER : #> +++ The server is responding. #> --->>> Reactome Content Service : #> +++ The server is responding. #> --->>> Reactome Analysis Service : #> +++ The server is responding. #> --->>> STRING : #> +++ The server is responding. #> --->>> UniProt : #> +++ The server is responding."},{"path":"https://rbioapi.moosa-r.com/index.html","id":"iterating-over-paginated-results","dir":"","previous_headings":"","what":"Iterating over paginated results","title":"User-Friendly R Interface to Biologic Web Services' API","text":"API resources return paginated responses. particularly common API resources return potentially large responses. rbioapi, cases, arguments “page_number” (default value 1) -API resource allows- “page_size”. save time, may use rba_pages(). function iterate pages specified. Take rba_uniprot_taxonomy_name example. function allows search taxonomic nodes UniProt. response can potentially huge size, UniProt returns paginated response. example, search nodes contain “adenovirus”, large number hits: can see, server returned first page response, retrieve pages, make separate calls change “page_number” argument within call, simply use rba_pages() demonstrated : can see, done : Wrap function call qoute() enter input rba_pages(). Replace argument want iterate , string format: “pages:start:end”. example, supplied page_number = “pages:1:3” get responses pages 1 3.","code":"adeno <- rba_uniprot_taxonomy_name(name = \"adenovirus\",                                    search_type = \"contain\",                                    page_number = 1) str(adeno, max.level = 2) #> List of 2 #>  $ taxonomies:'data.frame':  200 obs. of  8 variables: #>   ..$ taxonomyId    : int [1:200] 10509 10510 10511 10512 10513 10514 10515 10519 10521 10522 ... #>   ..$ mnemonic      : chr [1:200] \"9ADEN\" \"ADEB3\" \"ADEB7\" \"9ADEN\" ... #>   ..$ scientificName: chr [1:200] \"Mastadenovirus\" \"Bovine adenovirus B serotype 3\" \"Bovine adenovirus 7\" \"Canine adenovirus 1\" ... #>   ..$ rank          : chr [1:200] \"genus\" \"no rank\" \"no rank\" \"no rank\" ... #>   ..$ superregnum   : chr [1:200] \"V\" \"V\" \"V\" \"V\" ... #>   ..$ hidden        : logi [1:200] FALSE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ commonName    : chr [1:200] NA \"BAdV-3\" \"BAdV-7\" NA ... #>   ..$ synonym       : chr [1:200] NA \"Mastadenovirus bos3\" NA NA ... #>  $ pageInfo  :List of 3 #>   ..$ resultsPerPage: int 200 #>   ..$ currentPage   : int 1 #>   ..$ totalRecords  : int 951 adeno_pages = rba_pages(quote(rba_uniprot_taxonomy_name(name = \"adenovirus\",                                    search_type = \"contain\",                                    page_number = \"pages:1:3\"))) ## You can inspect the structure of the response: str(adeno_pages, max.level = 2) #> List of 3 #>  $ page_1:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3 #>  $ page_2:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3 #>  $ page_3:List of 2 #>   ..$ taxonomies:'data.frame':   200 obs. of  8 variables: #>   ..$ pageInfo  :List of 3"},{"path":"https://rbioapi.moosa-r.com/index.html","id":"how-and-what-to-cite","dir":"","previous_headings":"","what":"How and what to cite?","title":"User-Friendly R Interface to Biologic Web Services' API","text":"rbioapi interface databases services. Thus, used rbioapi published research, kindly addition citing rbioapi, make sure fully properly cite databases/services used. Suggested citations added functions’ manuals, “references” section; Nevertheless, user’s responsibility check proper citations properly cite database/services used. cite rbioapi: Moosa Rezwani, Ali Akbar Pourfathollah, Farshid Noorbakhsh, rbioapi: User-Friendly R Interface Biologic Web Services’ API, Bioinformatics, 2022;, btac172, https://doi.org/10.1093/bioinformatics/btac172 cite Enrichr. (See Enrichr website) cite JASPAR. (See JASPAR website) cite miEAA. (See miEAA website) cite PANTHER. (See PANTHER website) cite Reactome. (See Reactome website) cite STRING. (See STRING website) cite UniProt. (See UniProt website)","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"User-Friendly R Interface to Biologic Web Services' API","text":"using rbioapi, remember querying data web services; please considerate. Never flood server requests, need download unreasonably large volumes data, directly downloading databases supplied services may better alternative. see rate-limited server (HTTP 429 Many Requests response status code), know sending requests server interprets normal behavior, please seek methods use Sys.sleep() requests.","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"what-next","dir":"","previous_headings":"","what":"What next?","title":"User-Friendly R Interface to Biologic Web Services' API","text":"supported service dedicated vignette article. Make sure check . Enrichr JASPAR miEAA PANTHER Reactome STRING UniProt also adding vignette articles focusing tasks workflows: rbioapi: -Representation (Enrichment) Analysis R","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"User-Friendly R Interface to Biologic Web Services' API","text":"article rbioapi documentation site Functions references rbioapi documentation site","code":""},{"path":"https://rbioapi.moosa-r.com/index.html","id":"session-info","dir":"","previous_headings":"","what":"Session info","title":"User-Friendly R Interface to Biologic Web Services' API","text":"","code":"#> R version 4.1.2 (2021-11-01) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19044) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #> system code page: 1256 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rbioapi_0.7.6 #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.29   R6_2.5.1        jsonlite_1.8.0  magrittr_2.0.2  #>  [5] evaluate_0.15   httr_1.4.2      rlang_1.0.2     stringi_1.7.6   #>  [9] cli_3.2.0       curl_4.3.2      rmarkdown_2.13  tools_4.1.2     #> [13] stringr_1.4.0   xfun_0.30       yaml_2.3.5      fastmap_1.1.0   #> [17] compiler_4.1.2  htmltools_0.5.2 knitr_1.37"},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the Supported Services Are Responding — rba_connection_test","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"Run function test internet connectivity device   current status supported Services.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"","code":"rba_connection_test(print_output = TRUE, diagnostics = FALSE)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"print_output (Logical) (default = TRUE) Send tests' output console? diagnostics (Logical) (default = FALSE) Show diagnostics detailed messages internal information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"Connection test supported servers displayed   console results invisibly returned list.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"function attempts send simple query supported services.   service successfully responded, informed success   message; , content error reported .    Please run function encounter errors using   rbioapi. Also, need contact support, kindly call function   'diagnostic = TRUE' include output messages support   request.","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_connection_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if the Supported Services Are Responding — rba_connection_test","text":"","code":"# \\donttest{ rba_connection_test() # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":null,"dir":"Reference","previous_headings":"","what":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"function easy--use wrapper multiple function calls   necessary enrich given gene-list using Enrichr. see details section   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"","code":"rba_enrichr(   gene_list,   description = NULL,   gene_set_library = \"all\",   regex_library_name = TRUE,   organism = \"human\",   progress_bar = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"gene_list vector Entrez gene symbols. description (optional) name description associated uploaded gene-set Enrichr servers. gene_set_library One : \"\" select available Enrichr gene-set libraries. gene-set library name existed results retrieved via rba_enrichr_libs regex_library_name = TRUE, partially-matching name regex pattern correspond one Enrichr library names. regex_library_name logical: TRUE (default) supplied gene_set_library regarded regex partially matching name. FALSE, gene_set_library considered exact match. organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). progress_bar logical: case selecting multiple Enrichr libraries, progress bar displayed? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"list containing data frames enrichment results   supplied gene-list selected Enrichr libraries.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"function call rba_enrichr_*** functions following   order: (neccessary) Call rba_enrichr_libs obtain list     available libraries Enrichr. Call rba_enrichr_add_list upload gene-list     obtain 'user list ID'. Call rba_enrichr_enrich enrich gene-list     one multiple Enrichr libraries","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"\"GET https://maayanlab.cloud/Enrichr/datasetStatistics\"   \"POST https://maayanlab.cloud/Enrichr/addList\"   \"GET https://maayanlab.cloud/Enrichr/enrich\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A One-step Wrapper for Gene-list Enrichment Using Enrichr — rba_enrichr","text":"","code":"# \\donttest{ rba_enrichr(gene_list = c(\"TP53\", \"TNF\", \"EGFR\")) # } # \\donttest{ rba_enrichr(gene_list = c(\"TP53\", \"TNF\", \"EGFR\"),     gene_set_library = \"GO_Molecular_Function_2017\",     regex_library_name = FALSE) # } # \\donttest{ rba_enrichr(gene_list = c(\"TP53\", \"TNF\", \"EGFR\"),     gene_set_library = \"go\",     regex_library_name = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"Prior perform enrichment, Enrichr requires upload gene-list   retrieve 'user list ID'.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"","code":"rba_enrichr_add_list(gene_list, description = NULL, organism = \"human\", ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"gene_list vector Entrez gene symbols. description (optional) name description associated uploaded gene-set Enrichr servers. organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"list two unique IDs uploaded gene sets.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"Note using rba_enrichr convenient way    automatically perform required function calls enrich    input gene-set.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"\"POST https://maayanlab.cloud/Enrichr/addList\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_add_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload Your Gene-List to Enrichr — rba_enrichr_add_list","text":"","code":"# \\donttest{ rba_enrichr_add_list(gene_list = c(\"TP53\", \"TNF\", \"EGFR\"),      description = \"tumoral genes\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Enrichr Enrichment Results — rba_enrichr_enrich","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"function retrieve enrichment results   supplied gene-list id one multiple Enrichr libraries.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"","code":"rba_enrichr_enrich(   user_list_id,   gene_set_library = \"all\",   regex_library_name = TRUE,   organism = \"human\",   progress_bar = TRUE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"user_list_id ID returned uploading gene list using rba_enrichr_add_list gene_set_library One : \"\" select available Enrichr gene-set libraries. gene-set library name existed results retrieved via rba_enrichr_libs regex_library_name = TRUE, partially-matching name regex pattern correspond one Enrichr library names. regex_library_name logical: TRUE (default) supplied gene_set_library regarded regex partially matching name. FALSE, gene_set_library considered exact match. organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). progress_bar logical: case selecting multiple Enrichr libraries, progress bar displayed? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"list containing data frames enrichment results   supplied gene-list selected Enrichr libraries.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"Note using rba_enrichr convenient way   automatically perform required function calls enrich   input gene-set.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"\"GET https://maayanlab.cloud/Enrichr/enrich\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_enrich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Enrichr Enrichment Results — rba_enrichr_enrich","text":"","code":"if (FALSE) { rba_enrichr_enrich(user_list_id = \"11111\") } if (FALSE) { rba_enrichr_enrich(user_list_id = \"11111\",     gene_set_library = \"GO_Molecular_Function_2017\",     regex_library_name = FALSE) } if (FALSE) { rba_enrichr_enrich(user_list_id = \"11111\",     gene_set_library = \"go\",     regex_library_name = TRUE) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"function search gene retrieve list Enrichr   Terms contains gene.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"","code":"rba_enrichr_gene_map(gene, catagorize = FALSE, organism = \"human\", ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"gene character: Entrez gene symbol. catagorize logical: category informations included? organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"list containing search results supplied gene.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"\"GET https://maayanlab.cloud/Enrichr/genemap\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_gene_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Enrichr Terms That Contain a Given Gene — rba_enrichr_gene_map","text":"","code":"# \\donttest{ rba_enrichr_gene_map(gene = \"p53\") # } # \\donttest{ rba_enrichr_gene_map(gene = \"p53\", catagorize = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"function retrieve list available libraries Enrichr   statistics. default, save names global option   (\"rba_enrichr_libs\") available Enrichr functions   internally require names Enrichr libraries.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"","code":"rba_enrichr_libs(store_in_options = FALSE, organism = \"human\", ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"store_in_options logical: (default = TRUE) list available Enrichr libraries saved global option? organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"data frame names available library Enrichr   statistics.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"call function per R session argument   'store_in_options = TRUE' using rba_enrichr_enrich   rba_enrichr.    Nevertheless, rbioapi background   first time call function requires .   Note using rba_enrichr convenient way    automatically perform required function calls enrich    input gene-set.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"\"GET https://maayanlab.cloud/Enrichr/datasetStatistics\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_libs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a List of available libraries from Enrichr — rba_enrichr_libs","text":"","code":"# \\donttest{ rba_enrichr_libs() # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":null,"dir":"Reference","previous_headings":"","what":"View an Uploaded Gene List — rba_enrichr_view_list","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"Retrieve list uploaded genes 'user list ID'.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"","code":"rba_enrichr_view_list(user_list_id, organism = \"human\", ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"user_list_id user_list_id returned uploading gene list using rba_enrichr_add_list organism (default = \"human\") model organism version Enrichr use? Available options : \"human\", (H. sapiens & M. musculus), \"fly\" (D. melanogaster), \"yeast\" (S. cerevisiae), \"worm\" (C. elegans) \"fish\" (D. rerio). ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"list containing genes description available   supplied user_list_id","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"\"GET https://maayanlab.cloud/Enrichr/view\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"Chen, E.Y., Tan, C.M., Kou, Y. et al. Enrichr: interactive   collaborative HTML5 gene list enrichment analysis tool. Bioinformatics   14, 128 (2013). https://doi.org/10.1186/1471-2105-14-128 Maxim V. Kuleshov, Matthew R. Jones, Andrew D. Rouillard, Nicolas   F. Fernandez, Qiaonan Duan, Zichen Wang, Simon Koplev, Sherry L. Jenkins,   Kathleen M. Jagodnik, Alexander Lachmann, Michael G. McDermott,   Caroline D. Monteiro, Gregory W. Gundersen, Avi Ma’ayan, Enrichr:   comprehensive gene set enrichment analysis web server 2016 update,   Nucleic Acids Research, Volume 44, Issue W1, 8 July 2016, Pages W90–W97,   https://doi.org/10.1093/nar/gkw377 Xie, Z., Bailey, ., Kuleshov, M. V., Clarke, D. J. B.,   Evangelista, J. E., Jenkins, S. L., Lachmann, ., Wojciechowicz, M. L.,   Kropiwnicki, E., Jagodnik, K. M., Jeon, M., & Ma’ayan, . (2021). Gene   set knowledge discovery Enrichr. Current Protocols, 1, e90.   doi: https://doi.org/10.1002/cpz1.90 Enrichr API   Documentation Citations note   Enrichr website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_enrichr_view_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View an Uploaded Gene List — rba_enrichr_view_list","text":"","code":"if (FALSE) { rba_enrichr_view_list(user_list_id = 11111) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":null,"dir":"Reference","previous_headings":"","what":"List collections available in JASPAR — rba_jaspar_collections","title":"List collections available in JASPAR — rba_jaspar_collections","text":"JASPAR organizes matrix profiles collections.   Using function, can retrieve list available collections   JASPAR release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List collections available in JASPAR — rba_jaspar_collections","text":"","code":"rba_jaspar_collections(release = 2022, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List collections available in JASPAR — rba_jaspar_collections","text":"release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List collections available in JASPAR — rba_jaspar_collections","text":"data frame collections' names URLs.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List collections available in JASPAR — rba_jaspar_collections","text":"\"GET \"https://jaspar.genereg.net/api/v1/collections/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List collections available in JASPAR — rba_jaspar_collections","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List collections available in JASPAR — rba_jaspar_collections","text":"","code":"# \\donttest{ rba_jaspar_collections(release = 2022) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"Using function can list matrix profiles available collection JASPAR release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"","code":"rba_jaspar_collections_matrices(   collection,   release = 2022,   only_last_version = FALSE,   search = NULL,   order = NULL,   page_size = 1000,   page = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"collection JASPAR Collection's name. See JASPAR Collections information. accepted values : \"CORE\", \"CNE\", \"PHYLOFACTS\", \"SPLICE\", \"POLII\", \"FAM\", \"PBM\", \"PBM_HOMEO\", \"PBM_HLH\", \"UNVALIDATED\". release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. only_last_version Logical: (default = FALSE) TRUE, latest version matrix profile returned. search Character: search term. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can alsoa use prefix \"-\" field name indicate reverse ordering. page_size Numeric: (default = 1000) resource returns paginated results. maximum numbers results want retrieve per page? Accepted values 1 1000. page Numeric: page results retrieve? accepted values depend page size number results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"list contains data frame information matrix   profiles available collection.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"results paginated. can control page's size number   function's arguments. Also, can use rba_pages   automatically iterate multiple pages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"\"GET \"https://jaspar.genereg.net/api/v1/collections/collection/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_collections_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List matrices available in a JASPAR collection — rba_jaspar_collections_matrices","text":"","code":"# \\donttest{ rba_jaspar_collections_matrices(collection = \"CORE\",   release = 2022,   page_size = 100,   page = 2) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"Using function can retrieve Position Frequency Matrices (PFM)  associated matrix profile Identifier along details  annotations. base ID (.e. without version suffix) supplied,  latest version returned.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"","code":"rba_jaspar_matrix(matrix_id, file_format = NULL, save_to = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"matrix_id Character: matrix profile Identifier. \"base_id.version\" naming schema. file_format Character: Instead returning R object, can directly download profile matrix file format. Supported formats : \"yaml\", \"jaspar\", \"transfac\", \"meme\" \"pfm\" save_to NULL Character: NULL: (file_format supplied) Save file   automatically-generated path. Character string: valid file directory path save file . ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"list contains PFM along details   annotations. file_format supplied, un-parsed character string   file's content.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"\"GET \"https://jaspar.genereg.net/api/v1/matrix/matrix_id/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Position Frequency Matrices (PFM) with annotations — rba_jaspar_matrix","text":"","code":"# \\donttest{ rba_jaspar_matrix(\"MA0600.2\") # } if (FALSE) { rba_jaspar_matrix(matrix_id = \"MA0600.2\",                   file_format = \"meme\",                   save_to = \"my_matrix.meme\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"can use function list JASPAR matrix   profiles match search query, run function without   arguments return list every matrix profile available   latest release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"","code":"rba_jaspar_matrix_search(   term = NULL,   tf_name = NULL,   tf_class = NULL,   tf_family = NULL,   tax_group = NULL,   tax_id = NULL,   data_type = NULL,   collection = NULL,   release = 2022,   only_last_version = FALSE,   order = NULL,   page_size = 1000,   page = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"term Character: search term. tf_name Character: Transcription factor names (Case-sensitive). tf_class Character: Transcription factor class tf_family Character: Transcription factor family tax_group Character: Taxonomic group. Use rba_jaspar_taxons get list supported Taxonomic groups. tax_id Numeric: NCBI taxonomic Identifier species. Use rba_jaspar_species get list supported Species. data_type Character: Type data (.e Methodology used matrix construction). example: \"ChIP-seq\", \"PBM\" collection Character: JASPAR matrix profile collection name. USE rba_jaspar_collections get list collection names. release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. only_last_version Logical: (default = FALSE) TRUE, latest version matrix profile returned. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. page_size Numeric: (default = 1000) resource returns paginated results. maximum numbers results want retrieve per page? Accepted values 1 1000. page Numeric: page results retrieve? accepted values depend page size number results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"list contains data frame matrix profiles' information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    results paginated. can control page's size number   function's arguments. Also, can use rba_pages   automatically iterate multiple pages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"\"GET \"https://jaspar.genereg.net/api/v1/api/v1/matrix/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search matrix profiles available in JASPAR — rba_jaspar_matrix_search","text":"","code":"# \\donttest{ rba_jaspar_matrix_search(term = \"FOX\") rba_jaspar_matrix_search(tf_name = \"FOXP3\") rba_jaspar_matrix_search(tf_name = \"FOXP3\", only_last_version = TRUE) rba_jaspar_matrix_search(tf_class = \"Zipper-Type\") rba_jaspar_matrix_search(tax_group = \"insects\") rba_jaspar_matrix_search(page_size = 100) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"Since JASPAR release 2010, matrix profiles   versioned; , matrix profile Identifier \"base_id.version\"   naming schema. Using function can retrieve list matrix   profiles associated base (stable) ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"","code":"rba_jaspar_matrix_versions(base_id, order = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"base_id Character: base (stable) Identifier. matrix profile identifier \"base_id.version\" naming schema order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"data frame matrix profiles' versions information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"\"GET \"https://jaspar.genereg.net/api/v1/matrix/base_id/versions/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_matrix_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List matrix profile versions associated with a base ID — rba_jaspar_matrix_versions","text":"","code":"# \\donttest{ rba_jaspar_matrix_versions(\"MA0600\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about JASPAR database releases — rba_jaspar_releases","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"release number supplied, function return details   release. Otherwise, function called without \"release\"   argument, list JASPAR database releases returned.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"","code":"rba_jaspar_releases(release_number = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"release_number Numeric: JASPAR database release number information's retrieve? left NULL (default), list JASPAR database releases returned. Available options 1 8. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"list contains JASPAR database releases' information   details particular release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"\"GET \"https://jaspar.genereg.net/api/v1/releases/\"  \"GET \"https://jaspar.genereg.net/api/v1/releases/release_number/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about JASPAR database releases — rba_jaspar_releases","text":"","code":"# \\donttest{ rba_jaspar_releases() rba_jaspar_releases(7) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Get binding sites of a matrix profile — rba_jaspar_sites","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"Use function retrieve list transcription factor binding sites   associated matrix profile.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"","code":"rba_jaspar_sites(matrix_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"matrix_id Character: matrix profile Identifier. \"base_id.version\" naming schema. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"list contains data frame binding sites information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"\"GET \"https://jaspar.genereg.net/api/v1/sites/matrix_id/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get binding sites of a matrix profile — rba_jaspar_sites","text":"","code":"# \\donttest{ rba_jaspar_sites(\"MA0600.1\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":null,"dir":"Reference","previous_headings":"","what":"List available species in JASPAR — rba_jaspar_species","title":"List available species in JASPAR — rba_jaspar_species","text":"JASPAR organizes matrix profiles multiple species   six taxonomic groups. Use function retrieve list   available species JASPAR database release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available species in JASPAR — rba_jaspar_species","text":"","code":"rba_jaspar_species(release = 2022, search = NULL, order = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available species in JASPAR — rba_jaspar_species","text":"release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. search Character: search term. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available species in JASPAR — rba_jaspar_species","text":"data frame information available species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List available species in JASPAR — rba_jaspar_species","text":"\"GET \"https://jaspar.genereg.net/api/v1/species/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List available species in JASPAR — rba_jaspar_species","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available species in JASPAR — rba_jaspar_species","text":"","code":"# \\donttest{ rba_jaspar_species(release = 2022) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"JASPAR curates matrix profiles multiple species   six taxonomic groups. Using function can list   matrix profiles available JASPAR  release species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"","code":"rba_jaspar_species_matrices(   tax_id,   release = 2022,   only_last_version = FALSE,   search = NULL,   order = NULL,   page_size = 1000,   page = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"tax_id Numeric: NCBI taxonomic Identifier species. Use rba_jaspar_species get list supported Species. release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. only_last_version Logical: (default = FALSE) TRUE, latest version matrix profile returned. search Character: search term. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. page_size Numeric: (default = 1000) resource returns paginated results. maximum numbers results want retrieve per page? Accepted values 1 1000. page Numeric: page results retrieve? accepted values depend page size number results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"list contains data frame information matrix   profiles available species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"results paginated. can control page's size number   function's arguments. Also, can use rba_pages   automatically iterate multiple pages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"\"GET \"https://jaspar.genereg.net/api/v1/species/tax_id/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_species_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List matrices available in JASPAR of a species — rba_jaspar_species_matrices","text":"","code":"# \\donttest{ rba_jaspar_species_matrices(tax_id = 9606, page_size = 100) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":null,"dir":"Reference","previous_headings":"","what":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"JASPAR organizes matrix profiles multiple species   six taxonomic groups. Use function retrieve list   available taxonomic groups JASPAR database release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"","code":"rba_jaspar_taxons(release = 2022, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"data frame information available species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"\"GET \"https://jaspar.genereg.net/api/v1/taxon/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available taxonomic groups in JASPAR — rba_jaspar_taxons","text":"","code":"# \\donttest{ rba_jaspar_taxons(release = 2022) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"JASPAR organizes matrix profiles multiple species   six taxonomic groups. Using function can list   matrix profiles available JASPAR release   taxonomic group.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"","code":"rba_jaspar_taxons_matrices(   tax_group,   release = 2022,   only_last_version = FALSE,   search = NULL,   order = NULL,   page_size = 1000,   page = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"tax_group Character: Taxonomic group. Use rba_jaspar_taxons get list supported Taxonomic groups. release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. only_last_version Logical: (default = FALSE) TRUE, latest version matrix profile returned. search Character: search term. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. page_size Numeric: (default = 1000) resource returns paginated results. maximum numbers results want retrieve per page? Accepted values 1 1000. page Numeric: page results retrieve? accepted values depend page size number results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"list contains data frame information matrix   profiles available taxonomic group.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"results paginated. can control page's size number   function's arguments. Also, can use rba_pages   automatically iterate multiple pages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"\"GET \"https://jaspar.genereg.net/api/v1/taxon/tax_group/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_taxons_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List matrices available in JASPAR of a taxonomic group — rba_jaspar_taxons_matrices","text":"","code":"# \\donttest{ rba_jaspar_taxons_matrices(tax_group = \"plants\", page_size = 100) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"Using function can retrieve details annotations   Transcription Factor flexible models (TFFMs) associated TFFM   ID. base ID (.e. without version suffix) supplied, latest   version returned.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"","code":"rba_jaspar_tffm(tffm_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"tffm_id Character: TF flexible model (TFFM) Identifier. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"list contains TFFM's information annotations.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"\"GET \"https://jaspar.genereg.net/api/v1/fttm/tffm_id/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a TF flexible models (TFFMs) information — rba_jaspar_tffm","text":"","code":"# \\donttest{ rba_jaspar_tffm(\"TFFM0056.3\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"can use function list JASPAR TF flexible models (TFFMs)   match search query, run function without   arguments return list every matrix profile available   latest release.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"","code":"rba_jaspar_tffm_search(   term = NULL,   release = 2022,   tax_group = NULL,   search = NULL,   order = NULL,   page_size = 1000,   page = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"term Character: search term. release Numeric: (default = 2022) JASPAR database release use? Available options : 2014, 2016, 2018, 2020, 2022. tax_group Character: Taxonomic group. Use rba_jaspar_taxons get list supported Taxonomic groups. search Character: search term. order Character: character string vector character strings field names used order results.  Providing multiple field names supported. can also use prefix \"-\" field name indicate reverse ordering. page_size Numeric: (default = 1000) resource returns paginated results. maximum numbers results want retrieve per page? Accepted values 1 1000. page Numeric: page results retrieve? accepted values depend page size number results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"list contains data frame information query hits'   TFFMs.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    results paginated. can control page's size number   function's arguments. Also, can use rba_pages   automatically iterate multiple pages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"\"GET \"https://jaspar.genereg.net/api/v1/api/v1/tffm/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"Jaime Castro-Mondragon, Rafael Riudavets-Puig, Ieva   Rauluseviciute, Roza Berhanu Lemma, Laura Turchi, Romain Blanc-Mathieu,   Jeremy Lucas, Paul Boddie, Aziz Khan, Nicolás Manosalva Pérez, Oriol   Fornes, Tiffany Y Leung, Alejandro Aguirre, Fayrouz Hammal, Daniel   Schmelter, Damir Baranasic, Benoit Ballester, Albin Sandelin, Boris   Lenhard, Klaas Vandepoele, Wyeth W Wasserman, François Parcy,   Anthony Mathelier, JASPAR 2022: 9th release open-access   database transcription factor binding profiles, Nucleic Acids   Research, Volume 50, Issue D1, 7 January 2022, Pages D165–D173,   https://doi.org/10.1093/nar/gkab1113 JASPAR API Documentation Citations note   JASPAR website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_jaspar_tffm_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search TF flexible models (TFFMs) available in JASPAR — rba_jaspar_tffm_search","text":"","code":"# \\donttest{ rba_jaspar_tffm_search(term = \"FOX\") rba_jaspar_tffm_search(tax_group = \"insects\") rba_jaspar_tffm_search(page_size = 100) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"Combination species miRNA type, pre-defined   categories groups supported. Use function retrieve list   supported categories given combination Species miRNA type.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"","code":"rba_mieaa_cats(mirna_type, species, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"mirna_type Type miRNA accession. either \"mature\" \"precursor\". species Fully partially matching Scientific name, abbreviation NCBI taxon ID one following species: \"Homo sapiens\", \"hsa\" 9606 \"Mus musculus\", \"mmu\" 10090 \"Rattus norvegicus\", \"rno\" 10116 \"Arabidopsis thaliana\", \"ath\" 3702 \"Bos taurus\", \"bta\" 9913 \"Caenorhabditis elegans\", \"cel\" 6239 \"Drosophila melanogaster\", \"dme\" 7227 \"Danio rerio\", \"dre\" 7955 \"Gallus gallus\", \"gga\" 9031 \"Sus scrofa\", \"ssc\"  9823 ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"named character vector supported categories   supplied input combination.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"\"GET  \"https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/enrichment_categories/species/mirna_type/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Supported Enrichment Categories for a Species and miRNA Type — rba_mieaa_cats","text":"","code":"# \\donttest{ rba_mieaa_cats(\"mature\", \"Homo sapiens\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"miRBase miRNA accession refer either mature precursor miRNAs.   (see: miRNA naming   conventions). Use function mature miRNA accession   corresponding miRNA accessions vice versa.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"","code":"rba_mieaa_convert_type(   mirna,   input_type,   only_unique = FALSE,   simple_output = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"mirna vector miRNA accessions converted. input_type Type supplied miRNA accession. either \"mature\" \"precursor\". only_unique (logical) miRBase precursor mature miRNA accessions uniquely mapped. (.e. may get one results given accession). set TRUE retrieve unique mappings. (default = FALSE) simple_output (logical) FALSE (default), result two-columned data frame input output accessions. Otherwise, TRUE, output miRNA accessions returned. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"Depending arguments, data frame character vectors   containing miRNA accessions output version.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"\"POST https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/mirna_precursor_converter/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Between Mature and precursor miRNA Accession — rba_mieaa_convert_type","text":"","code":"# \\donttest{ Sys.sleep(1) # to prevent 429 error during R CMD check rba_mieaa_convert_type(mirna = c(\"hsa-miR-20b-5p\", \"hsa-miR-144-5p\"),     input_type = \"mature\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"miEAA works miRBASE v22 accession. Using function can convert   set mature precursor miRNA accession two given miRBase   versions.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"","code":"rba_mieaa_convert_version(   mirna,   mirna_type,   input_version,   output_version,   simple_output = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"mirna vector miRNA accessions converted. mirna_type Type supplied miRNA accession. either \"mature\" \"precursor\". input_version (numeric) miRBase version supplied miRNA accessions. output_version (numeric) version miRNA accessions converted? simple_output (logical) FALSE (default), result two-columned data frame input output accessions. Otherwise, TRUE, output miRNA accessions returned. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"Depending arguments, data frame character vectors   containing miRNA accessions output version.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"\"POST https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/mirbase_converter/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_convert_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert miRNA accession Between Different miRBase Versions — rba_mieaa_convert_version","text":"","code":"# \\donttest{ Sys.sleep(1) # to prevent 429 error during R CMD check rba_mieaa_convert_version(mirna = c(\"hsa-miR-20b-5p\", \"hsa-miR-144-5p\"),     mirna_type = \"mature\", input_version = 22, output_version =  16) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":null,"dir":"Reference","previous_headings":"","what":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"function wrapper multiple function calls necessary   enrich given miRNA list using miEAA. see details section   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"","code":"rba_mieaa_enrich(   test_set,   mirna_type,   test_type,   species,   categories = NULL,   p_adj_method = \"fdr\",   independent_p_adj = TRUE,   sig_level = 0.05,   min_hits = 2,   ref_set = NULL,   sort_by = \"p_adjusted\",   sort_asc = TRUE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"test_set character vector mature precursor miRBase miRNA accessions. Note miRBase v22 miRNA accession accepted. can use rba_mieaa_convert_version convert accessions miRBase v22. list entirely consisted either mature precursor miRNA accession. mixture accepted. mirna_type Type supplied miRNA accession. either \"mature\" \"precursor\". test_type analysis perform. can either \"ORA\" 'Representation Analysis' \"GSEA\" miRNA (Gene) 'Set Enrichment Analysis'. Note GSEA, list sorted beforehand based criterion. species Fully partially matching Scientific name, abbreviation NCBI taxon ID one following species: \"Homo sapiens\", \"hsa\" 9606 \"Mus musculus\", \"mmu\" 10090 \"Rattus norvegicus\", \"rno\" 10116 \"Arabidopsis thaliana\", \"ath\" 3702 \"Bos taurus\", \"bta\" 9913 \"Caenorhabditis elegans\", \"cel\" 6239 \"Drosophila melanogaster\", \"dme\" 7227 \"Danio rerio\", \"dre\" 7955 \"Gallus gallus\", \"gga\" 9031 \"Sus scrofa\", \"ssc\"  9823 categories one multiple Category names used miRNA set enrichment analysis. Note Available categories varies based chosen specie  supplied miRNA type mature precursor. Use  rba_mieaa_cats retrieve list available category  names given specie miRNA type. supply NULL, analysis performed  available categories. p_adj_method P-value adjustment method used. one : \"none\", \"fdr\" (default), \"bonferroni\", \"\", \"hochberg\", \"holm\" \"hommel\" independent_p_adj (logical) scope level p-value adjustment; TRUE (default), categories considered independent p-value adjusted separately category. FALSE, p-value adjusted collectively categories. sig_level (numeric) significance threshold adjusted P-value. values equal greater threshold dropped results. min_hits (numeric) many miRNA sub-category supplied test-list included results? (default 2) ref_set (Optional) applicable test_type \"ORA\". character vector used reference (background universe) set p-value calculations. sort_by column name result's table based . one : \"category\", \"subcategory\", \"enrichment\", \"p_value\", \"p_adjusted\" (default), \"q_value\" \"observed\" . sort_asc (logical) TRUE, results sorted ascending order. FALSE, results sorted descending order. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"data frame enrichment analysis results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"function call rba_mieaa_*** functions following   order: Call rba_mieaa_enrich_submit Submit enrichment     analysis request miEAA servers, using supplied miRNA lists     arguments. job successfully submitted, call     rba_mieaa_enrich_status every 5 seconds, check     status running server-side job whether analysis job     finished results available. Call rba_mieaa_enrich_results retrieve results     enrichment analysis. See function's manual details.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"\"GET https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A One-step Wrapper for miRNA Enrichment Using miEAA — rba_mieaa_enrich","text":"","code":"if (FALSE) { rba_mieaa_enrich(test_set = c(\"hsa-miR-20b-5p\", \"hsa-miR-144-5p\"),      mirna_type = \"mature\",      test_type = \"GSEA\",      species = 9606,      categories = NULL) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"submitted enrichment analysis request finished (check   using rba_mieaa_enrich_status), can retrieve results   using function.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"","code":"rba_mieaa_enrich_results(job_id, sort_by = \"p_adjusted\", sort_asc = TRUE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"job_id job-id (character string) submitted enrichment analysis. sort_by column name result's table based . one : \"category\", \"subcategory\", \"enrichment\", \"p_value\", \"p_adjusted\" (default), \"q_value\" \"observed\" . sort_asc (logical) TRUE, results sorted ascending order. FALSE, results sorted descending order. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"data frame enrichment analysis results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"Note using rba_mieaa_enrich convenient way   automatically perform required function calls enrich   input miRNA-set using miEAA.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"\"GET https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/results/job_id\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Results of a finished Enrichment Analysis from miEAA — rba_mieaa_enrich_results","text":"","code":"if (FALSE) { rba_mieaa_enrich_results(\"f52d1aef-6d3d-4d51-9020-82e68fe99012\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"submitted enrichment analysis (using    rba_mieaa_enrich_submit) retrieved job-id,   can use function check status job. Status value   equal 100 means requested analysis finished may   retrieve results using rba_mieaa_enrich_results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"","code":"rba_mieaa_enrich_status(job_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"job_id job-id (character string) submitted enrichment analysis. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"list containing status value analysis corresponds   supplied job-id.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"Note using rba_mieaa_enrich convenient way   automatically perform required function calls enrich   input miRNA-set using miEAA.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"\"GET https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/job_status/job_id\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Status of a Submitted Enrichment Analysis in miEAA — rba_mieaa_enrich_status","text":"","code":"if (FALSE) { Sys.sleep(1) # to prevent 429 error during R CMD check rba_mieaa_enrich_status(\"f52d1aef-6d3d-4d51-9020-82e68fe99012\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"Using function can submit request miEAA servers perform   -representation GSEA Analysis given set miRNA identifiers.   see \"arguments\" section information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"","code":"rba_mieaa_enrich_submit(   test_set,   mirna_type,   test_type,   species = \"hsa\",   categories = NULL,   p_adj_method = \"fdr\",   independent_p_adj = TRUE,   sig_level = 0.05,   min_hits = 2,   ref_set = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"test_set character vector mature precursor miRBase miRNA accessions. Note miRBase v22 miRNA accession accepted. can use rba_mieaa_convert_version convert accessions miRBase v22. list entirely consisted either mature precursor miRNA accession. mixture accepted. mirna_type Type supplied miRNA accession. either \"mature\" \"precursor\". test_type analysis perform. can either \"ORA\" 'Representation Analysis' \"GSEA\" miRNA (Gene) 'Set Enrichment Analysis'. Note GSEA, list sorted beforehand based criterion. species Fully partially matching Scientific name, abbreviation NCBI taxon ID one following species: \"Homo sapiens\", \"hsa\" 9606 \"Mus musculus\", \"mmu\" 10090 \"Rattus norvegicus\", \"rno\" 10116 \"Arabidopsis thaliana\", \"ath\" 3702 \"Bos taurus\", \"bta\" 9913 \"Caenorhabditis elegans\", \"cel\" 6239 \"Drosophila melanogaster\", \"dme\" 7227 \"Danio rerio\", \"dre\" 7955 \"Gallus gallus\", \"gga\" 9031 \"Sus scrofa\", \"ssc\"  9823 categories one multiple Category names used miRNA set enrichment analysis. Note Available categories varies based chosen specie  supplied miRNA type mature precursor. Use  rba_mieaa_cats retrieve list available category  names given specie miRNA type. supply NULL, analysis performed  available categories. p_adj_method P-value adjustment method used. one : \"none\", \"fdr\" (default), \"bonferroni\", \"\", \"hochberg\", \"holm\" \"hommel\" independent_p_adj (logical) scope level p-value adjustment; TRUE (default), categories considered independent p-value adjusted separately category. FALSE, p-value adjusted collectively categories. sig_level (numeric) significance threshold adjusted P-value. values equal greater threshold dropped results. min_hits (numeric) many miRNA sub-category supplied test-list included results? (default 2) ref_set (Optional) applicable test_type \"ORA\". character vector used reference (background universe) set p-value calculations. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"list contains submitted job's ID URL   manually check job status.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"Note using rba_mieaa_enrich convenient way   automatically perform required function calls enrich   input miRNA-set using miEAA.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"\"POST https://ccb-compute2.cs.uni-saarland.de/mieaa2/api/v1/enrichment_analysis/species/type/test/\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"Fabian Kern, Tobias Fehlmann, Jeffrey Solomon, Louisa Schwed,   Nadja Grammes, Christina Backes, Kendall Van Keuren-Jensen,   David Wesley Craig,Eckart Meese, Andreas Keller, miEAA 2.0:   integrating multi-species microRNA enrichment analysis workflow   management systems, Nucleic Acids Research, Volume 48, Issue W1,   02 July 2020, Pages W521–W528, https://doi.org/10.1093/nar/gkaa309 miEAA   browsable API tutorial Citations note   miEAA website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_mieaa_enrich_submit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit miEAA miRNA Enrichment Analysis Request — rba_mieaa_enrich_submit","text":"","code":"# \\donttest{ Sys.sleep(1) # to prevent 429 error during R CMD check rba_mieaa_enrich_submit(test_set = c(\"hsa-miR-20b-5p\", \"hsa-miR-144-5p\"),     mirna_type = \"mature\",     test_type = \"GSEA\",     species = 9606,     categories = NULL) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set rbioapi Global Options — rba_options","title":"Set rbioapi Global Options — rba_options","text":"safe way change rbioapi's global options behavior. see \"arguments\"   section available options.    Note limited changing options globally, can   include option names values '...' argument rbioapi   function alter option(s) function call;   e.g. example_function(x, diagnostics = TRUE, timeout = 300).    Alternatively, can call function arguments, .e.   rba_options(), retrieve data frame available rbioapi options   current values.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set rbioapi Global Options — rba_options","text":"","code":"rba_options(   diagnostics = NULL,   dir_name = NULL,   retry_max = NULL,   retry_wait = NULL,   progress = NULL,   save_file = NULL,   skip_error = NULL,   timeout = NULL,   verbose = NULL )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set rbioapi Global Options — rba_options","text":"diagnostics (Logical) (default = FALSE) Show diagnostics detailed messages internal information. dir_name (character) (default = \"rbioapi\") package needs generate file path save server's response, directory name created working directory save files. retry_max (Numeric) (default = 1) many times rbioapi retry case 5xx server responses, errors un-related server internet connectivity? retry_wait (Numeric) (default = 10) Time seconds wait next retry case internet connection server problems. progress (Logical) (default = FALSE) progress bar displayed? save_file (Logical character) (default = FALSE) Either: TRUE: case, raw server's response file automatically saved proper file path. use \"dir_name\" argument change file's parent directory. FALSE: (default) automatically save server's response file. Character: (changing option via \"...\" functions call) valid file path save server's response file function calling. skip_error (Logical) (default = FALSE R interactive mode, TRUE otherwise) TRUE, code execution  stopped case errors (anything HTTP status 200 server); Instead error message returned function's output. However, FALSE, case error, code execution halted error message issued. timeout (Numeric) (default = 30) maximum time seconds willing wait server response giving stopping function execution. verbose (Logical) (Default = TRUE) Generate short informative messages.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set rbioapi Global Options — rba_options","text":"called without argument, Data frame available options   information; Called argument, Return   NULL Alters option globally.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set rbioapi Global Options — rba_options","text":"function validates supplied changes, please   change rbioapi options using function avoid   directly editing .","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set rbioapi Global Options — rba_options","text":"","code":"rba_options() if (FALSE) { rba_options(verbose = FALSE) } if (FALSE) { rba_options(save_file = TRUE) } if (FALSE) { rba_options(diagnostics = TRUE, progress = TRUE) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Multiple Pages of a Paginated Resource — rba_pages","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"resources return paginated results, meaning make   separate calls page. Using function, can iterate   100 pages. Just supply rbioapi function change page   argument \"pages:start_page:end_page\", example \"pages:1:5\".","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"","code":"rba_pages(input_call, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"input_call quoted call. supply regular rbioapi function call, two differences: : Wrap quote() around . meaning: quote(rba_example()) : Set argument corresponds page number \"pages:start_page:end_page\", example \"pages:1:5\". See \"examples\" section learn . ... Experimental internal options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"named list element corresponds request's page.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"prevent flooding server, 1 second delay   calls, also user iterate 100 pages. function   also override skip_error option always set TRUE.   means case server response error (e.g. requesting pages   exist) error message returned instead   halting function's execution.","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Multiple Pages of a Paginated Resource — rba_pages","text":"","code":"# \\donttest{ rba_pages(input_call = quote(rba_uniprot_taxonomy(ids = 189831,     hierarchy = \"siblings\",     page_size = 50,     page_number = \"pages:1:5\"))) # } # \\donttest{ rba_pages(input_call = quote(rba_uniprot_taxonomy_name(name = \"adenovirus\",     field = \"scientific\",     search_type = \"contain\",     page_size = 200,     page_number = \"pages:1:5\",     verbose = FALSE))) # } # \\donttest{ rba_pages(input_call = quote(rba_panther_info(what = \"families\",     families_page = \"pages:9:11\"))) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":null,"dir":"Reference","previous_headings":"","what":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"Using function can use PANTHER services perform   -representation enrichment analysis. statistical test   compare input genes set defined gene lists determine   /-represented.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"","code":"rba_panther_enrich(   genes,   organism,   annot_dataset,   test_type = \"FISHER\",   correction = \"FDR\",   cutoff = NULL,   ref_genes = NULL,   ref_organism = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"genes Character vector genes identifiers maximum length 10000. Can : Ensemble gene ID, Ensemble protein ID, Ensemble transcript ID, Entrez gene ID, gene symbol, NCBI GI, HGNC ID, International protein index ID, NCBI UniGene ID, UniProt accession /UniProt ID. organism (numeric) NCBI taxon ID. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. annot_dataset PANTHER dataset ID test input . run rba_panther_infowith argument '= \"datasets\"' get list PANTHER's supported datasets. test_type statistical test type calculate p values. either \"FISHER\" (default) \"BINOMIAL\". correction p value correction method. either \"FDR\" (default), \"BONFERRONI\" \"NONE\". cutoff (Numeric) (Optional) threshold filter results. correction \"FDR\", threshold applied fdr column's values; otherwise, threshold applied p value column. ref_genes (Optional) set genes used test's background (reference/universe) gene set. value supplied, genes specified organism used. maximum length supported IDs 'genes' argument. ref_organism (Optional) 'ref_genes' used, can specify organisms correspond supplied IDs 'ref_genes' argument. see 'organism' argument supported values. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"list prov","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"\"POST http://www.pantherdb.org/services/oai/pantherdb/enrich/overrep\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_enrich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PANTHER Over-Representation Enrichment Analysis — rba_panther_enrich","text":"","code":"# \\donttest{ rba_panther_enrich(genes = c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\",         \"CDK1\", \"KIF23\", \"PLK1\", \"RAC2\", \"RACGAP1\"),     organism = 9606, annot_dataset = \"GO:0008150\",     cutoff = 0.01) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PANTHER Families and Sub-Families — rba_panther_family","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"Using function, can retrieve Orthologs, MSA Tree topology   information given PANTHER family.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"","code":"rba_panther_family(id, what, target_organisms = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"id Panther family id. retrieve? One : \"ortholog\": Orthologs ('LDO' least diverged 'O'   diverged). \"msa\": Multiple Sequence Alignment Information, \"tree\": Tree topology nodes attributes. target_organisms (numeric) NCBI taxon ID(s) filter results. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"trees list otherwise data frame requested   family's information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"\"GET http://www.pantherdb.org/services/oai/pantherdb/familyortholog\"   \"GET http://www.pantherdb.org/services/oai/pantherdb/familymsa\"   \"GET http://www.pantherdb.org/services/oai/pantherdb/treeinfo\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_family.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PANTHER Families and Sub-Families — rba_panther_family","text":"","code":"# \\donttest{ rba_panther_family(\"PTHR10000\", what = \"ortholog\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":null,"dir":"Reference","previous_headings":"","what":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"Using function can search retrieve homolog given gene(s).","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"","code":"rba_panther_homolog(genes, organism, type = \"P\", target_organisms = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"genes Character vector genes identifiers maximum length 10 one seq_pos supplied. Can : Ensemble gene ID, Ensemble protein ID, Ensemble transcript ID, Entrez gene ID, gene symbol, NCBI GI, HGNC ID, International protein index ID, NCBI UniGene ID, UniProt accession /UniProt ID. organism (numeric) NCBI taxon ID organism supplied genes. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. type Homolog types return. either \"P\" (default) paralogs, \"X\" horizontal gene transfer \"LDX\" diverged horizontal gene transfer. target_organisms (numeric) NCBI taxon ID(s) filter results. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. Paralog, target organism organism ; Otherwise, target organism different input organism. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"dataframe homologs information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"\"GET http://www.pantherdb.org/services/oai/pantherdb/ortholog/homologOther\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_homolog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search PANTHER for Homologs of Gene(s) — rba_panther_homolog","text":"","code":"# \\donttest{ rba_panther_homolog(\"OR4F5\", organism = 9606, type = \"P\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PANTHER database Information — rba_panther_info","title":"Get PANTHER database Information — rba_panther_info","text":"Using function can retrieve list available organisms,   annotation datasets, families, pathways supported   PANTHER.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PANTHER database Information — rba_panther_info","text":"","code":"rba_panther_info(what, organism_chr_loc = FALSE, families_page = 1, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PANTHER database Information — rba_panther_info","text":"information retrieve? one : \"organisms\": Retrieve supported organisms PANTHER. \"datasets\": Retrieve available annotation datasets. \"families\" Retrieve available family IDs. \"species_tree\" Retrieve PANThER's species tree. \"pathways\" Retrieve available pathway IDs. organism_chr_loc (Logical) ('= \"organisms\"') TRUE, organisms chromosome location returned. FALSE (default) every organisms returned. families_page (Numeric) ('= \"families\"') Family information long, results paginated. Use argument define page retrieve. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PANTHER database Information — rba_panther_info","text":"families species tree, list otherwise data frame   pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get PANTHER database Information — rba_panther_info","text":"\"GET http://www.pantherdb.org/services/oai/pantherdb/supportedgenomes\"   \"GET http://www.pantherdb.org/services/oai/pantherdb/supportedannotdatasets\"   \"GET http://www.pantherdb.org/services/oai/pantherdb/supportedpantherfamilies\"   \"GET http://www.pantherdb.org/services/oai/pantherdb/supportedpantherpathways\"   \"GET http://pantherdb.org/services/oai/pantherdb/speciestree\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get PANTHER database Information — rba_panther_info","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PANTHER database Information — rba_panther_info","text":"","code":"# \\donttest{ rba_panther_info(what = \"organisms\") # } # \\donttest{ rba_panther_info(what = \"families\", families_page = 4) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Map A Gene-set to PANTHER Database — rba_panther_mapping","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"Using function, can search genes PANTHER database   retrieve attributes annotations associated genes.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"","code":"rba_panther_mapping(genes, organism, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"genes Character vector genes identifiers maximum length 1000. Can : Ensemble gene ID, Ensemble protein ID, Ensemble transcript ID, Entrez gene ID, gene symbol, NCBI GI, HGNC ID, International protein index ID, NCBI UniGene ID, UniProt accession /UniProt ID. organism (numeric) NCBI taxon ID. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"list containing unmapped inputs mapped genes   pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"\"GET http://www.pantherdb.org/services/oai/pantherdb/geneinfo\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map A Gene-set to PANTHER Database — rba_panther_mapping","text":"","code":"# \\donttest{ rba_panther_mapping(genes = c(\"Cd40\", 7124, \"ENSG00000203747\", \"P33681\"),     organism = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":null,"dir":"Reference","previous_headings":"","what":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"Using function can search retrieve orthologs given gene(s),   optionally return corresponding position target organisms'   protein sequences.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"","code":"rba_panther_ortholog(   genes,   organism,   type = \"all\",   target_organisms = NULL,   seq_pos = NULL,   include_msa = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"genes Character vector genes identifiers maximum length 10 one seq_pos supplied. Can : Ensemble gene ID, Ensemble protein ID, Ensemble transcript ID, Entrez gene ID, gene symbol, NCBI GI, HGNC ID, International protein index ID, NCBI UniGene ID, UniProt accession /UniProt ID. organism (numeric) NCBI taxon ID organism supplied genes. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. type Ortholog types return. either \"\" (default) \"LDO\" return least diverged orthologs. target_organisms (numeric) NCBI taxon ID(s) filter results. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. seq_pos (Numeric) position protein's sequence supplied gene. range protein's length. include_msa (Logical) sequence position supplied, MSA (Multiple Sequence Alignment) information included results? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"data frame Orthologs information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"\"POST http://www.pantherdb.org/services/oai/pantherdb/ortholog/matchortho\"   \"POST http://www.pantherdb.org/services/oai/pantherdb/ortholog/homologpos\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_ortholog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search PANTHER for Orthologs of Gene(s) — rba_panther_ortholog","text":"","code":"# \\donttest{ rba_panther_ortholog(\"CD40\", organism = 9606, type = \"LDO\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":null,"dir":"Reference","previous_headings":"","what":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"information, see:   TreeGrafter:   phylogenetic tree-based annotation proteins Gene Ontology terms   annotations","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"","code":"rba_panther_tree_grafter(protein_seq, target_organisms = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"protein_seq character string protein's sequence. Maximum allowed sequence length 50kb. target_organisms (numeric) NCBI taxon ID(s) filter results. run rba_panther_info argument '= \"organisms\"' get list PANTHER's supported organisms. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"list containing PANTHER tree topology information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"\"GET http://www.pantherdb.org/services/oai/pantherdb/graftsequence\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"Huaiyu Mi, Dustin Ebert, Anushya Muruganujan, Caitlin Mills,   Laurent-Philippe Albou, Tremayne Mushayamaha, Paul D Thomas, PANTHER   version 16: revised family classification, tree-based classification   tool, enhancer regions extensive API, Nucleic Acids Research,   Volume 49, Issue D1, 8 January 2021, Pages D394–D403,   https://doi.org/10.1093/nar/gkaa1106 PANTHER   Services Details Citations   note PANTHER website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_panther_tree_grafter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PANTHER Tree Grafter\nUse this function to retrieve a PANTHER family's tree topology information\n  with a node corresponding to your sequence grafted in the best location\n  in that tree. — rba_panther_tree_grafter","text":"","code":"# \\donttest{ rba_panther_tree_grafter(\"MKVLWAALLVTFLAGCQAKVEQAVETE\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"Using function, can perform Reactome Analysis convenient way.   Analysis Type chosen depending supplied   input: supply vector single-columned table,   \"-Representation\" analysis performed. supply multi-column table, first column   molecules identifiers rest numeral expression values,   \"Expression\" analysis performed. See details section accepted input types format.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"","code":"rba_reactome_analysis(   input,   input_format = NULL,   projection = FALSE,   interactors = FALSE,   species = NULL,   sort_by = \"ENTITIES_PVALUE\",   order = \"ASC\",   resource = \"TOTAL\",   p_value = 1,   include_disease = TRUE,   min = NULL,   max = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"input vector, data frame, matrix local file path URL points data. See \"Details section\" information organize supply input. input_format (Optional) function automatically identify supplied input's format. case unexpected issues want explicit, set argument one : \"table\": supplied data frame matrix input. \"vector\": supplied simple vector (numeric character) input. \"file\": supplied local file path pointing correctly-formatted text file. \"url\": supplied URL pointing correctly-formatted text file. projection Logical (default = FALSE) non-human identifiers projected human equivalents? (using Reactome orthology data) interactors Logical (default = FALSE) IntAct interaction data used increase analysis background? species Numeric Character: NCBI Taxonomy identifier (Human 9606), species name (e.g. \"Homo sapiens\") Reactome DbId (e.g Homo sapiens 48887). See  rba_reactome_species  Reactome  Data Schema: Entries: Species. sort_by Sort result based column? available choices : \"NAME\", \"TOTAL_ENTITIES\", \"TOTAL_INTERACTORS\", \"TOTAL_REACTIONS\", \"FOUND_ENTITIES\", \"FOUND_INTERACTORS\", \"FOUND_REACTIONS\", \"ENTITIES_RATIO\", \"ENTITIES_PVALUE\", \"ENTITIES_FDR\" \"REACTIONS_RATIO\" order Sort Order. Can either \"ASC\" (default) \"DESC\". resource Filter results based resource. Default \"TOTAL\", available choices : \"TOTAL\", \"UNIPROT\", \"ENSEMBL\", \"CHEBI\", \"IUPHAR\", \"MIRBASE\", \"NCBI_PROTEIN\", \"EMBL\", \"COMPOUND\", \"ENTITIES_FDR\" \"PUBCHEM_COMPOUND\". p_value Set P value threshold. results P value equal less supplied threshold returned. (default = 1, Meaning P value filtering) include_disease Logical (default = TRUE) disease pathways included results? min (numeric) Minimum number entities pathways included results. max (numeric) Maximum number entities pathways included results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"List containing results information analysis. Note   can use token returned \"summary\" sub-list   results (.e. results$summary$token) retrieve results later   Reactome analysis functions.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"can supply table vector input numerous formats: R object can data frame, matrix simple vector. path local text file device contains molecules   data. (file formatted correctly, see .) URL pointing text file web contains molecules   data. (file formatted correctly, see . supply text file (local file path URL),   TSV (Tab-Separated Values) format; Column names start \"#\"   character. Note providing file   \"-Representation\" analysis (.e. Single columned-data) header   line optional used 'Sample Name', otherwise   required.    Also, form \"summary\" element function's output, can see   Reactome Interpreted input subsequently type analysis   performed.    strict criteria type molecules Identifiers,   Reactome Map IDs internal database entities.   Nevertheless, can check identifiers found   \"identifiersNotFound\" element function's output.    Analysis, Reactome associate token analysis.   can later used function requires token (e.g retrieve   analysis results, download pdf).    Note Reactome store token 7 days. can   download full results   rba_reactome_analysis_download, re-import anytime   reactome (using rba_reactome_analysis_import) generate   new token.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"\"POST https://reactome.org/AnalysisService/identifiers/form\"   \"POST https://reactome.org/AnalysisService/identifiers/url\"   \"POST https://reactome.org/AnalysisService/identifiers/form/projection\"   \"POST https://reactome.org/AnalysisService/identifiers/url/projection\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reactome Over-Representation or Expression Analysis — rba_reactome_analysis","text":"","code":"# \\donttest{ rba_reactome_analysis(input = c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\", \"CDC42\")) # } if (FALSE) { rba_reactome_analysis(input = \"c:/rbioapi/genes.txt\") } if (FALSE) { rba_reactome_analysis(input = \"https://qazwsx.com/genes.txt\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"Based \"request\" argument, can download different analysis   results data associated given token.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"","code":"rba_reactome_analysis_download(   token,   request,   save_to = NULL,   resource = \"TOTAL\",   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"token token associated previous Reactome analysis. request download? one : \"found_ids\": Download CSV file containing found user-supplied identifiers analysis associated supplied token resource. \"not_found_ids\"\" Download CSV file containing user-supplied Identifiers found analysis associated supplied token. \"pathways\": Download CSV file containing Pathway analysis results analysis associated supplied token resource. \"results\": Download JSON file containing complete analysis results associated supplied token. \"results_gz\" \"results\", output compress (gzipped). save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . resource (request \"found_ids\" \"pathways\") Filter results based resource. Default \"TOTAL\", available choices :\"TOTAL\", \"UNIPROT\", \"ENSEMBL\", \"CHEBI\", \"IUPHAR\", \"MIRBASE\", \"NCBI_PROTEIN\", \"EMBL\", \"COMPOUND\", \"ENTITIES_FDR\" \"PUBCHEM_COMPOUND\". ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"NULL, CSV,JSON Gzipped JSON file saved disk   based input.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"Token associated Reactome analysis results kept Reactome   least 7 days. can locate   rba_reactome_analysis's output, sub-list named   \"summary\" (.e. results$summary$token).    Use rba_reactome_analysis_pdf save full report   PDF format.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"GET https://reactome.org/AnalysisService/download/token/entities/ found/resource/filename.csv\" GET https://reactome.org/AnalysisService//download/token/entities/ notfound/filename.csv\" GET https://reactome.org/AnalysisService/download/token/pathways/ resource/filename.csv\" GET https://reactome.org/AnalysisService/download/token/result.json\" GET https://reactome.org/AnalysisService/download/token/result.json.gz\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Different Reactome Analysis Results — rba_reactome_analysis_download","text":"","code":"if (FALSE) { rba_reactome_analysis_download(token = \"MjAyMDEwMTYwMTI3MTNfMjY1MjM\",     request = \"found_ids\", save_to = \"found_ids.csv\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"JSON file analysis results (obtained via   rba_reactome_analysis_download result argument   set \"results\", \"results_gz\"), can import results back   Reactome retrieve token.    useful want use Reactome services require   token token token   expired (.e. 7 days passed analysis).","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"","code":"rba_reactome_analysis_import(input, input_format = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"input local file path URL points -optionally gzipped- JSON file. input_format (Optional) function automatically identify supplied input's format. case unexpected issues want explicit, set argument one : \"file\": supplied local file path pointing JSON file. \"url\": supplied URL pointing JSON file. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"list containing new token information   imported results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"\"GET https://reactome.org/AnalysisService/import/\"  \"GET https://reactome.org/AnalysisService/import/form\"  \"GET https://reactome.org/AnalysisService/import/url\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Saved Analysis JSON to Reactome — rba_reactome_analysis_import","text":"","code":"if (FALSE) { rba_reactome_analysis_import(\"c:/rbioapi/res.json\") } if (FALSE) { rba_reactome_analysis_import(\"https://qaz.com/res.json.gz\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"Use function map molecule identifiers different species   Reactome Identifiers.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"","code":"rba_reactome_analysis_mapping(   input,   input_format = NULL,   projection = FALSE,   interactors = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"input vector, local file path URL points identifiers list. input_format (Optional) function automatically identify supplied input's format. case unexpected issues want explicit, set argument one : \"vector\": supplied simple vector (numeric character) input. \"file\": supplied local file path pointing correctly-formatted text file. \"url\": supplied URL pointing correctly-formatted text file. projection Logical (default = FALSE) non-human identifiers projected human equivalents? (using Reactome orthology data) interactors Logical (default = FALSE) IntAct interaction data included? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"List containing identifiers IDS resources   mapped .","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"\"GET https://reactome.org/AnalysisService/mapping\"  \"GET https://reactome.org/AnalysisService/mapping/form\"  \"GET https://reactome.org/AnalysisService/mapping/form/projection\"  \"GET https://reactome.org/AnalysisService/mapping\"  \"GET https://reactome.org/AnalysisService/mapping/url\"  \"GET https://reactome.org/AnalysisService/mapping/url/projection\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps Molecule Identifiers — rba_reactome_analysis_mapping","text":"","code":"# \\donttest{ rba_reactome_analysis_mapping(c(\"Q8SQ34\", \"cd40\")) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"Use function save detailed report previous analysis (  done rba_reactome_analysis). need   supply 'token' associated previous analysis.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"","code":"rba_reactome_analysis_pdf(   token,   species,   save_to = NULL,   number = 25,   resource = \"TOTAL\",   diagram_profile = \"Modern\",   analysis_profile = \"Standard\",   fireworks_profile = \"Barium Lithium\",   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"token token associated previous Reactome analysis. species Numeric Character: NCBI Taxonomy identifier (Human Taxonomy ID 9606.) species name (e.g. \"Homo sapiens\"). See rba_reactome_species Reactome Data Schema: Entries: Species. save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . number Numeric: Maximum number reported pathways. greater 50. resource Filter results based resource. Default \"TOTAL\", available choices : \"TOTAL\", \"UNIPROT\", \"ENSEMBL\", \"CHEBI\", \"IUPHAR\", \"MIRBASE\", \"NCBI_PROTEIN\", \"EMBL\", \"COMPOUND\", \"ENTITIES_FDR\" \"PUBCHEM_COMPOUND\". diagram_profile Color profile diagrams, either \"Modern\" (default) \"Standard\". analysis_profile Color profile analysis, one : \"Standard\" (default), \"Strosobar\" \"Copper Plus\". fireworks_profile Color profile overview diagram, one : \"Copper\", \"Copper Plus\", \"Barium Lithium\" \"calcium salts\". ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"NULL, PDF file saved disk.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"Token associated Reactome analysis results kept Reactome   least 7 days. can locate   rba_reactome_analysis's output, sub-list named   \"summary\" (.e. results$summary$token).    Note Reactome store token 7 days. can   download full results   rba_reactome_analysis_download, re-import anytime   reactome (using rba_reactome_analysis_import) generate   new token.   Use rba_reactome_analysis_download save results   formats.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"\"GET https://reactome.org/AnalysisService/report/token/species/  filename.pdf\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate PDF file with Reactome Analysis Results — rba_reactome_analysis_pdf","text":"","code":"if (FALSE) { rba_reactome_analysis_pdf(token = \"MjAyMDEwMTYwMTI3MTNfMjY1MjM%3D\",     species = 9606, save_to = \"my_analysis.pdf\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"Use function Compare human's manually-curated pathways   computationally inferred pathways (orthologous) species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"","code":"rba_reactome_analysis_species(   species_dbid,   sort_by = \"ENTITIES_PVALUE\",   order = \"ASC\",   resource = \"TOTAL\",   p_value = 1,   min = NULL,   max = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"species_dbid Numeric: Reactome DbId (e.g  Mus musculus 48892) species want compare Homo sapiens. See  rba_reactome_species  Reactome  Data Schema: Entries: Species. sort_by Sort result based column? available choices : \"NAME\", \"TOTAL_ENTITIES\", \"TOTAL_INTERACTORS\", \"TOTAL_REACTIONS\", \"FOUND_ENTITIES\", \"FOUND_INTERACTORS\", \"FOUND_REACTIONS\", \"ENTITIES_RATIO\", \"ENTITIES_PVALUE\", \"ENTITIES_FDR\" \"REACTIONS_RATIO\" order Sort Order. Can either \"ASC\" (default) \"DESC\". resource Filter results based resource. Default \"TOTAL\", available choices : \"TOTAL\", \"UNIPROT\", \"ENSEMBL\", \"CHEBI\", \"IUPHAR\", \"MIRBASE\", \"NCBI_PROTEIN\", \"EMBL\", \"COMPOUND\", \"ENTITIES_FDR\" \"PUBCHEM_COMPOUND\". p_value Set P value threshold. results P value equal less supplied threshold returned. (default = 1, Meaning P value filtering) min (numeric) Minimum number entities pathways included results. max (numeric) Maximum number entities pathways included results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"List results comparison.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"Reactome incorporate manually curated human reactions PANTHER's   protein homology data Computationally infer events eukaryotic   species.  version 73 (11 June 2020), using orthology-based approach,   Homo sapiens events projected 18,654 orthologous pathways (  81,835 orthologous proteins) 15 non-human species.   See    Reactome Computationally Inferred Events information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"\"GET https://reactome.org/AnalysisService/species/homoSapiens/species\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Human Pathways with with Other Species — rba_reactome_analysis_species","text":"","code":"# \\donttest{ rba_reactome_analysis_species(species_dbid = 48892) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Results Associated with a Token — rba_reactome_analysis_token","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"Use token generated Reactome analysis   (via rba_reactome_analysis) Retrieve analysis results.   output format identical returned object   rba_reactome_analysis.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"","code":"rba_reactome_analysis_token(   token,   species,   sort_by = \"ENTITIES_PVALUE\",   order = \"ASC\",   resource = \"TOTAL\",   p_value = NULL,   include_disease = TRUE,   min = NULL,   max = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"token token associated previous Reactome analysis. species Numeric Character: NCBI Taxonomy identifier (Human 9606), species name (e.g. \"Homo sapiens\") Reactome DbId (e.g Homo sapiens 48887). See  rba_reactome_species  Reactome  Data Schema: Entries: Species. sort_by Sort result based column? available choices : \"NAME\", \"TOTAL_ENTITIES\", \"TOTAL_INTERACTORS\", \"TOTAL_REACTIONS\", \"FOUND_ENTITIES\", \"FOUND_INTERACTORS\", \"FOUND_REACTIONS\", \"ENTITIES_RATIO\", \"ENTITIES_PVALUE\", \"ENTITIES_FDR\" \"REACTIONS_RATIO\" order Sort Order. Can either \"ASC\" (default) \"DESC\". resource Filter results based resource. Default \"TOTAL\", available choices : \"TOTAL\", \"UNIPROT\", \"ENSEMBL\", \"CHEBI\", \"IUPHAR\", \"MIRBASE\", \"NCBI_PROTEIN\", \"EMBL\", \"COMPOUND\", \"ENTITIES_FDR\" \"PUBCHEM_COMPOUND\". p_value Set P value threshold. results P value equal less supplied threshold returned. (default = 1, Meaning P value filtering) include_disease Logical (default = TRUE) disease pathways included results? min (numeric) Minimum number entities pathways included results. max (numeric) Maximum number entities pathways included results. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"List containing results information analysis.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"Analysis, Reactome associate token analysis.   can later used function requires token (e.g retrieve   analysis results, download pdf).    Note Reactome store token 7 days. can   download full results   rba_reactome_analysis_download, re-import anytime   reactome (using rba_reactome_analysis_import) generate   new token.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"\"GET https://reactome.org/AnalysisService/token/token\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Analysis   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_analysis_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the Results Associated with a Token — rba_reactome_analysis_token","text":"","code":"if (FALSE) { rba_reactome_analysis_token(token = \"MjAyMDEwMTYwMTI3MTNfMjY1MjM\",     species = 9606) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Complexes That Include a Molecule — rba_reactome_complex_list","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"function retrieve list complexes include supplied   molecule component.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"","code":"rba_reactome_complex_list(id, resource, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"id Molecule's external Identifier resource resource supplied ID? see: Reactome External Identifiers ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"Data frame row complex containing supplied   molecule columns pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"\"GET https://reactome.org/ContentService/data/complexes/resource/  identifier\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Complexes That Include a Molecule — rba_reactome_complex_list","text":"","code":"# \\donttest{ rba_reactome_complex_list(id = \"3845\", resource = \"NCBI Gene\") # } # \\donttest{ rba_reactome_complex_list(id = \"P00533\", resource = \"UniProt\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Complex's Subunits — rba_reactome_complex_subunits","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"function return list subunits participants supplied complex.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"","code":"rba_reactome_complex_subunits(complex_id, exclude_structures = FALSE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"complex_id Reactome stable Identifier complex. exclude_structures (logical) contained complexes entity sets excluded results? (default = FALSE) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"Data frame row subunit supplied complex columns pertinent information subunit.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"Subunits returned recursively; means subunit   complex, subunit complex also returned   results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"\"GET https://reactome.org/ContentService/data/complex/id/subunits\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_complex_subunits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Complex's Subunits — rba_reactome_complex_subunits","text":"","code":"# \\donttest{ rba_reactome_complex_subunits(complex_id = \"R-HSA-5674003\",     exclude_structures = FALSE) # } # \\donttest{ rba_reactome_complex_subunits(complex_id = \"R-HSA-109783\",     exclude_structures = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactome Diseases — rba_reactome_diseases","title":"Reactome Diseases — rba_reactome_diseases","text":"function Retrieve list diseases disease DOIDs annotated   Reactome.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactome Diseases — rba_reactome_diseases","text":"","code":"rba_reactome_diseases(doid = FALSE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reactome Diseases — rba_reactome_diseases","text":"doid (logical) Return disease DOIDs instead diseases? (default = FALSE) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reactome Diseases — rba_reactome_diseases","text":"Data frame containing disease annotation available   Reactome. doid set TRUE, DOID info returned instead.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Reactome Diseases — rba_reactome_diseases","text":"\"GET https://reactome.org/ContentService/GET data/diseases\"  \"GET https://reactome.org/ContentService/GET data/diseases/doid\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reactome Diseases — rba_reactome_diseases","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_diseases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reactome Diseases — rba_reactome_diseases","text":"","code":"# \\donttest{ rba_reactome_diseases() # } # \\donttest{ rba_reactome_diseases(doid = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"function retrieve list containing forms supplied   Physical Entity ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"","code":"rba_reactome_entity_other_forms(entity_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"entity_id Reactome's entity ID. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"Data frame row forms supplied Entity ID   columns pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"According Reactome API documentation, \"forms Physical   Entities share Reference Entity identifier, e.g. PTEN   H93R R-HSA-2318524 PTEN C124R R-HSA-2317439 two forms PTEN.\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"\"GET https://reactome.org/ContentService/data/entity/id/otherForms\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_entity_other_forms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Other forms of a Reactome Entity — rba_reactome_entity_other_forms","text":"","code":"# \\donttest{ rba_reactome_entity_other_forms(\"R-HSA-199420\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"Along Reactome's events hierarchy, function retrieve  events beginning supplied event \"Top level Pathway\".  see \"Details section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"","code":"rba_reactome_event_ancestors(event_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"event_id Reactome event's identifier. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"List every element Data frame listing supplied   event along ancestor events. given event can   part one pathway hierarchy, list may contain multiple   data frames.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"Reactome's definition, Events building blocks biological   processes two main classes: \"Pathway\"   \"Reaction-like events\". events organized hierarchical   structure; event child parent another event;   hierarchy always begin \"Top level pathway\" event. Also note   given event part one hierarchies.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"\"GET https://reactome.org/ContentService/data/event/id/ancestors\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_ancestors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Reactome Events Ancestors — rba_reactome_event_ancestors","text":"","code":"# \\donttest{ rba_reactome_event_ancestors(\"R-HSA-5673001\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"function retrieve full Events hierarchy supplied   species. Directly species, child element \"top Level   Pathway\". can traverse events tree following \"children\"   element.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"","code":"rba_reactome_event_hierarchy(species, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"species Numeric Character: NCBI Taxonomy identifier (Human Taxonomy ID 9606.) species name (e.g. \"Homo sapiens\"). See rba_reactome_species Reactome Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"List representation species's events hierarchy   described \"Details section\".","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"Reactome's definition, Events building blocks biological   processes two main classes: \"Pathway\"   \"Reaction-like events\". events organized hierarchical   structure; event child parent another event;   hierarchy always begin \"Top level pathway\" event. Also note   given event part one hierarchies.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"\"GET https://reactome.org/ContentService/data/eventsHierarchy/species\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_event_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Full Event Hierarchy of a Species — rba_reactome_event_hierarchy","text":"","code":"if (FALSE) { #very large response! rba_reactome_event_hierarchy(\"Homo sapiens\") } if (FALSE) { #very large response! rba_reactome_event_hierarchy(9606) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"function called two scenarios: create_document = FALSE: retrieve image event's   Diagram. create_document = TRUE: retrieve PDF document   event's diagram image additional information. see \"Details section\" information","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"","code":"rba_reactome_exporter_diagram(   event_id,   save_to = NULL,   create_document = FALSE,   resource = \"TOTAL\",   diagram_profile = \"Modern\",   analysis_profile = \"Standard\",   token = NULL,   exp_column = NULL,   document_level = 1,   output_format = \"png\",   image_quality = 5,   flag_element = NULL,   flg_interactors = TRUE,   sel = NULL,   title = TRUE,   margin = 15,   ehld = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"event_id Reactome event's identifier. save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . create_document logical: Create PDF document instead image? ( default = FALSE) resource analysis resource results overlaid top given pathways overview, diagram_profile Color profile diagrams, either \"Modern\" (default) \"Standard\". analysis_profile Color profile analysis, one : \"Standard\" (default), \"Strosobar\" \"Copper Plus\" token analysis Token results overlaid top given pathways overview. see: rba_reactome_analysis. exp_column numeric: (token supplied) Specify expression column overlay. document_level numeric: (\"create_document\" TRUE) 0 (default) event's children included PDF document.  Set 1 include event's children. output_format (\"create_document\" FALSE) Image format saved diagram. Can one : png (default), jpeg, svg gif. image_quality Numeric: (\"create_document\" FALSE), number ranging 1 10. 1 lowest quality 10 highest (default = 5). flag_element (\"create_document\" FALSE) gene name, protein ID, chemical ID Reactome ID diagram's element flagged. flg_interactors Logical: (\"create_document\" FALSE) interactor considered flagging diagram element? (default = TRUE) sel (\"create_document\" FALSE) CSV line highlighting element(s) selection diagram. title Logical: (\"create_document\" FALSE) pathway name displayed image? (default = TRUE) margin Numeric: (\"create_document\" FALSE) number ranging 0 20 set image's margin. (default = 15) ehld logical: (\"create_document\" FALSE) \"Enhanced High Level Diagram\" considered? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"NULL, Based inputs, image PDF file saved   disk.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"function called create_document = FALSE:    result image format supplied \"output_format\"   argument. supplied event ID refers pathway, image's   content pathways diagram. supplied event ID refers   sub-pathway reaction event, parent pathway's diagram   exported, reaction sub-pathway's events highlighted.    Note export image reaction-like event separately,   use rba_reactome_exporter_reaction.    function called create_document = TRUE:    PDF document contain image event's diagram   following information events: Summation, Literature references,   Edit history type, location, compartments diseases.   note call function \"document level = 1\", information   supplied event's children also included.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"\"GET https://reactome.org/ContentService/exporter/diagram/identifier   .ext\"   \"GET https://reactome.org/ContentService/exporter/document/event/   identifier.pdf\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Reactome Event Diagram — rba_reactome_exporter_diagram","text":"","code":"if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-177929\",   create_document = FALSE) } if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-6787403\",     create_document = FALSE) } if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-177929\",     create_document = TRUE) } if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-177929\",     output_format = \"svg\",     save_to = \"reactome_event_diagram.svg\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"function export supplied Reactome Event (Pathway Reaction)   SBGN (Systems Biology Graphical Notation) SBML (Systems Biology   Markup Language)","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"","code":"rba_reactome_exporter_event(event_id, output_format, save_to = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"event_id Reactome event's database IDs (DbId) Stable IDs (StId). output_format Either \"sbgn\" \"sbml\". save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"NULL, According inputs, SBGN SBML file saved   disk.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"\"GET https://reactome.org/ContentService//exporter/event/  identifier.sbgn\"  \"GET https://reactome.org/ContentService//exporter/event/  identifier.sbml\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exports A Reactome Event to SBGN or SBML — rba_reactome_exporter_event","text":"","code":"if (FALSE) { rba_reactome_exporter_event(event_id = \"R-HSA-177929\",     output_format = \"sbgn\",     save_to = \"R-HSA-177929.sbgn\") } if (FALSE) { rba_reactome_exporter_event(event_id = \"R-HSA-177929\",     output_format = \"sbgn\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"function Save Pathway Overview supplied specie   image file.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"","code":"rba_reactome_exporter_overview(   species,   output_format = \"png\",   save_to = NULL,   image_quality = 5,   flag_element = NULL,   flg_interactors = TRUE,   sel = NULL,   title = TRUE,   margin = 15,   diagram_profile = \"Copper\",   token = NULL,   resource = \"TOTAL\",   exp_column = NULL,   coverage = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"species Numeric Character: NCBI Taxonomy identifier (Human Taxonomy ID 9606.) species name (e.g. \"Homo sapiens\"). See rba_reactome_species Reactome Data Schema: Entries: Species. output_format Images format, Can one : png (default), jpeg, svg gif. save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . image_quality Numeric: number  ranging 1 10. 1 lowest quality 10 highest (default = 5). flag_element Gene name, protein ID, chemical ID Reactome ID diagram's element flagged. flg_interactors Logical: interactor considered flagging diagram element? (default = TRUE) sel CSV line highlighting element(s) selection diagram. title Logical: pathway name displayed image? (default = TRUE) margin Numeric: number ranging 0 20 set image's margin. (default = 15) diagram_profile Color profile diagrams, one \"Copper\" (default), \"Copper Plus\", \"Barium Lithium\" \"calcium salts\". token analysis Token results overlaid top given pathways overview. see: rba_reactome_analysis. resource analysis resource results overlaid top given pathways overview. exp_column numeric: (token supplied) Specify expression column overlay. coverage Logical: analysis coverage values overlaid? (default = FALSE) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"NULL, Based inputs, image file saved disk.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"\"GET https://reactome.org/ContentService/exporter/fireworks/species.ext\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Reactome Pathway Overview — rba_reactome_exporter_overview","text":"","code":"if (FALSE) { rba_reactome_exporter_overview(species = 9606,     output_format = \"svg\",     save_to = \"human_pathways.svg\") } if (FALSE) { rba_reactome_exporter_overview(species = 9606,     token = 123456789) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"function Save Reactome event class \"ReactionLikeEvent\"   image file.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"","code":"rba_reactome_exporter_reaction(   event_id,   save_to = NULL,   output_format = \"png\",   resource = \"TOTAL\",   diagram_profile = \"Modern\",   analysis_profile = \"Standard\",   token = NULL,   exp_column = NULL,   image_quality = 5,   flag_element = NULL,   flg_interactors = TRUE,   sel = NULL,   title = TRUE,   margin = 15,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"event_id Reactome Reaction-like event's identifier. save_to NULL Character: NULL: Save file automatically-generated path. Character string: valid file path save file . output_format Images format, Can one : png (default), jpeg, svg gif. resource analysis resource results overlaid top given pathways overview. diagram_profile Color profile diagrams, one \"Copper\" (default), \"Copper Plus\", \"Barium Lithium\" \"calcium salts\". analysis_profile Color profile analysis, one : \"Standard\" (default), \"Strosobar\" \"Copper Plus\". token analysis Token results overlaid top given pathways overview. see: rba_reactome_analysis. exp_column numeric: (token supplied) Specify expression column overlay. image_quality Numeric: number  ranging 1 10. 1 lowest quality 10 highest (default = 5). flag_element Gene name, protein ID, chemical ID Reactome ID diagram's element flagged. flg_interactors Logical: interactor considered flagging diagram element? (default = TRUE) sel CSV line highlighting element(s) selection diagram. title Logical: pathway name displayed image? (default = TRUE) margin Numeric: number ranging 0 20 set image's margin. (default = 15) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"NULL, Based inputs, image file saved disk.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"Note function save Reaction-like event separately   parent pathway context. overlay Reaction parent   pathway, use rba_reactome_exporter_diagram.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"\"GET https://reactome.org/ContentService//exporter/reaction/  identifier.ext\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_exporter_reaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Reactome Reaction Event — rba_reactome_exporter_reaction","text":"","code":"if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-6787403\",     create_document = FALSE) } if (FALSE) { rba_reactome_exporter_diagram(event_id = \"R-HSA-6787403\",      output_format = \"svg\",      save_to = \"reactome_reacion_image.svg\") }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":null,"dir":"Reference","previous_headings":"","what":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"can call function two scenarios:   1- retrieve information available PSICQUIC resources, call   function without providing argument; .e   rba_reactome_interactors_psicquic().   2-retrieve list interactors specific protein(s), fill   function's arguments.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"","code":"rba_reactome_interactors_psicquic(   proteins = NULL,   resource = NULL,   details = TRUE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"proteins Proteins retrieve PSICQUIC interactors. resource PSICQUIC resource supplied proteins. Call rba_reactome_interactors_psicquic() without argument get available options. details Logical: TRUE (default) detailed list interactors returned. FALSE, summary available interactors returned. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"Depending input, list containing detailed summary   PSICQUIC interactions data frame registered PSICQUIC   resources.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"\"POST https://reactome.org/ContentService/interactors/psicquic/molecules/    resource/details\"  \"POST https://reactome.org/ContentService/interactors/psicquic/molecules/    resource/summary\"  \"GET https://reactome.org/ContentService/interactors/psicquic/resources\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_psicquic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The interface From Reactome to PSICQUIC — rba_reactome_interactors_psicquic","text":"","code":"# \\donttest{ rba_reactome_interactors_psicquic() # } # \\donttest{ rba_reactome_interactors_psicquic(proteins = c(\"TP53\", \"MYC\"),     resource = \"BioGrid\",     details = FALSE) # } # \\donttest{ rba_reactome_interactors_psicquic(proteins = c(\"TP53\", \"MYC\"),     resource = \"BioGrid\",     details = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"Reactome maintain locally host version IntAct(Static) interactions   database. Using function, can retrieve IntAct information   protein(s) two scenarios: endpoint = \"details\" \"summary\": Retrieve detailed/summary     information supplied protein accession(s) IntAct database. endpoint = \"pathway\", Retrieve list Reactome pathways   include supplied protein accession. Pathways class   \"TopLevelPathway\" excluded.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"","code":"rba_reactome_interactors_static(   proteins,   endpoint = \"details\",   only_diagrammed = FALSE,   species = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"proteins Uniprot proteins accession(s). endpoint = \"pathway\", single protein accession can supplied. endpoint Can one : \"details\": return detailed information supplied protein(s) accession. \"summary\": return summary supplied protein(s) accession \"pathway\": return list pathways containing interacting molecules (excluding TopLevelPathway class). only_diagrammed Logical: (\"endpoint = \"pathway\") TRUE, pathways without diagram excluded. (default = FALSE) species \"endpoint = \"pathway\", scientific name species search pathways. See  rba_reactome_species  Reactome  Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"List content varies based  supplied \"endpoint\"   argument.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"\"POST https://reactome.org/ContentService/interactors/static/  molecules/details\"   \"POST https://reactome.org/ContentService/interactors/static/  molecules/summary\"   \"GET https://reactome.org/ContentService/interactors/static/  molecules/pathways\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_interactors_static.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Static(IntAct) Interaction Information of a Protein — rba_reactome_interactors_static","text":"","code":"# \\donttest{ rba_reactome_interactors_static(proteins = \"Q9BXM7-1\",     endpoint = \"pathways\", species = \"Homo sapiens\") # } # \\donttest{ rba_reactome_interactors_static(proteins = c(\"Q9BXM7-1\", \"Q13501\"),     endpoint = \"details\") # } # \\donttest{ rba_reactome_interactors_static(proteins = c(\"Q9BXM7-1\", \"Q13501\"),     endpoint = \"summary\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"providing external identifier given resource, can retrieve   list pathways/reactions include supplied ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"","code":"rba_reactome_mapping(id, resource, map_to, species = \"Homo sapiens\", ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"id Molecule's external Identifier resource resource supplied ID? see: Reactome External Identifiers map_to Either \"pathways\" \"reactions\". species Numeric Character: NCBI Taxonomy identifier (Human 9606), species name (e.g. \"Homo sapiens\") Reactome DbId (e.g Homo sapiens 48887). See  rba_reactome_species  Reactome  Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"Data frame row pathway/reaction columns   pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"\"GET https://reactome.org/ContentService/data/mapping/resource/  identifier/pathways\"   \"GET https://reactome.org/ContentService/data/mapping/resource/  identifier/reactions\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map External ID to Reactome Pathways/Reactions — rba_reactome_mapping","text":"","code":"# \\donttest{ rba_reactome_mapping(id = \"PTEN\", resource =  \"UniProt\",     map_to = \"reactions\", species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"Reactome incorporate manually curated human reactions PANTHER's   protein homology data Computationally infer events eukaryotic   species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"","code":"rba_reactome_orthology(event_ids, species_dbid, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"event_ids Human Reactome event ID(s) retrieve orthologous events. species_dbid Reactome database ID (DbId) target species. (e.g Mus musculus 48892). See  rba_reactome_species  Reactome  Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"List containing found Orthologous event(s) supplied species   pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"version 73 (11 June 2020), using orthology-based approach,   Homo sapiens events projected 18,654 orthologous pathways (  81,835 orthologous proteins) 15 non-human species.    See    Reactome Computationally Inferred Events information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"\"POST https://reactome.org/ContentService/data/orthologies/ids/    species/speciesId\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_orthology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Orthologous (Computationally Inferred) Events — rba_reactome_orthology","text":"","code":"# \\donttest{ rba_reactome_orthology(event_ids = c(\"R-HSA-6799198\", \" R-HSA-72764\"),     species_dbid = 49633) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"function retrieve list complexes sets   supplied entity ID participates (e.g. complex component,   reaction output).","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"","code":"rba_reactome_participant_of(entity_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"entity_id Reactome's entity ID. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"List Reactome database Entities supplied ID   participant .","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"\"GET https://reactome.org/ContentService/data/entity/id/componentOf\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participant_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Larger Reactome Structures Which Include an Entity — rba_reactome_participant_of","text":"","code":"# \\donttest{ rba_reactome_participant_of(entity_id = \"R-HSA-199420\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Participants of a Reactome Event — rba_reactome_participants","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"Participating molecules Reactome comprises set 'Physical Entity'   'Reference Entities' class objects. Use function retrieve ,   'Physical Entity' 'Reference Entities' participants given event.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"","code":"rba_reactome_participants(   event_id,   only_physical_entities = FALSE,   only_reference_entities = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"event_id Reactome event's database ID (DbId) Stable ID (StId). only_physical_entities Logical: TRUe, participating 'Physical Entities' returned. only_reference_entities Logical: TRUe, participating 'Reference Entities' returned. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"List participant supplied Event ID. Data frame  physical 'Reference Entities' requested.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"'Physical Entity' Instance include individual molecule,  multi-molecular complex set molecule forming group based  characteristics. single molecule can different 'Physical Entity'  instances based associated attributes. example, IgK Ig kappa  chain, two 'Physical Entity' instances; one, ID    \"R-HSA-197041\" refers secreted antibody protein  extra-cellular region; second one ID    \"R-HSA-2038819\" refers plasma-membrane-integrated form  antibody protein.   make possible link multiple 'Physical Entity' instances  molecule, Reactome uses data class named \"'Reference Entities'\"  correspond invariant attribute molecule. example,  -mentioned 'Physical Entities' see 'Reference Entities'  named   \"UniProt:P01834 IGKC.   See Reactome  Data Model information data model Physical  Entities.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"\"GET https://reactome.org/ContentService/data/participants/id\"   \"GET https://reactome.org/ContentService/data/participants/id/  participatingPhysicalEntities\"   \"GET https://reactome.org/ContentService/data/participants/id/  referenceEntities\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_participants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Participants of a Reactome Event — rba_reactome_participants","text":"","code":"# \\donttest{ rba_reactome_participants(\"R-HSA-5682012\") # } # \\donttest{ rba_reactome_participants(\"R-HSA-5682012\", only_physical_entities = TRUE) # } # \\donttest{ rba_reactome_participants(\"R-HSA-5682012\", only_reference_entities = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"Reactome Event comprised events (meaning, pathway   include pathways ). Use function recursively return   events reside downstream supplied event ID (  attribute events).","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"","code":"rba_reactome_pathways_events(event_id, attribute_name = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"event_id Reactome event's database ID (DbId) Stable ID (StId). attribute_name attribute events returned instead whole events. see  Reactome Data Schema: Event available options. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"Data frame row contained event columns   event's attributes. \"attribute_name\" argument supplied,   character vector returned.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"Reactome's definition, Events building blocks biological   processes two main classes: \"Pathway\"   \"Reaction-like events\". events organized hierarchical   structure; event child parent another event;   hierarchy always begin \"Top level pathway\" event. Also note   given event part one hierarchies.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"\"GET https://reactome.org/ContentService/data/pathway/id/  containedEvents\"   \"GET https://reactome.org/ContentService/data/pathway/id/  containedEvents/attributeName\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Events Contained in an Upstream Events — rba_reactome_pathways_events","text":"","code":"# \\donttest{ rba_reactome_pathways_events(event_id = \"R-HSA-5673001\") # } # \\donttest{ rba_reactome_pathways_events(event_id = \"R-HSA-5673001\",     attribute_name = \"displayName\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"Use function search event hierarchy retrieve list   lower level pathways (non TopLevelPathway class) contain   given 'Physical Entity' Event. See \"Arguments section\"   modify search.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"","code":"rba_reactome_pathways_low(   entity_id,   with_diagram = FALSE,   all_forms = FALSE,   species = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"entity_id entity exist pathways. with_diagram Logical: include pathways diagram? all_forms Logical: variants supplied entity_id considered? (e.g. molecule different compartment, secretory form etc.) see rba_reactome_participants's \"Details section\" learn Reactome classifies molecules. species (optional) Numeric Character: confine search specific species providing NCBI Taxonomy identifier (Human Taxonomy ID 9606) species name (e.g. \"Homo sapiens\"). See rba_reactome_species  Reactome  Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"Data frame row pathway contains supplied   entity columns pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"\"GET https://reactome.org/ContentService/data/pathways/low/entity/id\"   \"GET https://reactome.org/ContentService/data/pathways/low/diagram/  entity/id\"   \"GET https://reactome.org/ContentService/data/pathways/low/diagram/  entity/id/allForms\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_low.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lower level pathways Containing a 'Physical Entity' or Event — rba_reactome_pathways_low","text":"","code":"# \\donttest{ rba_reactome_pathways_low(entity_id = \"R-HSA-199420\") # } # \\donttest{ rba_reactome_pathways_low(entity_id = \"R-HSA-199420\", with_diagram = TRUE) # } # \\donttest{ rba_reactome_pathways_low(entity_id = \"R-HSA-199420\", with_diagram = TRUE,     all_forms = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"function Return list pathways class   \"TopLevelPathway\" annotated supplied species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"","code":"rba_reactome_pathways_top(species, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"species Numeric Character: NCBI Taxonomy identifier (Human Taxonomy ID 9606.) species name (e.g. \"Homo sapiens\"). See rba_reactome_species Reactome Data Schema: Entries: Species. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"Data frame row Top Level Pathway columns   pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"Reactome's Events hierarchy specie begin pathways   class \"TopLevelPathway\" (e.g. \"Immune System\", \"Metabolism proteins\").   event's hierarchy tree, TopLevelPathway   events (e.g. \"Adaptive immune system\", \"Innate immune   system\"). Based chosen pathway, hierarchy tree typically   goes .","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"\"GET https://reactome.org/ContentService/data/pathways/top/species\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_pathways_top.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Top Level Pathways in a Species — rba_reactome_pathways_top","text":"","code":"# \\donttest{ rba_reactome_pathways_top(species = 9606) # } # \\donttest{ rba_reactome_pathways_top(species = \"Saccharomyces cerevisiae\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":null,"dir":"Reference","previous_headings":"","what":"A person by his identifiers — rba_reactome_people_id","title":"A person by his identifiers — rba_reactome_people_id","text":"person identifiers","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A person by his identifiers — rba_reactome_people_id","text":"","code":"rba_reactome_people_id(   person_id,   authored_pathways = FALSE,   publications = FALSE,   attribute_name = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A person by his identifiers — rba_reactome_people_id","text":"person_id Reactome database ID (DbId) ORCHID ID authored_pathways Logical: return Pathway list authored person? (default = FALSE) publications Logical: return publications list authored person? (Defalt = FALSE) attribute_name (optional) Reactome person attribute return . see Reactome Data Schema: person available options. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A person by his identifiers — rba_reactome_people_id","text":"List containing requested informations supplied   person.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"A person by his identifiers — rba_reactome_people_id","text":"\"GET https://reactome.org/ContentService\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A person by his identifiers — rba_reactome_people_id","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A person by his identifiers — rba_reactome_people_id","text":"","code":"# \\donttest{ rba_reactome_people_id(\"391309\") # } # \\donttest{ rba_reactome_people_id(person_id = \"391309\", authored_pathways = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Persons Information by Name — rba_reactome_people_name","title":"Get Persons Information by Name — rba_reactome_people_name","text":"Using function can query people partially matching exact   name retrieve list matching people Reactome.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Persons Information by Name — rba_reactome_people_name","text":"","code":"rba_reactome_people_name(person_name, exact_match = FALSE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Persons Information by Name — rba_reactome_people_name","text":"person_name first last name person exact_match Logical: supplied name considered exact match? (default = FALSE) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Persons Information by Name — rba_reactome_people_name","text":"List element search hit contains person's   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Persons Information by Name — rba_reactome_people_name","text":"\"GET https://reactome.org/ContentService/data/people/name/name\"   \"GET https://reactome.org/ContentService/data/people/name/name/exact\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Persons Information by Name — rba_reactome_people_name","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_people_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Persons Information by Name — rba_reactome_people_name","text":"","code":"# \\donttest{ rba_reactome_people_name(\"Jupe\") # } # \\donttest{ rba_reactome_people_name(\"Steve Jupe\", exact_match = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"Using Comprehensive function, can Retrieve object   Reactome   knowledge-base","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"","code":"rba_reactome_query(   ids,   enhanced = FALSE,   map = FALSE,   attribute_name = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"ids single Multiple database IDs (DbId), Stable IDs (StId) mixture . enhanced Logical: (Default = FALSE) 'TRUE' information supplied entry returned. (can set argument 'TRUE' supply single ID). map (Default = FALSE) supplied IDs mapped?   argument considered supply multiple IDs. (e.g. supply previous version stable identifiers.) attribute_name (Optional) Return Attribute supplied Database Object. (can use argument supply single ID) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"List containing query outputs.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"\"POST https://reactome.org/ContentService/data/query/ids\"   \"POST https://reactome.org/ContentService/data/query/ids/map\"   \"GET https://reactome.org/ContentService/data/query/id\"   s\"GET https://reactome.org/ContentService//data/query/enhanced/id\"   \"GET https://reactome.org/ContentService/data/query/id/attributeName\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query and Retrieve any Reactome knowledge-base Object — rba_reactome_query","text":"","code":"# \\donttest{ rba_reactome_query(ids = c(\"8953958\", \"11982506\", \"R-ALL-9649879\")) # } # \\donttest{ rba_reactome_query(ids = \"R-HSA-9656256\", enhanced = TRUE) # } # \\donttest{ rba_reactome_query(ids = \"8863054\", attribute_name = \"displayName\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Reactome Species — rba_reactome_species","title":"Get Reactome Species — rba_reactome_species","text":"Use function retrieve table Available species Reactome.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Reactome Species — rba_reactome_species","text":"","code":"rba_reactome_species(only_main = FALSE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Reactome Species — rba_reactome_species","text":"only_main Logical: set TRUE, return species either manually-curated computationally inferred pathways. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Reactome Species — rba_reactome_species","text":"Data frame row species columns pertinent   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Reactome Species — rba_reactome_species","text":"\"GET https://reactome.org/ContentService/data/species/\"   \"GET https://reactome.org/ContentService/data/species/main\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Reactome Species — rba_reactome_species","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Reactome Species — rba_reactome_species","text":"","code":"# \\donttest{ rba_reactome_species() # } # \\donttest{ rba_reactome_species(only_main = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":null,"dir":"Reference","previous_headings":"","what":"The version number of current database — rba_reactome_version","title":"The version number of current database — rba_reactome_version","text":"Returns current version Reactome database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The version number of current database — rba_reactome_version","text":"","code":"rba_reactome_version(...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The version number of current database — rba_reactome_version","text":"... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The version number of current database — rba_reactome_version","text":"Character string containing version Reactome database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"The version number of current database — rba_reactome_version","text":"\"GET https://reactome.org/ContentService/data/database/version\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The version number of current database — rba_reactome_version","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The version number of current database — rba_reactome_version","text":"","code":"# \\donttest{ rba_reactome_version() # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"Use function retrieve list Reactome ReferenceEntity associated   supplied Cross Reference (.e. External) ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"","code":"rba_reactome_xref(xref_id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"xref_id molecule's cross-reference (external) identifier. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"List containing ReferenceEntity corresponding   supplied cross-reference (external) ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"Reactome cross-references external database's identifiers database   Entries named ReferenceEntity, resembles invariant aspect   molecule. Thus one--many relationship Reactome's   ReferenceEntity object molecule's ID external databases,   Reactome's terms called Cross Reference.    See rba_reactome_participants's \"Details section\"   learn Reactome classifies molecules.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"\"GET https://reactome.org/ContentService/references/mapping/identifier\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"Marc Gillespie, Bijay Jassal, Ralf Stephan, Marija Milacic, Karen   Rothfels, Andrea Senff-Ribeiro, Johannes Griss, Cristoffer Sevilla, Lisa   Matthews, Chuqiao Gong, Chuan Deng, Thawfeek Varusai, Eliot Ragueneau,   Yusra Haider, Bruce May, Veronica Shamovsky, Joel Weiser, Timothy Brunson,   Nasim Sanati, Liam Beckman, Xiang Shao, Antonio Fabregat, Konstantinos   Sidiropoulos, Julieth Murillo, Guilherme Viteri, Justin Cook, Solomon   Shorser, Gary Bader, Emek Demir, Chris Sander, Robin Haw, Guanming Wu,   Lincoln Stein, Henning Hermjakob, Peter D’Eustachio, reactome   pathway knowledgebase 2022, Nucleic Acids Research, 2021;, kab1028,   https://doi.org/10.1093/nar/gkab1028 Griss J, Viteri G, Sidiropoulos K, Nguyen V, Fabregat ,   Hermjakob H. ReactomeGSA - Efficient Multi-Omics Comparative Pathway   Analysis. Mol Cell Proteomics. 2020 Sep 9. doi: 10.1074/mcp. PubMed   PMID: 32907876. Reactome Content   Services API Documentation Citations note Reactome website","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_reactome_xref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Cross References IDs to Reactome ReferenceEntity — rba_reactome_xref","text":"","code":"# \\donttest{ rba_reactome_xref(\"CD40\") # } # \\donttest{ rba_reactome_xref(\"ENSP00000361350\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving Functional Annotation — rba_string_annotations","title":"Retrieving Functional Annotation — rba_string_annotations","text":"STRING cross-reference proteins several databases (see \"Details\"   section). providing input set o proteins (optionally   background universe protein set), can use function   retrieve full set terms (annotations) pertinent input proteins   database, among information term.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieving Functional Annotation — rba_string_annotations","text":"","code":"rba_string_annotations(   ids,   species = NULL,   allow_pubmed = FALSE,   split_df = TRUE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieving Functional Annotation — rba_string_annotations","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) allow_pubmed logical: (default = FALSE) PubMed usually  assigns large number reference publications protein. order reduce output size, PubMed's results excluded results, unless stated otherwise (setting argument TRUE). split_df (logical, default = TRUE), TRUE, instead one data frame, results different categories split multiple data frames based 'category'. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving Functional Annotation — rba_string_annotations","text":"data frame every row assigned terms columns   terms category, description, number genes, pertinent   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieving Functional Annotation — rba_string_annotations","text":"STRING currently maps retrieve enrichment results based Gene   Ontology (GO), KEGG pathways, UniProt Keywords, PubMed publications, Pfam   domains, InterPro domains, SMART domains.    Note function return full list terms containing   supplied proteins. perform enrichment retrieve enriched   subset terms, use rba_string_enrichment.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Retrieving Functional Annotation — rba_string_annotations","text":"\"POST https://string-db.org/api/[output_format]/functional_annotation?  identifiers=[your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieving Functional Annotation — rba_string_annotations","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving Functional Annotation — rba_string_annotations","text":"","code":"# \\donttest{ rba_string_annotations(ids = \"TP53\", species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting Functional Enrichment — rba_string_enrichment","title":"Getting Functional Enrichment — rba_string_enrichment","text":"STRING cross-reference proteins several databases (see \"Details\"   section). providing input set o proteins (optionally   background universe protein set), can use function   perform enrichment test retrieve list enriched terms   database, among pertinent information term.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting Functional Enrichment — rba_string_enrichment","text":"","code":"rba_string_enrichment(   ids,   species = NULL,   background = NULL,   split_df = TRUE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting Functional Enrichment — rba_string_enrichment","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) background character vector: set STRING protein IDs used statistical background (universe) computing P-value terms. STRING IDs acceptable. (See rba_string_map_ids map IDs.) split_df (logical, default = TRUE), TRUE, instead one data frame, results different categories split multiple data frames based 'category'. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting Functional Enrichment — rba_string_enrichment","text":"list data frames every row enriched terms p-value   smaller 0.1 columns terms category, description,   number genes, p-value, fdr pertinent information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting Functional Enrichment — rba_string_enrichment","text":"STRING currently maps retrieve enrichment results based Gene   Ontology (GO), KEGG pathways, UniProt Keywords, PubMed publications, Pfam   domains, InterPro domains, SMART domains.    Note function return enriched terms pertinent   proteins p-value lesser 0.1. retrieve full   list terms -unfiltered enrichment p-values-, use   rba_string_annotations.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Getting Functional Enrichment — rba_string_enrichment","text":"\"POST https://string-db.org/api/[output_format]/enrichment?identifiers=  [your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Getting Functional Enrichment — rba_string_enrichment","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting Functional Enrichment — rba_string_enrichment","text":"","code":"# \\donttest{ rba_string_enrichment(ids = c(\"TP53\", \"TNF\", \"EGFR\"), species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"Even annotation input proteins, STRING can Compare   Given proteins interactions pattern background proteome-wide   interaction distribution determine given set proteins   functionally related.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"","code":"rba_string_enrichment_ppi(   ids,   species = NULL,   required_score = NULL,   background = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) required_score Numeric: minimum interaction score interaction included image. supplied, threshold applied STRING Based network. (low Confidence = 150, Medium Confidence = 400, High Confidence = 700, Highest confidence = 900) background character vector: set STRING protein IDs used background proteome. STRING IDs acceptable. (See rba_string_map_ids map IDs.) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"list protein-protein interaction enrichment results.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"\"POST https://string-db.org/api/[output_format]/ppi_enrichment?identifiers=  [your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_enrichment_ppi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Protein-Protein Interaction Enrichment — rba_string_enrichment_ppi","text":"","code":"# \\donttest{ rba_string_enrichment_ppi(ids = c(\"p53\", \"BRCA1\", \"cdk2\", \"Q99835\",        \"CDC42\", \"CDK1\", \"KIF23\", \"PLK1\", \"RAC2\", \"RACGAP1\"),     species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"Using function, can retrieve highest Smith-Waterman bit scores   among input proteins proteins every STRING species   (e.g. closest homologous protein input protein   species).   Bit Scores serve similarity scores protein sequence;   , according STRING documentations, proxy protein homology.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"","code":"rba_string_homology_inter(ids, species = NULL, species_b = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier input proteins; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) species_b (optional) Numeric: one NCBI Taxonomy identifiers species limit closets homologous proteins search. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"data frame input proteins closest homologous   proteins among (defined) STRING species.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"Note function return highest similarity score hits   given protein(s) closets homologous proteins   species. retrieve similarity scores different proteins within   species see rba_string_homology_intra.    Similarity matrix imported -STRING- :   Similarity Matrix   Proteins (SIMAP)","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"\"POST https://string-db.org/api/[output-format]/homology_best?  identifiers=[your_identifiers]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_inter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Similarity Scores Hits of Proteins in Different Species — rba_string_homology_inter","text":"","code":"# \\donttest{ rba_string_homology_inter(ids = \"p53\",     species = 9606,     species_b = 7070) # } # \\donttest{ rba_string_homology_inter(ids = \"ENSP00000269305\", species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"Using function, can retrieve Smith-Waterman bit scores among   proteins species.   Bit Scores serve similarity scores protein sequence;   , according STRING documentations, proxy protein homology.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"","code":"rba_string_homology_intra(ids, species = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"data frame bit scores supplied proteins   self-hit. Reduce transferred data, STRING returns one   half similarity matrix; pose problem   similarity matrix symmetrical.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"Note function retrieve similarity scores different   proteins \"within species\". Get similarity scores given   protein closets homologous proteins species, see   rba_string_homology_inter.    Similarity matrix imported -STRING- :   Similarity Matrix   Proteins (SIMAP)","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"\"POST https://string-db.org/api/[output-format]/homology?identifiers=  [your_identifiers]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_homology_intra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Similarity Scores Hits of Proteins in a Species — rba_string_homology_intra","text":"","code":"# \\donttest{ rba_string_homology_intra(ids = c(\"CDK1\", \"CDK2\"), species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All STRING Interaction Partners — rba_string_interaction_partners","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"function retrieve STRING interactions include   proteins one party interaction. (e.g. interaction   proteins every STRING proteins.)    Given size STRING database, function return   long results. See \"Arguments\" section information filter   interactions.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"","code":"rba_string_interaction_partners(   ids,   species = NULL,   required_score = NULL,   network_type = \"functional\",   limit = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) required_score Numeric: minimum interaction score interaction included image. supplied, threshold applied STRING Based network. (low Confidence = 150, Medium Confidence = 400, High Confidence = 700, Highest confidence = 900) network_type one : \"functional\": (default) edge's indicate physical functional associations. limit Limit number returned interaction partners per input proteins. (e.g. Number confident interaction partner return per input protein.) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"data frame row network interaction   columns contains interactor information interaction scores.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"Note function retrieve interactions input   proteins every STRING proteins. retrieve interaction   among input protein-set, see   rba_string_interactions_network.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"\"POST https://string-db.org/api/[output-format]/  interaction_partners?identifiers=[your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interaction_partners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All STRING Interaction Partners — rba_string_interaction_partners","text":"","code":"# \\donttest{ rba_string_interaction_partners(ids = c(\"9606.ENSP00000269305\",     \"9606.ENSP00000398698\",     \"9606.ENSP00000275493\"),     network_type = \"functional\") # } # \\donttest{     rba_string_interaction_partners(ids = \"9606.ENSP00000269305\",     species = 9606,     required_score = 700) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get STRING Network Interactions — rba_string_interactions_network","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"function retrieve Sting interaction pairs among input protein   ids, combined score separate score STRING score   channels. can expand network defined size   providing \"add_node\" parameter.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"","code":"rba_string_interactions_network(   ids,   species = NULL,   required_score = NULL,   add_nodes = NULL,   network_type = \"functional\",   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"ids protein IDs. strongly recommended supply STRING IDs. See rba_string_map_ids information. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) required_score Numeric: minimum interaction score interaction included image. supplied, threshold applied STRING Based network. (low Confidence = 150, Medium Confidence = 400, High Confidence = 700, Highest confidence = 900) add_nodes Numeric: Number neighboring proteins added network. none supplied user, argument value depend number supplied \"ids\" argument: Single id: add_node set 10 retrieve interaction neighborhood  input protein. Multiple ids: add_node set 0, thus output interactions input proteins. network_type one : \"functional\": (default) edge's indicate physical functional associations. \"physical\": edges indicate two proteins physical interaction parts complex. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"data frame row network interaction   columns contains interactor information interaction scores: stringId_A: STRING identifier (protein ) stringId_B:STRING identifier (protein B) preferredName_A: common protein name (protein ) preferredName_B: common protein name (protein B) ncbiTaxonId: NCBI taxon identifier score: combined score nscore: gene neighborhood score fscore: gene fusion score pscore: phylogenetic profile score ascore: co-expression score escore: experimental score dscore: database score tscore: textmining score","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"Note function return interactions set   supplied proteins, , expand interaction network   given parameters. retrieve list possible interacting proteins   given input, see   rba_string_interaction_partners.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"\"POST https://string-db.org/api/[output-format]/network?identifiers=  [your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_interactions_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get STRING Network Interactions — rba_string_interactions_network","text":"","code":"# \\donttest{ rba_string_interactions_network(ids = c(\"9606.ENSP00000269305\",     \"9606.ENSP00000398698\",     \"9606.ENSP00000275493\"),     network_type = \"functional\") # } # \\donttest{ rba_string_interactions_network(ids = c(\"9606.ENSP00000269305\",     \"9606.ENSP00000398698\",     \"9606.ENSP00000275493\"),     species = 9606,     add_nodes = 10) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"function Calls STRING's API Convert set identifiers   STRING Identifiers. Although can call STRING services variety   common identifiers, recommended STRING's documentations   first map Protein/genes IDs STRING IDs proceed   STRING's functions.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"","code":"rba_string_map_ids(ids, species = NULL, echo_query = FALSE, limit = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"ids Common gene/protein Identifier(s) mapped. species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) echo_query (default = FALSE) Include input IDs column results. limit (Numeric, Optional) limit number matches per input ID. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"data frame mapped STRING IDs pertinent   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"\"POST https://string-db.org/api/[output-format]/get_string_ids?identifiers=  [your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_map_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map a Set of Identifiers to STRING Identifiers — rba_string_map_ids","text":"","code":"# \\donttest{ rba_string_map_ids(ids = c(\"TP53\", \"TNF\", \"EGFR\"), species = 9606) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Get STRING Network Image — rba_string_network_image","title":"Get STRING Network Image — rba_string_network_image","text":"Depending supplied single protein ID one protein   ID, function produce static image interaction networks   among input proteins /proteins. See   \"Arguments\" section learn can modify network   image.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get STRING Network Image — rba_string_network_image","text":"","code":"rba_string_network_image(   ids,   image_format = \"image\",   save_image = TRUE,   species = NULL,   add_color_nodes = NULL,   add_white_nodes = NULL,   required_score = NULL,   network_flavor = \"confidence\",   network_type = \"functional\",   hide_node_labels = FALSE,   hide_disconnected_nodes = FALSE,   hide_structure_pics = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get STRING Network Image — rba_string_network_image","text":"ids protein ID(s). strongly recommended supply STRING IDs. See rba_string_map_ids information. image_format one : \"image\": PNG image normal resolution. \"highres_image\": High-resolution PNG image. \"svg\": Scalable Vector Graphics image. save_image Logical Character: TRUE: Save image automatically-generated path. FALSE: save image, just return R object. Character string: valid file path save image . species Numeric: NCBI Taxonomy identifier; Human Taxonomy ID 9606. (Recommended, optional input less 100 IDs.) add_color_nodes Numeric: number colored nodes (queried proteins first shell interactors) added. add_white_nodes Numeric: number white nodes (second shell interactors) added colored nodes. required_score Numeric: minimum interaction score interaction included image. supplied, threshold applied STRING Based network. (low Confidence = 150, Medium Confidence = 400, High Confidence = 700, Highest confidence = 900) network_flavor style network edges, one : \"confidence\": (default) Line's thickness indicator interaction's confidence score. \"evidence\": Line's color based type evidences support interaction. \"action\": Line's Shape indicator interaction's predicted mode actions. network_type one : \"functional\": (default) edge's indicate physical functional associations. \"physical\": edges indicate two proteins physical interaction parts complex. hide_node_labels Logical: (Default = FALSE) Hide proteins names image? hide_disconnected_nodes Logical: (Default = FALSE) Hide proteins connected proteins image? hide_structure_pics Logical: (Default = FALSE) Hide protein's structure picture inside bubbles? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get STRING Network Image — rba_string_network_image","text":"network images can PNG SVG depending inputs.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get STRING Network Image — rba_string_network_image","text":"\"POST https://string-db.org/api/[output-format]/network?identifiers=  [your_identifiers]&[optional_parameters]\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get STRING Network Image — rba_string_network_image","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_network_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get STRING Network Image — rba_string_network_image","text":"","code":"if (FALSE) { rba_string_network_image(ids = c(\"9606.ENSP00000269305\",     \"9606.ENSP00000398698\",     \"9606.ENSP00000275493\"),     network_type = \"functional\",     save_image = FALSE) } if (FALSE) { rba_string_network_image(ids = c(\"TP53\", \"TNF\", \"EGFR\"),     species = 9606,     save_image = TRUE) } if (FALSE) { rba_string_network_image(ids = \"9606.ENSP00000269305\",     image_format = \"highres_image\",     save_image = file.path(getwd(), \"TP53_network.png\")) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Current STRING Version — rba_string_version","title":"Get Current STRING Version — rba_string_version","text":"Get STRING version stable Address package currently uses.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Current STRING Version — rba_string_version","text":"","code":"rba_string_version(...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Current STRING Version — rba_string_version","text":"... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Current STRING Version — rba_string_version","text":"list STRING version stable address.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Current STRING Version — rba_string_version","text":"Note STRING releases new version approximately 2 years cycle.   Nevertheless, insure reproducibility, STRING dedicates stable address   release. Thus can always reproduce research results   obtained via certain STRING version. version rbioapi returns   outdated, Kindly contact .","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Current STRING Version — rba_string_version","text":"\"GET https://string-db.org/api/[output_format]/version\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Current STRING Version — rba_string_version","text":"Damian Szklarczyk, Annika L Gable, Katerina C Nastou, David Lyon,   Rebecca Kirsch, Sampo Pyysalo, Nadezhda T Doncheva, Marc Legeay, Tao Fang,   Peer Bork, Lars J Jensen, Christian von Mering, STRING database   2021: customizable protein–protein networks, functional   characterization user-uploaded gene/measurement sets, Nucleic Acids   Research, Volume 49, Issue D1, 8 January 2021, Pages D605–D612,   https://doi.org/10.1093/nar/gkaa1074 STRING API Documentation Citations note STRING website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_string_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Current STRING Version — rba_string_version","text":"","code":"# \\donttest{ rba_string_version() # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Antigens by UniProt Accession — rba_uniprot_antigens","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"UniProt maps Antigenic features different sources proteins'   sequences. Using function, can retrieve Antigenic   features map given UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"","code":"rba_uniprot_antigens(accession, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"accession UniProtKB primary secondary accession(s). ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"list containing Antigenic features supplied   UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"\"GET https://www.ebi.ac.uk/proteins/api/antigen/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Antigens by UniProt Accession — rba_uniprot_antigens","text":"","code":"# \\donttest{ rba_uniprot_antigens(\"P04626\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Antigens in UniProt — rba_uniprot_antigens_search","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"UniProt maps Antigenic (Antibody-binding) features different sources   proteins' sequences. Using function, can search   Antigenic sequences map UniProt proteins. may also   refine search modifiers score etc. See   \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"","code":"rba_uniprot_antigens_search(   accession = NULL,   antigen_sequence = NULL,   antigen_id = NULL,   ensembl_id = NULL,   match_score = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. antigen_sequence Protein sequence antigenic site. antigen_id Human Protein Atlas (HPA) antigen ID. can supply 20 IDs. ensembl_id Ensembl Stable Transcript ID. can supply 20 IDs. match_score (Numeric) Minimum alignment score antigen sequence target protein sequence. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"list element correspond UniProt protein (search  hit) Antigenic features organized \"features\" sub-list.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/antigen\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_antigens_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Antigens in UniProt — rba_uniprot_antigens_search","text":"","code":"# \\donttest{ rba_uniprot_antigens_search(antigen_id = \"HPA001060\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"Using function can retrieve genomic Coordinates Protein   either providing protein's UniProt accession ID   cross-reference database (Ensembl, CCDC, HGNC RefSeq).   supply either 'accession' alone 'db_type' 'db_id' together.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"","code":"rba_uniprot_coordinates(accession = NULL, db_type = NULL, db_id = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"accession UniProtKB primary secondary accession. db_type cross-reference database name, one : \"Ensembl\", \"CCDC\", \"HGNC\" \"RefSeq\". db_id Protein's ID cross-reference database ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"list genome coordinates supplied protein.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"information UniProt imports calculates genomic   coordinates data, see:    McGarvey, P. B., Nightingale, ., Luo, J., Huang, H., Martin, M. J.,   Wu, C., & UniProt Consortium (2019). UniProt genomic mapping   deciphering functional effects missense variants. Human mutation,   40(6), 694–705. https://doi.org/10.1002/humu.23738","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"\"GET https://ebi.ac.uk/proteins/api/coordinates/accession\"   \"GET https://ebi.ac.uk/proteins/api/coordinates/dbtype:dbid\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Genomic Coordinates of a Protein — rba_uniprot_coordinates","text":"","code":"# \\donttest{ rba_uniprot_coordinates(accession = \"P25942\") # } # \\donttest{ rba_uniprot_coordinates(db_type = \"HGNC\", db_id = \"CD40\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"information UniProt imports calculates genomic   coordinates data, see:    McGarvey, P. B., Nightingale, ., Luo, J., Huang, H., Martin, M. J.,   Wu, C., & UniProt Consortium (2019). UniProt genomic mapping   deciphering functional effects missense variants. Human mutation,   40(6), 694–705. https://doi.org/10.1002/humu.23738","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"","code":"rba_uniprot_coordinates_location(   taxid,   locations,   in_range = TRUE,   feature = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"taxid NIH-NCBI Taxon ID. locations genomic location formatted : chromosome:start-end. (e.g. \"Y:17100001-19600000\"). omit chromosome, interpreted chromosome (e.g. \"1-10000\"). in_range return proteins range. feature (logical) Get features? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"list containing UniProt proteins match supplied genomic   location taxonomy ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"\"GET https://ebi.ac.uk/proteins/api/coordinates/taxonomy/locations/feature\"   \"GET https://ebi.ac.uk/proteins/api/coordinates/taxonomy/locations\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search UniProt entries by taxonomy and genomic coordinates — rba_uniprot_coordinates_location","text":"","code":"# \\donttest{ rba_uniprot_coordinates_location(taxid = 9606,     locations = \"Y:17100001-19600000\", in_range = TRUE) # } # \\donttest{ rba_uniprot_coordinates_location(taxid = 9606,     locations = \"20:39000001\", in_range = FALSE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"Use function search genomic coordinates UniProt entries.   may also refine search modifiers chromosome, taxon   id etc. See \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"","code":"rba_uniprot_coordinates_search(   accession = NULL,   chromosome = NULL,   ensembl_id = NULL,   gene = NULL,   protein = NULL,   taxid = NULL,   location = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. chromosome chromosome name, \"X\", \"Y\", 1, 20, etc. can supply 20 values. ensembl_id Ensembl Stable gene ID, transcript ID translation ID. can supply 20 IDs. gene UniProt gene name(s). can supply 20 gene names. protein UniProt protein name taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. location Genome location range \"58205437-58219305\" ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"List element corresponds one UniProt entity returned   search query. element sub-list containing   protein's coordinates information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    information UniProt imports calculates genomic   coordinates data, see:    McGarvey, P. B., Nightingale, ., Luo, J., Huang, H., Martin, M. J.,   Wu, C., & UniProt Consortium (2019). UniProt genomic mapping   deciphering functional effects missense variants. Human mutation,   40(6), 694–705. https://doi.org/10.1002/humu.23738","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"\"GET https://ebi.ac.uk/proteins/api/coordinates\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Genomic Coordinates of UniProt entries — rba_uniprot_coordinates_search","text":"","code":"# \\donttest{ rba_uniprot_coordinates_search(taxid = 9606, chromosome = \"y\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"Using function can retrieve genome coordinates given UniProt   protein providing protein position position range. can either   supply 'p_position' alone supply 'p_start' 'p_end' together.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"","code":"rba_uniprot_coordinates_sequence(   accession,   p_position = NULL,   p_start = NULL,   p_end = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"accession UniProtKB primary secondary accession. p_position (numeric) Protein sequence position p_start (numeric) Protein sequence position start p_end (numeric) Protein sequence position end ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"Genome coordinates supplied proteins.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"information UniProt imports calculates genomic   coordinates data, see:    McGarvey, P. B., Nightingale, ., Luo, J., Huang, H., Martin, M. J.,   Wu, C., & UniProt Consortium (2019). UniProt genomic mapping   deciphering functional effects missense variants. Human mutation,   40(6), 694–705. https://doi.org/10.1002/humu.23738","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"\"GET https://ebi.ac.uk/proteins/api/coordinates/location/accession:pPosition\"   \"GET https://ebi.ac.uk/proteins/api/coordinates/location/accession:pStart-pEnd\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_coordinates_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Genome coordinate by Protein Sequence position — rba_uniprot_coordinates_sequence","text":"","code":"# \\donttest{ rba_uniprot_coordinates_sequence(accession = \"P25942\", p_position = 1) # } # \\donttest{ rba_uniprot_coordinates_sequence(accession = \"P25942\",     p_start = 1, p_end = 277) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniProt protein sequence features by accession — rba_uniprot_features","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"Use function retrieve sequence annotations   (features) protein UniProt accession.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"","code":"rba_uniprot_features(accession, types = NULL, categories = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"accession UniProtKB primary secondary accession. types Sequence annotation (Features) types. accepted values : \"INIT_MET\", \"SIGNAL\", \"PROPEP\", \"TRANSIT\", \"CHAIN\", \"PEPTIDE\", \"TOPO_DOM\", \"TRANSMEM\", \"DOMAIN\", \"REPEAT\", \"CA_BIND\", \"ZN_FING\", \"DNA_BIND\", \"NP_BIND\", \"REGION\", \"COILED\", \"MOTIF\", \"COMPBIAS\", \"ACT_SITE\", \"METAL\", \"BINDING\", \"SITE\", \"NON_STD\", \"MOD_RES\", \"LIPID\", \"CARBOHYD\", \"DISULFID\", \"CROSSLNK\", \"VAR_SEQ\", \"VARIANT\", \"MUTAGEN\", \"UNSURE\", \"CONFLICT\", \"NON_CONS\", \"NON_TER\", \"HELIX\", \"TURN\", \"STRAND\" /\"INTRAMEM\". can supply 20 types. categories Sequence annotation (Features) categories (subsection). accepted values : \"MOLECULE_PROCESSING\", \"TOPOLOGY\", \"SEQUENCE_INFORMATION\", \"STRUCTURAL\", \"DOMAINS_AND_SITES\", \"PTM\", \"VARIANTS\" /\"MUTAGENESIS\". can supply 8 categories. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"list can find given protein's sequence   annotations sub-list named \"features\".","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"\"GET https://www.ebi.ac.uk/proteins/api/features/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniProt protein sequence features by accession — rba_uniprot_features","text":"","code":"# \\donttest{ rba_uniprot_features(\"Q99616\") # } # \\donttest{ rba_uniprot_features(accession = \"Q99616\", types = \"DISULFID\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":null,"dir":"Reference","previous_headings":"","what":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    UniProt Entries grouped two sections: Reviewed(Swiss-Prot): Manually annotated records information   extracted literature curator-evaluated computational analysis. Unreviewed (TrEMBL): Computationally analyzed records await   full manual annotation.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"","code":"rba_uniprot_features_search(   accession = NULL,   gene = NULL,   exact_gene = NULL,   protein = NULL,   reviewed = NULL,   organism = NULL,   taxid = NULL,   categories = NULL,   types = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. gene UniProt gene name(s). can supply 20 gene names. e.g. supply \"CD40\", \"CD40 ligand\" also included. exact_gene UniProt exact gene name(s). can supply 20 exact gene names. e.g. supply \"CD40\", \"CD40 ligand\" included results. protein UniProt protein name reviewed Logical: TRUE, return \"UniProtKB/Swiss-Prot\" (reviewed) entries; FALSE, return TrEMBL (un-reviewed) entries. organism Organism name. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. categories Sequence annotation (Features) categories (subsection). accepted values : \"MOLECULE_PROCESSING\", \"TOPOLOGY\", \"SEQUENCE_INFORMATION\", \"STRUCTURAL\", \"DOMAINS_AND_SITES\", \"PTM\", \"VARIANTS\" /\"MUTAGENESIS\". can supply 8 categories. types Sequence annotation (Features) types. accepted values : \"INIT_MET\", \"SIGNAL\", \"PROPEP\", \"TRANSIT\", \"CHAIN\", \"PEPTIDE\", \"TOPO_DOM\", \"TRANSMEM\", \"DOMAIN\", \"REPEAT\", \"CA_BIND\", \"ZN_FING\", \"DNA_BIND\", \"NP_BIND\", \"REGION\", \"COILED\", \"MOTIF\", \"COMPBIAS\", \"ACT_SITE\", \"METAL\", \"BINDING\", \"SITE\", \"NON_STD\", \"MOD_RES\", \"LIPID\", \"CARBOHYD\", \"DISULFID\", \"CROSSLNK\", \"VAR_SEQ\", \"VARIANT\", \"MUTAGEN\", \"UNSURE\", \"CONFLICT\", \"NON_CONS\", \"NON_TER\", \"HELIX\", \"TURN\", \"STRAND\" /\"INTRAMEM\". can supply 20 types. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"List element corresponds one UniProt entity returned   search query. element sub-list containing   information UniProt entity.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/features\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_features_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UniProt maintains \n  sequence annotations (features) that describe regions\n  in the protein sequence. Using this function, you can search and\n  retrieve UniProt proteins' sequence annotations (features). you may also\n  refine your search query with variety of modifiers. — rba_uniprot_features_search","text":"","code":"# \\donttest{ rba_uniprot_features_search(accession = \"Q99616\") # } # \\donttest{ rba_uniprot_features_search(gene = \"cd40\") # } # \\donttest{ rba_uniprot_features_search(gene = \"cd40 ligand\") # } # \\donttest{ rba_uniprot_features_search(gene = \"cd40\",  reviewed = TRUE) # } # \\donttest{ rba_uniprot_features_search(accession = \"Q99616\",     categories = c(\"MOLECULE_PROCESSING\", \"TOPOLOGY\")) # } # \\donttest{ rba_uniprot_features_search(accession = \"Q99616\", types = \"DISULFID\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"Using function can retrieve gene-centrics data.   information, see   proteomes?   Automatic   gene-centric isoform mapping eukaryotic reference proteome entries..","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"","code":"rba_uniprot_genecentric(accession, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"accession UniProtKB primary secondary accession. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"list containing information Gene-Centric proteins.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"\"GET https://ebi.ac.uk/proteins/api/genecentric/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene-Centric proteins by UniProt Accession — rba_uniprot_genecentric","text":"","code":"# \\donttest{ rba_uniprot_genecentric(\"P29965\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"Using function can search UniProt available gene-centrics   proteomes. information,   see proteomes?   Automatic   gene-centric isoform mapping eukaryotic reference proteome entries.   may also refine search modifiers upid, accession gene.   See \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"","code":"rba_uniprot_genecentric_search(upid = NULL, accession = NULL, gene = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. gene unique gene identifier(s) found MOD, Ensembl, Ensembl Genomes, OLN, ORF UniProt Gene Name. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"list containing gene-centric proteins search hits.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"\"GET https://ebi.ac.uk/proteins/api/genecentric\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_genecentric_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Gene-Centric Proteins — rba_uniprot_genecentric_search","text":"","code":"# \\donttest{ rba_uniprot_genecentric_search(accession = \"P59594\") # } # \\donttest{ rba_uniprot_genecentric_search(gene = \"Spike\") # } # \\donttest{ rba_uniprot_genecentric_search(upid = \"UP000000354\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"UniProt describes effects mutations proteins' amino acid   sequence biological properties protein, cell   organism. Using function, can get      Mutagenesis description mapped given UniProt protein.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"","code":"rba_uniprot_mutagenesis(accession, location = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"accession UniProtKB primary secondary accession(s). location valid amino acid range (e.g. 10-25) within sequence range given proein. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"list containing mutagenesis description supplied   UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"\"GET https://www.ebi.ac.uk/proteins/api/mutagenesis/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mutagenesis by UniProt Accession — rba_uniprot_mutagenesis","text":"","code":"# \\donttest{ rba_uniprot_mutagenesis(accession = \"P0DTC2\", location = \"300-400\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"UniProt describes effects mutations proteins' amino acid   sequence biological properties protein, cell   organism. Using function, can search      mutagenesis description UniProt proteins.   may also refine search. See \"Arguments section\"   information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"","code":"rba_uniprot_mutagenesis_search(   accession = NULL,   taxid = NULL,   db_id = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. db_id ID Cross-reference (external) database. can supply 20 values. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"list element correspond UniProt protein (search  hit) mutagenesis description organized  \"features\" sub-list.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/mutagenesis\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_mutagenesis_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Mutagenesis in UniProt — rba_uniprot_mutagenesis_search","text":"","code":"# \\donttest{ #search all mutations in COVID19 proteins rba_uniprot_mutagenesis_search(taxid = 2697049) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniProt entry by accession — rba_uniprot_proteins","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"Use function retrieve UniProt Entry UniProt accession.   can also use \"isoform\" \"interaction\" arguments retrieve   isoforms interactor proteins entry. Note one function   call can set none one \"isoform\" \"interaction\"   TRUE, .","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"","code":"rba_uniprot_proteins(accession, interaction = FALSE, isoforms = FALSE, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"accession UniProtKB primary secondary accession. interaction Logical: (default = FALSE) retrieve interaction information supplied UniProt entity? isoforms Logical: (default = FALSE) retrieve isoforms supplied UniProt entity? ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"list contains UniProt protein informations   supplied accession.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"\"GET https://ebi.ac.uk/proteins/api/proteins/accession\"   \"GET https://ebi.ac.uk/proteins/api/proteins/interaction/accession\"   \"GET https://ebi.ac.uk/proteins/api/proteins/accession/isoforms\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniProt entry by accession — rba_uniprot_proteins","text":"","code":"# \\donttest{ rba_uniprot_proteins(accession = \"P01730\") # } # \\donttest{ rba_uniprot_proteins(accession = \"P01730\", interaction = TRUE) # } # \\donttest{ rba_uniprot_proteins(accession = \"Q29983\", isoforms = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"UniProt Cross-Reference links   protein Entities cross-reference (external) databases. Using   function, can retrieve UniProt entity using external database name   protein ID database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"","code":"rba_uniprot_proteins_crossref(   db_id,   db_name,   reviewed = NULL,   isoform = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"db_id protein ID cross-reference (external) database. db_name cross-reference (external database) name. reviewed Logical: (Optional) TRUE, returns \"UniProtKB/Swiss-Prot\" (reviewed) entries; FALSE, returns TrEMBL (un-reviewed) entries. isoform Numeric: (Optional) two options: 0: Exclude isoforms. 1: Return isoforms . see: Alternative products ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"List element UniProt entity correspond   supplied cross-reference database name ID.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteins/dbtype:dbid\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_crossref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniProt Entry by UniProt Cross-Reference Database and ID — rba_uniprot_proteins_crossref","text":"","code":"# \\donttest{ rba_uniprot_proteins_crossref(\"cd40\", \"hgnc\") # } # \\donttest{ rba_uniprot_proteins_crossref(\"cd40\", \"hgnc\", reviewed = TRUE) # } # \\donttest{ rba_uniprot_proteins_crossref(\"mica\", \"hgnc\", isoform = 0) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search UniProt entries — rba_uniprot_proteins_search","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"Using function, can search retrieve UniProt Knowledge-base   (UniProtKB) protein entries using variety options. may also   refine search modifiers sequence length, review status   etc. See \"Arguments\" section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"","code":"rba_uniprot_proteins_search(   accession = NULL,   reviewed = NULL,   isoform = NULL,   go_term = NULL,   keyword = NULL,   ec = NULL,   gene = NULL,   exact_gene = NULL,   protein = NULL,   organism = NULL,   taxid = NULL,   pubmed = NULL,   seq_length = NULL,   md5 = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. reviewed Logical: TRUE, return \"UniProtKB/Swiss-Prot\" (reviewed) entries; FALSE, return TrEMBL (un-reviewed) entries. isoform Numeric: three options: 0: Exclude isoforms. 1: Return isoforms . 2: Return . see: Alternative products go_term Limit search entries associated supplied GO (Gene Ontology) term. can supply Either GO ID character string -partially fully- matching term. e.g. \"GO:0001776\" \"leukocyte homeostasis\". supply \"leukocyte\", term containing word included, e.g \"leukocyte chemotaxis\", \"leukocyte activation\". keyword Limit search entries contain supplied keyword. see: UniProt Keywords ec EC (Enzyme Commission) number(s). can supply 20 EC numbers. gene UniProt gene name(s). can supply 20 gene names. e.g. supply \"CD40\", \"CD40 ligand\" also included. exact_gene UniProt exact gene name(s). can supply 20 exact gene names. e.g. supply \"CD40\", \"CD40 ligand\" included results. protein UniProt protein name organism Organism name. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. pubmed Entries cite article supplied PubMed ID. seq_length exact sequence length (e.g. 150) range sequence lengths (e.g. \"130-158\"). md5 Sequence md5 value. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"List element corresponds one UniProt entity returned   search query. element sub-list containing   information UniProt entity.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.s    UniProt Entries grouped two sections: Reviewed(Swiss-Prot): Manually annotated records information   extracted literature curator-evaluated computational analysis. Unreviewed (TrEMBL): Computationally analyzed records await   full manual annotation.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteins\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteins_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search UniProt entries — rba_uniprot_proteins_search","text":"","code":"# \\donttest{ rba_uniprot_proteins_search(accession = \"Q99616\") # } # \\donttest{ rba_uniprot_proteins_search(gene = \"cd40\") # } # \\donttest{ rba_uniprot_proteins_search(gene = \"cd40 ligand\") # } # \\donttest{ rba_uniprot_proteins_search(gene = \"cd40\",  reviewed = TRUE) # } # \\donttest{ rba_uniprot_proteins_search(gene = \"cd40\",  reviewed = TRUE, isoform = 1) # } # \\donttest{ rba_uniprot_proteins_search(keyword = \"Inhibition of host chemokines by virus\") # } # \\donttest{ rba_uniprot_proteins_search(keyword = \"chemokines\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"UniProt collects annotates proteomes(Protein sets expressed   organism). Using function can search UniProt available   proteomes. see   proteomes? information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"","code":"rba_uniprot_proteomes(upid, get_proteins = FALSE, reviewed = NULL, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. get_proteins logical: set FALSE (default) return information proteome supplied UPID, set TRUE also return proteins  supplied proteome UPID. reviewed Logical:  considered get_proteins TRUE. TRUE, return \"UniProtKB/Swiss-Prot\" (reviewed) proteins; FALSE, return TrEMBL (un-reviewed) entries. leave NULL want filter proteins based review status. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"list containing information proteome supplied   UPID can contain proteomes protein entries based value   get_proteins argument.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"\"GET https://ebi.ac.uk/proteins/api/proteomes/proteins/upid\"   \"GET https://ebi.ac.uk/proteins/api/proteomes/upid\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get proteome by proteome/proteins UPID — rba_uniprot_proteomes","text":"","code":"# \\donttest{ rba_uniprot_proteomes(upid = \"UP000000354\") # } # \\donttest{ rba_uniprot_proteomes(upid = \"UP000000354\", get_proteins = TRUE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"UniProt collects annotates proteomes (Protein sets expressed   organism). Using function can search UniProt available   proteomes. see   proteomes? information. may also   refine search modifiers keyword, taxon id etc. See   \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"","code":"rba_uniprot_proteomes_search(   name = NULL,   upid = NULL,   taxid = NULL,   keyword = NULL,   xref = NULL,   genome_acc = NULL,   is_ref_proteome = NULL,   is_redundant = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"name keyword proteome's name upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. keyword Limit search entries contain supplied keyword. see: UniProt Keywords xref Proteome cross-references Genome assembly ID Biosample ID. can supply 20 cross-reference IDs. genome_acc Genome accession associated proteome's components. is_ref_proteome (logical) TRUE, return reference proteomes; FALSE, returns non-reference proteomes; NULL (default), results filtered criteria see 'reference proteomes?' information. is_redundant (logical) TRUE, return redundant proteomes; FALSE, returns non-redundant proteomes; NULL (default), results filtered redundancy. see 'Reducing proteome redundancy' information. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"list element list corresponds single   proteome (search hit) contains informations pertinent proteome.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"\"GET https://ebi.ac.uk/proteins/api/proteomes\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomes_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Proteomes in UniProt — rba_uniprot_proteomes_search","text":"","code":"# \\donttest{ rba_uniprot_proteomes_search(name = \"SARS-CoV\") # } # \\donttest{ rba_uniprot_proteomes_search(name = \"SARS-CoV\", is_ref_proteome = TRUE) # } # \\donttest{ rba_uniprot_proteomes_search(name = \"SARS-CoV\", is_ref_proteome = TRUE) # } # \\donttest{ rba_uniprot_proteomes_search(genome_acc = \"AY274119\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"UniProt maps proteomics peptides different sources proteins'   sequences. Using function, can retrieve proteomics   peptides features map given UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"","code":"rba_uniprot_proteomics(accession, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"accession UniProtKB primary secondary accession. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"list containing proteomics peptides features supplied   UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteomics/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Proteomics Peptides Mapped to UniProt Protein — rba_uniprot_proteomics","text":"","code":"# \\donttest{ rba_uniprot_proteomics(accession = \"P25942\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"UniProt maps proteomics peptides different sources proteins'   sequences. Using function, can search  proteomics   peptides map UniProt proteins. may also refine   search modifiers data_source, peptide etc. See   \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"","code":"rba_uniprot_proteomics_search(   accession = NULL,   data_source = NULL,   taxid = NULL,   upid = NULL,   peptide = NULL,   unique = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. data_source Proteomics data source. can choose two : \"MaxQB\" \"PeptideAtlas\" \"EPD\" \"ProteomicsDB\" taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. peptide Peptide sequence(s). can supply 20 sequences. unique Logical: results filtered based Peptide's uniqueness (fact peptide maps 1 protein). TRUE, unique peptides returned, FALSE un-unique peptides returned; NULL (default) results filtered based . ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"list element correspond UniProt protein   proteomics peptides organized \"features\" sub-list.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    see also: Mass   spectrometry-based proteomics data UniProtKB","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteomics\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_proteomics_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Proteomics Peptides in UniProt — rba_uniprot_proteomics_search","text":"","code":"# \\donttest{ rba_uniprot_proteomics_search(peptide = \"MEDYTKIEK\") # } # \\donttest{ rba_uniprot_proteomics_search(peptide = \"MEDYTKIEK\") # } if (FALSE) { ### this will generate a very large response!   rba_uniprot_proteomics_search(taxid = 9606,   data_source = \"PeptideAtlas\",   progress = TRUE, timeout = 999999, unique = TRUE) }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"UniProt maps post-translational modification features different sources   proteins'  sequences. Using function, can retrieve   post-translational modification features map given   UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"","code":"rba_uniprot_ptm(accession, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"accession UniProtKB primary secondary accession. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"list containing post-translational modification features supplied UniProt protein's sequence.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"see also:   PTM /   Processing section UniProtKB","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteomics-ptm/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Post-Translational Modification of UniProt Protein — rba_uniprot_ptm","text":"","code":"# \\donttest{ rba_uniprot_ptm(accession = \"P04234\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"UniProt maps proteomics peptides different sources proteins'   sequences. Using function, can search  proteomics   peptides map UniProt proteins. may also refine   search modifiers data_source, peptide etc. See   \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"","code":"rba_uniprot_ptm_search(   accession = NULL,   ptm = NULL,   data_source = NULL,   taxid = NULL,   upid = NULL,   peptide = NULL,   unique = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. ptm Post-translational modification name data_source Proteomics data source. can choose two : \"MaxQB\" \"PeptideAtlas\" \"EPD\" \"ProteomicsDB\" taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. peptide Peptide sequence(s). can supply 20 sequences. unique Logical: results filtered based Peptide's uniqueness (fact peptide maps 1 protein). TRUE, unique peptides returned, FALSE un-unique peptides returned; NULL (default) results filtered based . ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"list element correspond UniProt protein   post-translational modification organized \"features\"   sub-list.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.    see also:   PTM /   Processing section UniProtKB","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/proteomics-ptm\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_ptm_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Post-Translational Modification in UniProt — rba_uniprot_ptm_search","text":"","code":"# \\donttest{ rba_uniprot_ptm_search(peptide = \"NDQVYQPLRDRDDAQYSHLGGNWAR\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"Using function, can retrieve taxonomic nodes information providing NCBI taxonomic   identifiers. also, can explicitly retrieve nodes relation   supplied node's hierarchy   UniProt Taxonomy database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"","code":"rba_uniprot_taxonomy(   ids,   hierarchy = NULL,   node_only = TRUE,   page_size = 200,   page_number = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"ids (numeric) single numeric vector NCBI taxonomic identifier(s) hierarchy Retrieve taxonomic nodes specific hierarchical relation supplied taxonomic node. one : \"children\", \"parent\" \"siblings\". node_only Retrieve node(s) information exclude URL links parents, siblings children nodes. page_size (numeric) hierarchy supplied. hierarchy information may long, thus UniProt API paginate results, may use argument control pagination. maximum value 200. page_number (numeric) hierarchy supplied. hierarchy information may long, thus UniProt API paginate results, may use argument control pagination. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"list containing supplied nodes related nodes   taxonomic information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"\"GET https://ebi.ac.uk/proteins/api/ids/ids\"   \"GET https://ebi.ac.uk/proteins/api/ids//id/id/node\"   \"GET https://ebi.ac.uk/proteins/api/id/id/node\"   \"GET https://ebi.ac.uk/proteins/api/id/id/children\"   \"GET https://ebi.ac.uk/proteins/api/id/id/children/node\"   \"GET https://ebi.ac.uk/proteins/api/id/id/parent\"   \"GET https://ebi.ac.uk/proteins/api/id/id/parent/node\"   \"GET https://ebi.ac.uk/proteins/api/id/id/siblings\"   \"GET https://ebi.ac.uk/proteins/api/id/id/siblings/node\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniProt Taxonomy Nodes — rba_uniprot_taxonomy","text":"","code":"# \\donttest{ rba_uniprot_taxonomy(ids = c(9606, 10090)) # } # \\donttest{ rba_uniprot_taxonomy(ids = 9989, hierarchy = \"children\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"Use function retrieve lowest common ancestor (LCA) two  taxonomy nodes  UniProt Taxonomy database","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"","code":"rba_uniprot_taxonomy_lca(ids, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"ids (numeric) Numeric vector NCBI taxonomic identifiers, minimum length two. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"list UniProt taxonomy information supplied taxonomy   elements.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"\"GET https://ebi.ac.uk/proteins/api/ancestor/ids\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Lowest Common Ancestor (LCA) of Two Taxonomy Nodes — rba_uniprot_taxonomy_lca","text":"","code":"# \\donttest{ rba_uniprot_taxonomy_lca(c(9606,10090,9823,7712)) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"Use function retrieve taxonomic lineage supplied   taxonomy node.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"","code":"rba_uniprot_taxonomy_lineage(id, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"id (numeric) NCBI taxonomic   identifier ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"list data frame containing nodes preceded   supplied node taxonomic tree. node first row   root node last row.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"\"GET https://ebi.ac.uk/proteins/api/lineage/id\"   \"GET https://ebi.ac.uk/proteins/api/lineage/id\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_lineage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Taxonomic Lineage — rba_uniprot_taxonomy_lineage","text":"","code":"# \\donttest{ rba_uniprot_taxonomy_lineage(id = 9989) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"Using function, can search retrieve taxonomic nodes using   names   UniProt Taxonomy database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"","code":"rba_uniprot_taxonomy_name(   name,   field = \"scientific\",   search_type = \"equal_to\",   node_only = TRUE,   page_size = 200,   page_number = 1,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"name name used search query. field Specify field supplied name searched. one : \"scientific\" (default), \"common\" \"mnemonic\". search_type logical relationship supplied search query taxonomic name field. one \"equal_to\" (default), \"start_with\", \"end_with\" \"contain\". node_only (logical) Retrieve node(s) information exclude URL links parents, siblings children nodes. default = TRUE page_size (numeric) search results may long, thus UniProt API paginate results, may use argument control pagination. maximum value 200. page_number (numeric) search results may long, thus UniProt API paginate results, may use argument control pagination. maximum value 200. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"list containing taxonomic nodes match supplied inputs.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"\"GET https://ebi.ac.uk/proteins/api/name/name\"   \"GET https://ebi.ac.uk/proteins/api/name/name/node\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search UniProt Taxonomic Names — rba_uniprot_taxonomy_name","text":"","code":"# \\donttest{ rba_uniprot_taxonomy_name(name = \"homo\", field = \"scientific\",     search_type = \"start_with\") # } # \\donttest{ rba_uniprot_taxonomy_name(name = \"adenovirus\", field = \"scientific\",     search_type = \"contain\", page_size = 200, page_number = 2) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"Using function can retrieve nodes located top   bottom supplied node   UniProt Taxonomy database tree","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"","code":"rba_uniprot_taxonomy_path(id, direction, depth = 5, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"id (numeric) NCBI taxonomic   identifier direction direction taxonomic path, either \"TOP\" \"BOTTOM\". depth (numeric) many levels traversed taxonomic tree? (1 5, default = 5) ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"nested list containing node path specified   supplied argument UniProt taxonomic tree.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"\"GET https://ebi.ac.uk/proteins/api/path\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Traverse UniProt Taxonomic Tree Path — rba_uniprot_taxonomy_path","text":"","code":"# \\donttest{ rba_uniprot_taxonomy_path(id = 9606, direction = \"TOP\", depth = 3) # } # \\donttest{ rba_uniprot_taxonomy_path(id = 207598, direction = \"BOTTOM\", depth = 3) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"Use function retrieve shortest path two nodes taxonomy tree UniProt Taxonomy database.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"","code":"rba_uniprot_taxonomy_relationship(from, to, ...)"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"NCBI taxonomic identifier initial node. NCBI taxonomic identifier final node. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"nested list containing node shortest path   supplied nodes.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"\"GET https://ebi.ac.uk/proteins/api/relationship\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_taxonomy_relationship.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Shortest Path Between Two Taxonomy Nodes — rba_uniprot_taxonomy_relationship","text":"","code":"# \\donttest{ rba_uniprot_taxonomy_relationship(from = 9606, to = 10090) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniParc entry — rba_uniprot_uniparc","title":"Get UniParc entry — rba_uniprot_uniparc","text":"Use function retrieve UniParc entries. can use either -  one - UniProt accession, Cross-reference database id, UniParc ID   UniProt Proteome UPID. can also filter returned content   returned UniParc entry. see \"Argument\" section details.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniParc entry — rba_uniprot_uniparc","text":"","code":"rba_uniprot_uniparc(   upi = NULL,   accession = NULL,   db_id = NULL,   upid = NULL,   rf_dd_type = NULL,   rf_db_id = NULL,   rf_active = NULL,   rf_tax_id = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniParc entry — rba_uniprot_uniparc","text":"upi unique UniParc Identifier. accession UniProtKB primary secondary accession. db_id Protein ID cross-reference (external) database. upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. rf_dd_type Filter content UniParc entry cross-reference names. can supply multiple values. rf_db_id Filter content UniParc entry protein identifiers cross-reference database. can supply multiple values. rf_active (logical ) Filter content UniParc entry based active status source database: NULL: (default) filter contents based active status. TRUE: return contents still active. FALSE: return contents active. rf_tax_id (Numeric) Filter content UniParc entry NIH-NCBI Taxon ID. can supply multiple values. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniParc entry — rba_uniprot_uniparc","text":"list correspond UniParc entry.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniParc entry — rba_uniprot_uniparc","text":"\"GET https://ebi.ac.uk/proteins/api/uniparc/accession/accession \"   \"GET https://ebi.ac.uk/proteins/api/uniparc/dbreference/dbid\"   \"GET https://ebi.ac.uk/proteins/api/uniparc/proteome/upid\"   \"GET https://ebi.ac.uk/proteins/api/uniparc/upi/upi\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniParc entry — rba_uniprot_uniparc","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniParc entry — rba_uniprot_uniparc","text":"","code":"# \\donttest{ rba_uniprot_uniparc(upi = \"UPI00000000C9\") # } # \\donttest{ rba_uniprot_uniparc(upi = \"UPI00000000C9\") # } # \\donttest{ rba_uniprot_uniparc(upi = \"UPI00000000C9\", rf_active = FALSE) # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"function returns UniParc Entry cross-reference   longest active UniProtKB sequence (preferably Swiss-Prot   TrEMBL). finds one longest active UniProtKB sequence   returns 400 (Bad Request) error response list cross   references found.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"","code":"rba_uniprot_uniparc_bestguess(   upi = NULL,   accession = NULL,   db_id = NULL,   gene = NULL,   taxid = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"upi unique UniParc Identifier. accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. db_id Protein ID cross-reference (external) database. can supply 100 IDs. gene UniProt gene name(s). can supply 20 gene names. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"list element correspond UniParc entry.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"\"GET https://ebi.ac.uk/proteins/api/uniparc/bestguess\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_bestguess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniParc Longest Sequence for Entries — rba_uniprot_uniparc_bestguess","text":"","code":"# \\donttest{ rba_uniprot_uniparc_bestguess(\"UPI00000000C9\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search UniParc Entries — rba_uniprot_uniparc_search","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"Use function search   UniProt Archive (UniParc)   entries.may also refine search modifiers sequence   length, taxon id etc. See \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"","code":"rba_uniprot_uniparc_search(   upi = NULL,   accession = NULL,   db_type = NULL,   db_id = NULL,   gene = NULL,   protein = NULL,   taxid = NULL,   organism = NULL,   sequence_checksum = NULL,   ipr = NULL,   signature_db = NULL,   signature_id = NULL,   upid = NULL,   seq_length = NULL,   rf_dd_type = NULL,   rf_db_id = NULL,   rf_active = NULL,   rf_tax_id = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"upi unique UniParc Identifier(s). can supply 100 IDs. accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. db_type cross-reference (external database) name. db_id Protein ID cross-reference (external) database. can supply 100 IDs. gene UniProt gene name(s). can supply 20 gene names. protein UniProt protein name. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. organism Organism name. sequence_checksum Sequence CRC64 checksum. ipr InterPro identifier(s). can supply 20 IDs. signature_db InterPro's signature database. can supply 13 following values:  \"CATH\", \"CDD\", \"HAMAP\", \"MobiDB Lite\", \"Panther\", \"Pfam\", \"PIRSF\", \"PRINTS\", \"Prosite\", \"SFLD\", \"SMART\", \"SUPERFAMILY\" /\"TIGRfams\" signature_id Signature ID InterPro's signature database. can supply 20 IDs. upid UniProt Proteome identifier (UPID). can supply 100 UPIDs. seq_length exact sequence length (e.g. 150) range sequence lengths (e.g. \"130-158\"). rf_dd_type Filter content UniParc entry cross-reference names. can supply multiple values. rf_db_id Filter content UniParc entry protein identifiers cross-reference database. can supply multiple values. rf_active (logical ) Filter content UniParc entry based active status source database: NULL: (default) filter contents based active status. TRUE: return contents still active. FALSE: return contents active. rf_tax_id (Numeric) Filter content UniParc entry NIH-NCBI Taxon ID. can supply multiple values. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"List element corresponds one UniParc entry returned   search query. element sub-list containing sequence   information reference entries.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"\"GET https://ebi.ac.uk/proteins/api/uniparc\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search UniParc Entries — rba_uniprot_uniparc_search","text":"","code":"# \\donttest{ rba_uniprot_uniparc_search(upi = \"UPI00000000C9\") # } # \\donttest{ rba_uniprot_uniparc_search(accession = \"P30914\") # } # \\donttest{ rba_uniprot_uniparc_search(accession = \"P30914\", rf_active = TRUE) # } # \\donttest{ rba_uniprot_uniparc_search(taxid = \"694009\", protein = \"Nucleoprotein\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"Retrieve UniParc Entry providing exact sequence. Note partial   matches accepted. can also filter returned content   returned UniParc entry. see \"Argument\" section details.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"","code":"rba_uniprot_uniparc_sequence(   sequence,   rf_dd_type = NULL,   rf_db_id = NULL,   rf_active = NULL,   rf_tax_id = NULL,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"sequence Exact UniParc protein sequence. Partial matches accepted. rf_dd_type Filter content UniParc entry cross-reference names. can supply multiple values. rf_db_id Filter content UniParc entry protein identifiers cross-reference database. can supply multiple values. rf_active (logical ) Filter content UniParc entry based active status source database: NULL: (default) filter contents based active status. TRUE: return contents still active. FALSE: return contents active. rf_tax_id (Numeric) Filter content UniParc entry NIH-NCBI Taxon ID. can supply multiple values. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"list correspond UniParc entry.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"\"POST https://ebi.ac.uk/proteins/api/uniparc/sequence\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_uniparc_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UniParc Entries by Sequence — rba_uniprot_uniparc_sequence","text":"","code":"# \\donttest{ rba_uniprot_uniparc_sequence(\"GMRSCPRGCSQRGRCENGRCVCNPGYTGEDC\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"Retrieve natural variant annotations sequence using UniProt protein   accession, dbSNP HGVS expression.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"","code":"rba_uniprot_variation(   id,   id_type,   source_type = NULL,   consequence_type = NULL,   wild_type = NULL,   alternative_sequence = NULL,   location = NULL,   save_peff = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"id ID can either UniProt primary secondary accession, NIH-NCBI dbSNP ID HGVS expression. NIH-NCBI dbSNP id HGVS Expression. id_type type supplied ID argument, one : \"uniprot\", \"dbsnp\" \"hgvs\" source_type Variation's source type. can choose two : \"UniProt\", \"large scale study\" /\"mixed\". consequence_type Variation's consequence type. can choose two : \"missense\", \"stop gained\" \"stop lost\". wild_type Wild type amino acid. Accepted values IUPAC single-letter amino acid (e.g. D    Aspartic acid) \"*\" stop codon. can supply 20 values. alternative_sequence Alternative amino acid. Accepted values IUPAC single-letter amino acid (e.g. D    Aspartic acid) \"*\" stop codon \"-\" deletion. can supply 20 values. location valid amino acid range (e.g. 10-25) within sequence range variation occurs. can supply 20 values. save_peff Logical Character: FALSE: (default) save PEFF file, just return list object. TRUE: Save PEFF file automatically-generated path. Character string: valid file path save PEFF file. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"list element list corresponds UniProt   protein entry.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"\"GET https://www.ebi.ac.uk/proteins/api/variation/dbsnp/dbid\"   \"GET https://www.ebi.ac.uk/proteins/api/variation/hgvs/hgvs\"   \"GET https://www.ebi.ac.uk/proteins/api/variation/accession\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get natural variants in UniProt by NIH-NCBI SNP database identifier — rba_uniprot_variation","text":"","code":"# \\donttest{ rba_uniprot_variation(id = \"rs121434451\", id_type = \"dbsnp\") # } # \\donttest{ rba_uniprot_variation(id = \"NC_000008.11:g.22119227C>T\", id_type = \"hgvs\") # } # \\donttest{ rba_uniprot_variation(id = \"O43593\", id_type = \"uniprot\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search UniProt Natural Variants — rba_uniprot_variation_search","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"Using function, can search retrieve   Natural variant(s)   annotated protein's sequences. may also refine   search modifiers source type, disease etc. See   \"Arguments section\" information.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"","code":"rba_uniprot_variation_search(   accession = NULL,   source_type = NULL,   consequence_type = NULL,   wild_type = NULL,   alternative_sequence = NULL,   location = NULL,   disease = NULL,   omim = NULL,   evidence = NULL,   taxid = NULL,   db_type = NULL,   db_id = NULL,   save_peff = FALSE,   ... )"},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"accession UniProtKB primary secondary accession(s). can supply 100 accession numbers. source_type Variation's source type. can choose two : \"UniProt\", \"large scale study\" /\"mixed\". consequence_type Variation's consequence type. can choose two : \"missense\", \"stop gained\" \"stop lost\". wild_type Wild type amino acid. Accepted values IUPAC single-letter amino acid (e.g. D    Aspartic acid) \"*\" stop codon. can supply 20 values. alternative_sequence Alternative amino acid. Accepted values IUPAC single-letter amino acid (e.g. D    Aspartic acid) \"*\" stop codon \"-\" deletion. can supply 20 values. location valid amino acid range (e.g. 10-25) within sequence range variation occurs. can supply 20 values. disease Human disease associated sequence variation. Accepted values disease name (e.g. Alzheimer disease 18), partial disease name (Alzheimer) /disease acronym (e.g. AD). can supply 20 values. omim OMIM ID associated variation. can supply 20 values. evidence Pubmed ID variation's citation can supply 20 values. taxid NIH-NCBI Taxon ID. can supply 20 taxon IDs. db_type cross-reference database variation. can supply two following: \"dbSNP\": NIH-NCBI dbSNP database. \"cosmic curate\": COSMIC (Catalogue Somatic Mutations Cancer) \"ClinVar\": NIH-NCBI ClinVar db_id variation ID Cross-reference (external) database. can supply 20 values. save_peff Logical Character: FALSE: (default) save PEFF file, just return list object. TRUE: Save PEFF file automatically-generated path. Character string: valid file path save PEFF file. ... rbioapi option(s). See rba_options's arguments manual information available options.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"List element corresponds one UniProt entity returned   search query. element sub-list containing   information UniProt Variation.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"Note search function. Thus, required fill   every argument; may use whatever combinations arguments see   fit query.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"corresponding-api-resources","dir":"Reference","previous_headings":"","what":"Corresponding API Resources","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"\"GET https://www.ebi.ac.uk/proteins/api/variation\"","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"UniProt Consortium, UniProt: universal protein   knowledgebase 2021, Nucleic Acids Research, Volume 49, Issue D1,   8 January 2021, Pages D480–D489, https://doi.org/10.1093/nar/gkaa1100 Andrew Nightingale, Ricardo Antunes, Emanuele Alpi, Borisas   Bursteinas, Leonardo Gonzales, Wudong Liu, Jie Luo, Guoying Qi, Edd   Turner, Maria Martin, Proteins API: accessing key integrated protein   genome information, Nucleic Acids Research, Volume 45, Issue W1,   3 July 2017, Pages W539–W544, https://doi.org/10.1093/nar/gkx237 Proteins API   Documentation Citations note   UniProt website","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rba_uniprot_variation_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search UniProt Natural Variants — rba_uniprot_variation_search","text":"","code":"# \\donttest{ rba_uniprot_variation_search(accession = \"P05067\") # } # \\donttest{ rba_uniprot_variation_search(disease = \"alzheimer disease, 18\") # } # \\donttest{ rba_uniprot_variation_search(disease = \"alzheimer\",     wild_type = \"A\", alternative_sequence = \"T\") # }"},{"path":"https://rbioapi.moosa-r.com/reference/rbioapi.html","id":null,"dir":"Reference","previous_headings":"","what":"rbioapi: User-Friendly R Interface to Biologic Web Services' API — rbioapi","title":"rbioapi: User-Friendly R Interface to Biologic Web Services' API — rbioapi","text":"Currently fully supports Enrichr, JASPAR, miEAA, PANTHER, Reactome, STRING, UniProt! goal rbioapi provide user-friendly consistent interface biological databases services: way insulates user technicalities using web services API creates unified easy--use interface biological medical web services. ongoing project; New databases services added periodically. Feel free suggest databases services often use.","code":""},{"path":"https://rbioapi.moosa-r.com/reference/rbioapi.html","id":"supported-database-services","dir":"Reference","previous_headings":"","what":"Supported Database/Services","title":"rbioapi: User-Friendly R Interface to Biologic Web Services' API — rbioapi","text":"Enrichr JASPAR MiEAA PANTHER Reactome STRING UniProt","code":""},{"path":[]},{"path":"https://rbioapi.moosa-r.com/reference/rbioapi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rbioapi: User-Friendly R Interface to Biologic Web Services' API — rbioapi","text":"Maintainer: Moosa Rezwani moosa.rezwani@gmail.com (ORCID)","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-076-current-cran-and-github-version","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.6 (Current CRAN and GitHub version)","title":"rbioapi 0.7.6 (Current CRAN and GitHub version)","text":"CRAN release: 2022-04-05 Submitted paper Bioinformatics journal (DOI: 10.1093/bioinformatics/btac172). Added vignette article: “-Representation (Enrichment) Analysis”\" Updated citations information. Moved JASPAR 2022. Added new API endpoints UniProt PANTHER. Minor internal improvements.","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-075","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.5","title":"rbioapi 0.7.5","text":"Moved STRING database version 11.5","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-074","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.4","title":"rbioapi 0.7.4","text":"CRAN release: 2021-06-22 Bug fixes minor improvements.","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-073","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.3","title":"rbioapi 0.7.3","text":"Improved internal functions.","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-072","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.2","title":"rbioapi 0.7.2","text":"JASPAR supported.","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-071","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.1","title":"rbioapi 0.7.1","text":"Enrichr supported.","code":""},{"path":"https://rbioapi.moosa-r.com/news/index.html","id":"rbioapi-070","dir":"Changelog","previous_headings":"","what":"rbioapi 0.7.0","title":"rbioapi 0.7.0","text":"CRAN release: 2021-04-30 package submitted CRAN","code":""}]
